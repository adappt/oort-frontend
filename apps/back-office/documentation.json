{
    "pipes": [],
    "interfaces": [
        {
            "name": "DialogData",
            "id": "interface-DialogData-fcfeba3684417bcc05401a75c510fc6f8b0d36463b6082ad63c461951c836d2300f2c6bba4ce8b2ea49b0ba6bb1d6d6c639f18b9d54fa7fecc746a9b1c1b97cb",
            "file": "apps/back-office/src/app/components/view-settings-modal/view-settings-modal.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  TabsModule,\n  DialogModule,\n  ButtonModule,\n  TooltipModule,\n  SelectMenuModule,\n  FormWrapperModule,\n  IconModule,\n  ToggleModule,\n  AlertModule,\n} from '@oort-front/ui';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ViewIconSelectorComponent } from '../view-icon-selector/view-icon-selector.component';\nimport {\n  AccessModule,\n  ApplicationService,\n  Page,\n  Dashboard,\n  Step,\n  UnsubscribeComponent,\n  WorkflowService,\n  AccessData,\n  SearchMenuModule,\n  AuthService,\n  Application,\n  DashboardService,\n} from '@oort-front/shared';\nimport { debounceTime, takeUntil } from 'rxjs';\nimport { get, isNil } from 'lodash';\nimport { AbilityModule } from '@casl/angular';\nimport { DashboardFilterSettingsComponent } from '../dashboard-filter-settings/dashboard-filter-settings.component';\n\n/** Settings Dialog Data */\ninterface DialogData {\n  type: 'page' | 'step';\n  applicationId: string;\n  page?: Page;\n  step?: Step;\n  icon?: string;\n  visible?: boolean;\n  accessData: AccessData;\n  canUpdate: boolean;\n  dashboard?: Dashboard;\n}\n\n/**\n * Application page and step settings component.\n * Available settings: icon, access, visibility and duplicate page.\n */\n@Component({\n  selector: 'app-view-settings',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TabsModule,\n    DialogModule,\n    IconModule,\n    ButtonModule,\n    TooltipModule,\n    SelectMenuModule,\n    FormWrapperModule,\n    TranslateModule,\n    ViewIconSelectorComponent,\n    AccessModule,\n    ToggleModule,\n    OverlayModule,\n    SearchMenuModule,\n    AlertModule,\n    AbilityModule,\n    DashboardFilterSettingsComponent,\n  ],\n  templateUrl: './view-settings-modal.component.html',\n  styleUrls: ['./view-settings-modal.component.scss'],\n})\nexport class ViewSettingsModalComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  /** Reactive Form */\n  public settingsForm!: ReturnType<typeof this.createSettingsForm>;\n  /** Event to parent subscribe and update its own object after changes */\n  public onUpdate = new EventEmitter();\n  /** Show duplicate menu */\n  public showDuplicateMenu = false;\n  /** List of available applications */\n  public applications: Application[] = [];\n  /** Dashboard object */\n  public dashboard?: Dashboard;\n  /** Default grid options */\n  public defaultGridOptions = {\n    minCols: 8,\n    fixedRowHeight: 200,\n    margin: 10,\n  };\n  /** Step object */\n  private step?: Step;\n  /** Page object */\n  private page?: Page;\n  /** Show dashboard filter */\n  public showFilter!: boolean;\n\n  /**\n   * Common settings of pages / steps.\n   *\n   * @param dialogRef Dialog ref\n   * @param data Data that will be passed to the dialog\n   * @param fb Angular form builder\n   * @param workflowService Shared workflow service\n   * @param applicationService Shared application service\n   * @param authService Shared authentication service\n   * @param dashboardService Shared dashboard service\n   */\n  constructor(\n    public dialogRef: DialogRef<ViewSettingsModalComponent>,\n    @Inject(DIALOG_DATA) public data: DialogData,\n    private fb: FormBuilder,\n    private workflowService: WorkflowService,\n    private applicationService: ApplicationService,\n    private authService: AuthService,\n    private dashboardService: DashboardService\n  ) {\n    super();\n    if (this.data) {\n      this.page = this.data.page;\n      this.step = this.data.step;\n      this.dashboard = this.data.dashboard;\n    }\n  }\n\n  ngOnInit(): void {\n    this.settingsForm = this.createSettingsForm();\n    if (!this.data.canUpdate) {\n      this.settingsForm.disable();\n    }\n\n    // Listen to icon updates\n    this.settingsForm?.controls.icon.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value: string | null) => {\n        if (value) {\n          this.onUpdateIcon(value);\n        }\n      });\n\n    // Listen to visibility updates (only for pages)\n    if (this.data.type === 'page') {\n      this.settingsForm?.controls.visible.valueChanges\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((value: boolean | null) => {\n          if (!isNil(value)) {\n            this.onUpdateVisibility(value);\n          }\n        });\n    }\n\n    if (this.dashboard) {\n      // Listen to grid settings updates\n      this.settingsForm?.controls.gridOptions?.valueChanges\n        .pipe(debounceTime(500), takeUntil(this.destroy$))\n        .subscribe((value: any) => {\n          // update only if the form is valid\n          if (this.settingsForm?.controls.gridOptions?.valid) {\n            this.onUpdateGridOptions(value);\n          }\n        });\n    }\n  }\n\n  /**\n   * Save changes when access is updated.\n   *\n   * @param event new permissions object\n   */\n  public onUpdateAccess(event: any): void {\n    if (this.data.type === 'step' && this.step) {\n      const callback = (permissions: any) => {\n        // Updates parent component\n        const updates = { permissions };\n        this.onUpdate.emit(updates);\n      };\n      this.workflowService.updateStepPermissions(\n        this.step as Step,\n        event,\n        callback\n      );\n    } else {\n      const callback = (permissions: any) => {\n        this.page = {\n          ...this.page,\n          canDelete: permissions.canDelete,\n          canUpdate: permissions.canUpdate,\n          canSee: permissions.canSee,\n        };\n        // Updates parent component\n        const updates = { permissions };\n        this.onUpdate.emit(updates);\n      };\n      this.page &&\n        this.applicationService.updatePagePermissions(\n          this.page as Page,\n          event,\n          callback\n        );\n    }\n  }\n\n  /**\n   * Duplicate page, in a new (or same) application\n   *\n   * @param event duplication event\n   */\n  public onDuplicate(event: any): void {\n    const callback = () => {\n      this.dialogRef.close();\n    };\n    this.applicationService.duplicatePage(\n      event.id,\n      {\n        pageId: this.page?.id,\n        stepId: this.step?.id,\n      },\n      callback\n    );\n  }\n\n  /**\n   * Toggle visibility of application menu.\n   * Get applications to use duplicate setting.\n   */\n  public onAppSelection(): void {\n    this.showDuplicateMenu = !this.showDuplicateMenu;\n    const authSubscription = this.authService.user$.subscribe(\n      (user: any | null) => {\n        if (user) {\n          this.applications = user.applications;\n        }\n      }\n    );\n    authSubscription.unsubscribe();\n  }\n\n  /**\n   * Create the settings form\n   *\n   * @returns Form group\n   */\n  private createSettingsForm() {\n    return this.fb.group({\n      // initializes icon field with data info\n      icon: this.fb.control(this.data.icon ?? ''),\n      visible: this.fb.control(this.data.visible ?? true),\n      ...(this.dashboard && {\n        gridOptions: this.fb.group({\n          minCols: this.fb.control(\n            get<number>(\n              this.dashboard.gridOptions,\n              'minCols',\n              this.defaultGridOptions.minCols\n            ),\n            Validators.compose([Validators.min(4), Validators.max(24)])\n          ),\n          fixedRowHeight: this.fb.control(\n            get<number>(\n              this.dashboard.gridOptions,\n              'fixedRowHeight',\n              this.defaultGridOptions.fixedRowHeight\n            ),\n            Validators.min(50)\n          ),\n          margin: this.fb.control(\n            get<number>(\n              this.dashboard.gridOptions,\n              'margin',\n              this.defaultGridOptions.margin\n            ),\n            Validators.min(0)\n          ),\n        }),\n      }),\n    });\n  }\n\n  /**\n   * Save changes when icon is updated.\n   *\n   * @param icon new icon name\n   */\n  private onUpdateIcon(icon: string): void {\n    if (this.data.type === 'step' && this.step) {\n      const callback = () => {\n        this.step = {\n          ...this.step,\n          icon,\n        };\n        // Updates parent component\n        const updates = { icon };\n        this.onUpdate.emit(updates);\n      };\n      this.workflowService.updateStepIcon(this.step as Step, icon, callback);\n    } else {\n      const callback = () => {\n        this.page = {\n          ...this.page,\n          icon,\n        };\n        // Updates parent component\n        const updates = { icon };\n        this.onUpdate.emit(updates);\n      };\n      this.page &&\n        this.applicationService.changePageIcon(\n          this.page as Page,\n          icon,\n          callback\n        );\n    }\n  }\n\n  /**\n   * Save page visibility on change.\n   *\n   * @param visible boolean\n   */\n  private onUpdateVisibility(visible: boolean): void {\n    const callback = () => {\n      this.page = {\n        ...this.page,\n        visible,\n      };\n      // Updates parent component\n      const updates = { visible };\n      this.onUpdate.emit(updates);\n    };\n    this.applicationService.togglePageVisibility(\n      {\n        id: this.page?.id,\n        visible,\n      },\n      callback\n    );\n  }\n\n  /**\n   * Save grid settings on change.\n   *\n   * @param gridOptions grid options\n   */\n  public onUpdateGridOptions(gridOptions: any): void {\n    gridOptions = {\n      ...gridOptions,\n      // block adding more columns by dragging or resizing\n      maxCols: gridOptions.minCols,\n    };\n\n    const callback = () => {\n      this.dashboard = {\n        ...this.dashboard,\n        gridOptions,\n      };\n      // Updates parent component\n      const updates = { gridOptions };\n      this.onUpdate.emit(updates);\n    };\n    this.dashboardService.editGridOptions(gridOptions, callback);\n  }\n}\n",
            "properties": [
                {
                    "name": "accessData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccessData",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "applicationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "canUpdate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "dashboard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dashboard",
                    "optional": true,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Page",
                    "optional": true,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "step",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Step",
                    "optional": true,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"page\" | \"step\"",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "visible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 46
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "description": "<p>Settings Dialog Data</p>\n",
            "rawdescription": "\nSettings Dialog Data",
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AddApiConfigurationComponent",
            "id": "component-AddApiConfigurationComponent-2900b68c990aef6e6df595802ef3e1c8ef610d694f57dcc1b05322cb7eab0a3cb3df5047a9d90acbe23e419e30753bc4b4c4b2100af263b790589eeb7e831152",
            "file": "apps/back-office/src/app/dashboard/pages/api-configurations/components/add-api-configuration/add-api-configuration.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-api-configuration",
            "styleUrls": [
                "./add-api-configuration.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-api-configuration.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apiForm",
                    "defaultValue": "this.fb.group({\n    name: ['', [Validators.required, Validators.pattern(apiValidator)]],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Api reactive form group</p>\n",
                    "line": 16,
                    "rawdescription": "\nApi reactive form group"
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogRef<AddApiConfigurationComponent>",
                    "optional": false,
                    "description": "Dialog ref",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Add API configuration component (modal)</p>\n",
            "rawdescription": "\n\nAdd API configuration component (modal)\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { DialogRef } from '@angular/cdk/dialog';\nimport { apiValidator } from '../../../../../utils/nameValidation';\n\n/**\n * Add API configuration component (modal)\n */\n@Component({\n  selector: 'app-add-api-configuration',\n  templateUrl: './add-api-configuration.component.html',\n  styleUrls: ['./add-api-configuration.component.scss'],\n})\nexport class AddApiConfigurationComponent {\n  /** Api reactive form group */\n  apiForm = this.fb.group({\n    name: ['', [Validators.required, Validators.pattern(apiValidator)]],\n  });\n\n  /** @returns name for the API configuration */\n  get name(): AbstractControl | null {\n    return this.apiForm.get('name');\n  }\n\n  /**\n   * Add API configuration component\n   *\n   * @param fb Angular form builder\n   * @param dialogRef Dialog ref\n   */\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: DialogRef<AddApiConfigurationComponent>\n  ) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-api-configuration.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Add API configuration component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "DialogRef<AddApiConfigurationComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "rawdescription": "\n\nAdd API configuration component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 833,
                            "end": 835,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 827,
                            "end": 832,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 869,
                            "end": 878,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialogRef"
                        },
                        "type": "DialogRef<AddApiConfigurationComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 863,
                            "end": 868,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog ref</p>\n"
                    }
                ]
            },
            "accessors": {
                "name": {
                    "name": "name",
                    "getSignature": {
                        "name": "name",
                        "type": "",
                        "returnType": "AbstractControl | null",
                        "line": 21,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 649,
                                "end": 689,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 650,
                                    "end": 657,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>name for the API configuration</p>\n"
                            }
                        ]
                    }
                }
            },
            "templateData": "<ui-dialog size=\"small\">\n  <ng-container ngProjectAs=\"header\">\n    <h3 class=\"font-semibold\">\n      {{ 'models.apiConfiguration.new' | translate }}\n    </h3>\n  </ng-container>\n  <ng-container ngProjectAs=\"content\">\n    <form [formGroup]=\"apiForm\" class=\"flex flex-col\">\n      <div\n        [uiErrorMessage]=\"\n          'components.apiConfiguration.create.errors.name' | translate\n        \"\n        [uiErrorMessageIf]=\"name?.errors && name?.touched\"\n        uiFormFieldDirective\n      >\n        <label>{{ 'common.name' | translate }}</label>\n        <input\n          formControlName=\"name\"\n          type=\"text\"\n          [placeholder]=\"'common.placeholder.name' | translate\"\n        />\n      </div>\n    </form>\n  </ng-container>\n  <ng-container ngProjectAs=\"actions\">\n    <ui-button [uiDialogClose] variant=\"default\">{{\n      'common.close' | translate\n    }}</ui-button>\n    <ui-button\n      category=\"secondary\"\n      variant=\"primary\"\n      [uiDialogClose]=\"apiForm.value\"\n      cdkFocusInitial\n      [disabled]=\"!apiForm.valid\"\n    >\n      {{ 'common.create' | translate }}\n    </ui-button>\n  </ng-container>\n</ui-dialog>\n"
        },
        {
            "name": "AddFormModalComponent",
            "id": "component-AddFormModalComponent-88ebdf5c4fbfbde8a4b2fba5df777f9e4c08f5c803929212fbb82428fa717c2bf9f355d1c925d5f5981135749f4f69f26c6f8d70a687df065731214d55910a1c",
            "file": "apps/back-office/src/app/components/add-form-modal/add-form-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-form-modal",
            "styleUrls": [
                "./add-form-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-form-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogRef<AddFormModalComponent>",
                    "optional": false,
                    "description": "Dialog ref",
                    "line": 84,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "form",
                    "defaultValue": "this.fb.group({\n    name: ['', Validators.required],\n    newResource: this.fb.nonNullable.control(true),\n    resource: [null],\n    inheritsTemplate: this.fb.nonNullable.control(false),\n    template: null,\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Form group</p>\n",
                    "line": 54,
                    "rawdescription": "\nForm group",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "templates",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Form[]",
                    "optional": false,
                    "description": "<p>Available templates</p>\n",
                    "line": 62,
                    "rawdescription": "\nAvailable templates",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getResource",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalled on resource input change.\nLoad the templates linked to that resource.\n\n",
                    "description": "<p>Called on resource input change.\nLoad the templates linked to that resource.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3452,
                                "end": 3454,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3446,
                                "end": 3451,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>resource id</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLoad the resources and build the form.",
                    "description": "<p>Load the resources and build the form.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormWrapperModule",
                    "type": "module"
                },
                {
                    "name": "ToggleModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "DialogModule",
                    "type": "module"
                },
                {
                    "name": "TooltipModule",
                    "type": "module"
                },
                {
                    "name": "RadioModule",
                    "type": "module"
                },
                {
                    "name": "IconModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "SelectMenuModule",
                    "type": "module"
                },
                {
                    "name": "FormWrapperModule",
                    "type": "module"
                },
                {
                    "name": "ChipModule",
                    "type": "module"
                },
                {
                    "name": "ResourceSelectComponent",
                    "type": "component"
                }
            ],
            "description": "<p>Add form component (modal)</p>\n",
            "rawdescription": "\n\nAdd form component (modal)\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { GET_RESOURCE_BY_ID } from './graphql/queries';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  ToggleModule,\n  TooltipModule,\n  RadioModule,\n  IconModule,\n  ButtonModule,\n  SelectMenuModule,\n  ChipModule,\n  FormWrapperModule,\n} from '@oort-front/ui';\nimport { DialogModule } from '@oort-front/ui';\nimport { DialogRef } from '@angular/cdk/dialog';\nimport {\n  Form,\n  ResourceQueryResponse,\n  ResourceSelectComponent,\n} from '@oort-front/shared';\n\n/**\n * Add form component (modal)\n */\n@Component({\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormWrapperModule,\n    ToggleModule,\n    TranslateModule,\n    DialogModule,\n    TooltipModule,\n    RadioModule,\n    IconModule,\n    ButtonModule,\n    SelectMenuModule,\n    FormWrapperModule,\n    ChipModule,\n    ResourceSelectComponent,\n  ],\n  selector: 'app-add-form-modal',\n  templateUrl: './add-form-modal.component.html',\n  styleUrls: ['./add-form-modal.component.scss'],\n})\nexport class AddFormModalComponent implements OnInit {\n  /** Form group */\n  public form = this.fb.group({\n    name: ['', Validators.required],\n    newResource: this.fb.nonNullable.control(true),\n    resource: [null],\n    inheritsTemplate: this.fb.nonNullable.control(false),\n    template: null,\n  });\n  /** Available templates */\n  public templates: Form[] = [];\n\n  /**\n   * Selected template\n   *\n   * @returns {Form} selected template\n   */\n  get selectedTemplate() {\n    return this.templates.find(\n      (x) => x.id === this.form.get('template')?.value\n    );\n  }\n\n  /**\n   * Add form modal\n   *\n   * @param fb Angular form builder\n   * @param dialogRef Dialog ref\n   * @param apollo Apollo service\n   */\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: DialogRef<AddFormModalComponent>,\n    private apollo: Apollo\n  ) {}\n\n  /** Load the resources and build the form. */\n  ngOnInit(): void {\n    this.form.get('newResource')?.valueChanges.subscribe((value: boolean) => {\n      if (value) {\n        this.form.get('resource')?.clearValidators();\n        this.form.patchValue({\n          resource: null,\n          inheritsTemplate: false,\n          template: null,\n        });\n      } else {\n        this.form.get('resource')?.setValidators([Validators.required]);\n      }\n      this.form.get('resource')?.updateValueAndValidity();\n    });\n\n    this.form\n      .get('inheritsTemplate')\n      ?.valueChanges.subscribe((value: boolean) => {\n        if (value) {\n          this.form.get('template')?.setValidators([Validators.required]);\n        } else {\n          this.form.get('template')?.clearValidators();\n          this.form.patchValue({\n            template: null,\n          });\n        }\n        this.form.get('template')?.updateValueAndValidity();\n      });\n\n    this.form\n      .get('resource')\n      ?.valueChanges.subscribe((value: string | null) => {\n        if (value) {\n          this.getResource(value);\n        } else {\n          this.templates = [];\n        }\n        this.form.patchValue({\n          template: null,\n        });\n      });\n  }\n\n  /**\n   * Called on resource input change.\n   * Load the templates linked to that resource.\n   *\n   * @param id resource id\n   */\n  getResource(id: string): void {\n    this.apollo\n      .query<ResourceQueryResponse>({\n        query: GET_RESOURCE_BY_ID,\n        variables: {\n          id,\n        },\n      })\n      .subscribe(({ data }) => {\n        this.templates = data.resource.forms || [];\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-form-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Add form modal</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "DialogRef<AddFormModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 73,
                "rawdescription": "\n\nAdd form modal\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1877,
                            "end": 1879,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1871,
                            "end": 1876,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1913,
                            "end": 1922,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialogRef"
                        },
                        "type": "DialogRef<AddFormModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1907,
                            "end": 1912,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog ref</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1946,
                            "end": 1952,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1940,
                            "end": 1945,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "selectedTemplate": {
                    "name": "selectedTemplate",
                    "getSignature": {
                        "name": "selectedTemplate",
                        "type": "",
                        "returnType": "",
                        "line": 69,
                        "rawdescription": "\n\nSelected template\n\n",
                        "description": "<p>Selected template</p>\n",
                        "jsdoctags": [
                            {
                                "pos": 1668,
                                "end": 1705,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 1669,
                                    "end": 1676,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>selected template</p>\n",
                                "typeExpression": {
                                    "pos": 1677,
                                    "end": 1683,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 312,
                                    "type": {
                                        "pos": 1678,
                                        "end": 1682,
                                        "flags": 8388608,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 180,
                                        "typeName": {
                                            "pos": 1678,
                                            "end": 1682,
                                            "flags": 8388608,
                                            "modifierFlagsCache": 0,
                                            "transformFlags": 0,
                                            "kind": 79,
                                            "escapedText": "Form"
                                        }
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<ui-dialog size=\"medium\">\n  <ng-container ngProjectAs=\"header\">\n    <h3 class=\"font-semibold\">{{ 'models.form.new' | translate }}</h3>\n  </ng-container>\n  <ng-container ngProjectAs=\"content\">\n    <form [formGroup]=\"form\">\n      <div class=\"flex flex-col\">\n        <div uiFormFieldDirective>\n          <label>{{ 'common.name' | translate }}</label>\n          <input\n            formControlName=\"name\"\n            type=\"text\"\n            placeholder=\"Enter a name\"\n          />\n        </div>\n        <div\n          class=\"flex flex-col mb-5 gap-1\"\n          formControlName=\"newResource\"\n          uiRadioGroupDirective=\"newResourceOptions\"\n        >\n          <ui-radio [value]=\"true\">\n            <ng-container ngProjectAs=\"label\">\n              <span class=\"flex items-center gap-1\">\n                {{ 'components.form.create.choice.resource' | translate }}\n                <ui-icon\n                  class=\"cursor-help\"\n                  [size]=\"18\"\n                  icon=\"info_outline\"\n                  variant=\"grey\"\n                  [uiTooltip]=\"\n                    'components.form.create.tooltip.resource' | translate\n                  \"\n                >\n                </ui-icon>\n              </span>\n            </ng-container>\n          </ui-radio>\n          <ui-radio [value]=\"false\">\n            <ng-container ngProjectAs=\"label\">\n              <span class=\"flex items-center gap-1\">\n                {{ 'components.form.create.choice.inherit' | translate }}\n                <ui-icon\n                  class=\"cursor-help\"\n                  [size]=\"18\"\n                  icon=\"info_outline\"\n                  variant=\"grey\"\n                  [uiTooltip]=\"\n                    'components.form.create.tooltip.inherit' | translate\n                  \"\n                >\n                </ui-icon>\n              </span>\n            </ng-container>\n          </ui-radio>\n        </div>\n        <ng-container *ngIf=\"!form.value.newResource\">\n          <div uiFormFieldDirective>\n            <label>{{\n              'components.form.create.template.title' | translate\n            }}</label>\n            <shared-resource-select\n              formControlName=\"resource\"\n              [placeholder]=\"\n                'components.form.create.template.selectResource' | translate\n              \"\n            ></shared-resource-select>\n          </div>\n          <ng-container *ngIf=\"form.controls.resource.value !== null\">\n            <ui-toggle formControlName=\"inheritsTemplate\" class=\"mb-5\">\n              <ng-container ngProjectAs=\"label\">\n                {{ 'components.form.create.choice.template' | translate }}\n                <ui-icon\n                  class=\"ml-1 cursor-help self-center\"\n                  icon=\"info_outline\"\n                  variant=\"grey\"\n                  [size]=\"18\"\n                  [uiTooltip]=\"\n                    'components.form.create.tooltip.template' | translate\n                  \"\n                ></ui-icon>\n              </ng-container>\n            </ui-toggle>\n            <ng-container *ngIf=\"form.controls.inheritsTemplate.value\">\n              <div uiFormFieldDirective [outline]=\"false\">\n                <label>{{\n                  'components.form.create.template.from' | translate\n                }}</label>\n                <ui-select-menu\n                  formControlName=\"template\"\n                  [customTemplate]=\"{\n                    template: formOptionTmpl,\n                    context: { $implicit: selectedTemplate }\n                  }\"\n                >\n                  <ui-select-option\n                    *ngFor=\"let template of templates\"\n                    [value]=\"template.id\"\n                  >\n                    <ng-container\n                      *ngTemplateOutlet=\"\n                        formOptionTmpl;\n                        context: { $implicit: template }\n                      \"\n                    ></ng-container>\n                  </ui-select-option>\n                </ui-select-menu>\n              </div>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </form>\n  </ng-container>\n  <ng-container ngProjectAs=\"actions\">\n    <ui-button [uiDialogClose] variant=\"default\">{{\n      'common.close' | translate\n    }}</ui-button>\n    <ui-button\n      category=\"secondary\"\n      variant=\"primary\"\n      [uiDialogClose]=\"form.value\"\n      cdkFocusInitial\n      [disabled]=\"!form.valid\"\n    >\n      {{ 'common.create' | translate }}\n    </ui-button>\n  </ng-container>\n</ui-dialog>\n\n<!-- Template to display templates available -->\n<ng-template #formOptionTmpl let-template>\n  <div class=\"flex gap-2 items-center\">\n    <div uiChipList *ngIf=\"template?.core\">\n      <ui-chip class=\"!rounded-lg\" variant=\"grey\">\n        {{ 'models.form.core' | translate }}\n      </ui-chip>\n    </div>\n    {{ template?.name }}\n  </div>\n</ng-template>\n"
        },
        {
            "name": "AddPageComponent",
            "id": "component-AddPageComponent-b69aa9f468f0e23795a9fa14e6cf976d79bc688ee9ae1f4369197c76596e85f14319897722523f2c04aa59fe0478203acd1fe5a90775323778eb10a690520f82",
            "file": "apps/back-office/src/app/application/pages/add-page/add-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-page",
            "styleUrls": [
                "./add-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "availableWidgets",
                    "defaultValue": "WIDGET_TYPES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "<p>Available widgets for addition</p>\n",
                    "line": 37,
                    "rawdescription": "\nAvailable widgets for addition",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "contentTypes",
                    "defaultValue": "CONTENT_TYPES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Available content types</p>\n",
                    "line": 35,
                    "rawdescription": "\nAvailable content types",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 63,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<FormsQueryResponse>",
                    "optional": false,
                    "description": "<p>Forms query</p>\n",
                    "line": 39,
                    "rawdescription": "\nForms query",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageForm",
                    "defaultValue": "this.fb.group({\n    type: ['', Validators.required],\n    content: [''],\n    newForm: [false],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>New page form</p>\n",
                    "line": 41,
                    "rawdescription": "\nNew page form",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>Current step in stepper</p>\n",
                    "line": 47,
                    "rawdescription": "\nCurrent step in stepper",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "isStepValid",
                    "args": [
                        {
                            "name": "step",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCheck if step is valid or not\n\n",
                    "description": "<p>Check if step is valid or not</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3100,
                                "end": 3104,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "step"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3094,
                                "end": 3099,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>step index</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 3122,
                                "end": 3129,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>is step valid</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd a new form.\n",
                    "description": "<p>Add a new form.</p>\n",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "onAddWidget",
                    "args": [
                        {
                            "name": "widget",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 221,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd a new widget as a dashboard page.\nSkip the onSubmit method, and use custom event handling to call application service to add the page with new content.\n\n",
                    "description": "<p>Add a new widget as a dashboard page.\nSkip the onSubmit method, and use custom event handling to call application service to add the page with new content.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6214,
                                "end": 6220,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "widget"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6208,
                                "end": 6213,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>new widget.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGo to previous step.\n",
                    "description": "<p>Go to previous step.</p>\n"
                },
                {
                    "name": "onNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGo to next step.\n",
                    "description": "<p>Go to next step.</p>\n"
                },
                {
                    "name": "onSearchChange",
                    "args": [
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 243,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate query based on text search.\n\n",
                    "description": "<p>Update query based on text search.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6649,
                                "end": 6655,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "search"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6643,
                                "end": 6648,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Search text from the graphql select</p>\n"
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form to application service for creation of a new page\n",
                    "description": "<p>Submit form to application service for creation of a new page</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Add page component.</p>\n",
            "rawdescription": "\n\nAdd page component.\n",
            "type": "component",
            "sourceCode": "import { Apollo, QueryRef } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {\n  ContentType,\n  CONTENT_TYPES,\n  WIDGET_TYPES,\n  ApplicationService,\n  UnsubscribeComponent,\n  FormsQueryResponse,\n  AddFormMutationResponse,\n} from '@oort-front/shared';\nimport { takeUntil } from 'rxjs';\nimport { ADD_FORM } from './graphql/mutations';\nimport { GET_FORMS } from './graphql/queries';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SnackbarService } from '@oort-front/ui';\nimport { Dialog } from '@angular/cdk/dialog';\n\n/** Number of items per page */\nconst ITEMS_PER_PAGE = 10;\n/** Widget types that can be used as single widget page */\nconst SINGLE_WIDGET_PAGE_TYPES = ['grid', 'map', 'summaryCard', 'tabs'];\n\n/**\n * Add page component.\n */\n@Component({\n  selector: 'app-add-page',\n  templateUrl: './add-page.component.html',\n  styleUrls: ['./add-page.component.scss'],\n})\nexport class AddPageComponent extends UnsubscribeComponent implements OnInit {\n  /** Available content types */\n  public contentTypes = CONTENT_TYPES;\n  /** Available widgets for addition */\n  public availableWidgets: any[] = WIDGET_TYPES;\n  /** Forms query */\n  public formsQuery!: QueryRef<FormsQueryResponse>;\n  /** New page form */\n  public pageForm = this.fb.group({\n    type: ['', Validators.required],\n    content: [''],\n    newForm: [false],\n  });\n  /** Current step in stepper */\n  public step = 1;\n\n  /**\n   * Add page component\n   *\n   * @param fb Angular form builder\n   * @param apollo Apollo service\n   * @param applicationService Shared application service\n   * @param dialog Dialog service\n   * @param snackBar Shared snackbar service\n   * @param translate Angular translate service\n   */\n  constructor(\n    private fb: FormBuilder,\n    private apollo: Apollo,\n    private applicationService: ApplicationService,\n    public dialog: Dialog,\n    private snackBar: SnackbarService,\n    private translate: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.pageForm.get('type')?.valueChanges.subscribe((type) => {\n      const contentControl = this.pageForm.controls.content;\n      if (type === ContentType.form) {\n        this.formsQuery = this.apollo.watchQuery<FormsQueryResponse>({\n          query: GET_FORMS,\n          variables: {\n            first: ITEMS_PER_PAGE,\n            sortField: 'name',\n          },\n        });\n        contentControl.setValidators([Validators.required]);\n        contentControl.updateValueAndValidity();\n      } else {\n        contentControl.setValidators(null);\n        contentControl.setValue(null);\n        contentControl.updateValueAndValidity();\n      }\n      this.onNext();\n    });\n\n    // Set the available widgets that can directly be added as single widget dashboard\n    this.availableWidgets = this.availableWidgets.filter((widget: any) => {\n      for (const wid of SINGLE_WIDGET_PAGE_TYPES) {\n        if (widget.id.includes(wid)) {\n          return widget;\n        }\n      }\n    });\n  }\n\n  /**\n   * Check if step is valid or not\n   *\n   * @param step step index\n   * @returns is step valid\n   */\n  isStepValid(step: number): boolean {\n    switch (step) {\n      case 1: {\n        return this.pageForm.controls.type.valid;\n      }\n      case 2: {\n        return this.pageForm.controls.content.valid;\n      }\n      default: {\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Submit form to application service for creation of a new page\n   */\n  onSubmit(): void {\n    this.applicationService.addPage(this.pageForm.value);\n  }\n\n  /**\n   * Go to previous step.\n   */\n  onBack(): void {\n    this.step -= 1;\n  }\n\n  /**\n   * Go to next step.\n   */\n  onNext(): void {\n    switch (this.step) {\n      case 1: {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        this.pageForm.controls.type.value === ContentType.form\n          ? (this.step += 1)\n          : this.onSubmit();\n        break;\n      }\n      case 2: {\n        this.onSubmit();\n        break;\n      }\n      default: {\n        this.step += 1;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Add a new form.\n   */\n  async onAdd(): Promise<void> {\n    const { AddFormModalComponent } = await import(\n      '../../../components/add-form-modal/add-form-modal.component'\n    );\n    const dialogRef = this.dialog.open(AddFormModalComponent);\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        const variablesData = { name: value.name };\n        Object.assign(\n          variablesData,\n          value.resource && { resource: value.resource },\n          value.template && { template: value.template }\n        );\n        this.apollo\n          .mutate<AddFormMutationResponse>({\n            mutation: ADD_FORM,\n            variables: variablesData,\n          })\n          .subscribe({\n            next: ({ errors, data }) => {\n              if (errors) {\n                this.snackBar.openSnackBar(\n                  this.translate.instant(\n                    'common.notifications.objectNotCreated',\n                    {\n                      type: this.translate\n                        .instant('common.form.one')\n                        .toLowerCase(),\n                      error: errors ? errors[0].message : '',\n                    }\n                  ),\n                  { error: true }\n                );\n              } else {\n                const id = data?.addForm.id || '';\n                this.pageForm.controls.content.setValue(id);\n                this.snackBar.openSnackBar(\n                  this.translate.instant('common.notifications.objectCreated', {\n                    type: this.translate.instant('common.page.one'),\n                    value: value.name,\n                  })\n                );\n\n                this.onSubmit();\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n\n  /**\n   * Add a new widget as a dashboard page.\n   * Skip the onSubmit method, and use custom event handling to call application service to add the page with new content.\n   *\n   * @param widget new widget.\n   */\n  onAddWidget(widget: any): void {\n    // Build the structure and set width of widget\n    const structure = [\n      {\n        ...widget,\n        cols: 8,\n      },\n    ];\n    // Directly call application service to add page with structure\n    this.applicationService.addPage(\n      {\n        type: 'dashboard',\n      },\n      structure\n    );\n  }\n\n  /**\n   * Update query based on text search.\n   *\n   * @param search Search text from the graphql select\n   */\n  onSearchChange(search: string): void {\n    const variables = this.formsQuery.variables;\n    this.formsQuery.refetch({\n      ...variables,\n      filter: {\n        logic: 'and',\n        filters: [\n          {\n            field: 'name',\n            operator: 'contains',\n            value: search,\n          },\n        ],\n      },\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Add page component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 47,
                "rawdescription": "\n\nAdd page component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1534,
                            "end": 1536,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1528,
                            "end": 1533,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1570,
                            "end": 1576,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1564,
                            "end": 1569,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1604,
                            "end": 1622,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1598,
                            "end": 1603,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1662,
                            "end": 1668,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1656,
                            "end": 1661,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1696,
                            "end": 1704,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1690,
                            "end": 1695,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1741,
                            "end": 1750,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1735,
                            "end": 1740,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"pageForm\">\n  <div class=\"flex flex-col items-center\" [ngSwitch]=\"step\">\n    <!-- Selection of type of content -->\n    <ng-container *ngSwitchCase=\"1\">\n      <!-- Select a type of page -->\n      <h2>{{ 'pages.application.addPage.selectType' | translate }}</h2>\n      <shared-content-choice\n        class=\"mt-4\"\n        formControlName=\"type\"\n        [contentTypes]=\"contentTypes\"\n      ></shared-content-choice>\n      <ui-divider class=\"m-8 w-full\" [text]=\"'common.or' | translate\"></ui-divider>\n      <!-- Select a type of widget -->\n      <h2>{{ 'pages.application.addPage.startFromWidget' | translate }}</h2>\n      <shared-widget-choice\n        class=\"mt-4\"\n        [floating]=\"false\"\n        [widgetTypes]=\"availableWidgets\"\n        (add)=\"onAddWidget($event)\"\n      >\n      </shared-widget-choice>\n    </ng-container>\n    <!-- Form selection -->\n    <ng-container *ngSwitchCase=\"2\">\n      <div class=\"flex flex-col w-80\">\n        <!-- Existing form -->\n        <div uiFormFieldDirective>\n          <ui-graphql-select\n            formControlName=\"content\"\n            valueField=\"id\"\n            textField=\"name\"\n            [query]=\"formsQuery\"\n            (searchChange)=\"onSearchChange($event)\"\n            [filterable]=\"true\"\n          ></ui-graphql-select>\n        </div>\n        <ui-divider [text]=\"'common.or' | translate\" class=\"my-4\"></ui-divider>\n        <!-- New form -->\n        <ui-button\n          class=\"self-center\"\n          icon=\"add\"\n          category=\"secondary\"\n          variant=\"primary\"\n          (click)=\"onAdd()\"\n          [disabled]=\"!('create' | able : 'Form')\"\n        >\n          {{ 'models.form.create' | translate }}\n        </ui-button>\n      </div>\n    </ng-container>\n  </div>\n</form>\n<!-- Actions -->\n<div class=\"flex flex-row justify-center mt-16\" *ngIf=\"step !== 1\">\n  <ui-button [disabled]=\"step <= 1\" (click)=\"onBack()\" class=\"my-0 mx-1\">{{\n    'common.back' | translate\n  }}</ui-button>\n  <ui-button\n    class=\"my-0 mx-1\"\n    category=\"secondary\"\n    variant=\"primary\"\n    (click)=\"onNext()\"\n    [disabled]=\"!isStepValid(step)\"\n  >\n    {{ 'common.next' | translate }}\n  </ui-button>\n</div>\n"
        },
        {
            "name": "AddReferenceDataComponent",
            "id": "component-AddReferenceDataComponent-91871384d04981e338b08feecd3d073fe3f398926d3b5345a0dc75b16d14ec17fb3f750e0b484af7cf36b8fae6fbf57966ad73b82d197fe86530782e0044d60d",
            "file": "apps/back-office/src/app/dashboard/pages/reference-datas/add-reference-data/add-reference-data.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-reference-data",
            "styleUrls": [
                "./add-reference-data.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-reference-data.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogRef<AddReferenceDataComponent>",
                    "optional": false,
                    "description": "Dialog ref.",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "referenceForm",
                    "defaultValue": "this.fb.group({\n    name: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Reference data reactive form group</p>\n",
                    "line": 15,
                    "rawdescription": "\nReference data reactive form group"
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>New Reference Data modal.</p>\n",
            "rawdescription": "\n\nNew Reference Data modal.\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { DialogRef } from '@angular/cdk/dialog';\n\n/**\n * New Reference Data modal.\n */\n@Component({\n  selector: 'app-add-reference-data',\n  templateUrl: './add-reference-data.component.html',\n  styleUrls: ['./add-reference-data.component.scss'],\n})\nexport class AddReferenceDataComponent {\n  /** Reference data reactive form group */\n  referenceForm = this.fb.group({\n    name: ['', Validators.required],\n  });\n\n  /** @returns name of reference data */\n  get name(): AbstractControl | null {\n    return this.referenceForm.get('name');\n  }\n\n  /**\n   * New Reference Data modal.\n   *\n   * @param fb Angular form builder\n   * @param dialogRef Dialog ref.\n   */\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: DialogRef<AddReferenceDataComponent>\n  ) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-reference-data.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>New Reference Data modal.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "DialogRef<AddReferenceDataComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "rawdescription": "\n\nNew Reference Data modal.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 712,
                            "end": 714,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 706,
                            "end": 711,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 748,
                            "end": 757,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialogRef"
                        },
                        "type": "DialogRef<AddReferenceDataComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 742,
                            "end": 747,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog ref.</p>\n"
                    }
                ]
            },
            "accessors": {
                "name": {
                    "name": "name",
                    "getSignature": {
                        "name": "name",
                        "type": "",
                        "returnType": "AbstractControl | null",
                        "line": 20,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 536,
                                "end": 568,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 537,
                                    "end": 544,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>name of reference data</p>\n"
                            }
                        ]
                    }
                }
            },
            "templateData": "<ui-dialog size=\"small\">\n  <ng-container ngProjectAs=\"header\">\n    <h3 class=\"font-semibold\">\n      {{ 'components.referenceData.create.title' | translate }}\n    </h3>\n  </ng-container>\n  <ng-container ngProjectAs=\"content\">\n    <form [formGroup]=\"referenceForm\" class=\"flex flex-col\">\n      <div uiFormFieldDirective>\n        <label>{{ 'common.name' | translate }}</label>\n        <input\n          formControlName=\"name\"\n          type=\"text\"\n          [placeholder]=\"'common.placeholder.name' | translate\"\n        />\n      </div>\n    </form>\n  </ng-container>\n  <ng-container ngProjectAs=\"actions\">\n    <ui-button [uiDialogClose] variant=\"default\">{{\n      'common.close' | translate\n    }}</ui-button>\n    <ui-button\n      category=\"secondary\"\n      variant=\"primary\"\n      [uiDialogClose]=\"referenceForm.value\"\n      cdkFocusInitial\n      [disabled]=\"!referenceForm.valid\"\n    >\n      {{ 'common.create' | translate }}\n    </ui-button>\n  </ng-container>\n</ui-dialog>\n"
        },
        {
            "name": "AddResourceModalComponent",
            "id": "component-AddResourceModalComponent-d3db0b8811083b2a943e365e5ac4432ac76121eec7f9439bfe9ed8174835a8dbaf54f4010c5c90a7bffa1587f45ab6ad4ab830b4ad2addd9a1393ff7b9c5b51c",
            "file": "apps/back-office/src/app/components/add-resource-modal/add-resource-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-resource-modal",
            "styleUrls": [
                "./add-resource-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-resource-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addForm",
                    "defaultValue": "this.fb.group({\n    name: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Add form</p>\n",
                    "line": 31,
                    "rawdescription": "\nAdd form",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogRef<AddResourceModalComponent>",
                    "optional": false,
                    "description": "Dialog reference",
                    "line": 43,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormWrapperModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "DialogModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "<p>Modal to add a new resource.</p>\n",
            "rawdescription": "\n\nModal to add a new resource.\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DialogModule } from '@oort-front/ui';\nimport { DialogRef } from '@angular/cdk/dialog';\nimport { ButtonModule } from '@oort-front/ui';\nimport { FormWrapperModule } from '@oort-front/ui';\n\n/**\n * Modal to add a new resource.\n */\n@Component({\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormWrapperModule,\n    TranslateModule,\n    DialogModule,\n    ButtonModule,\n  ],\n  selector: 'app-add-resource-modal',\n  templateUrl: './add-resource-modal.component.html',\n  styleUrls: ['./add-resource-modal.component.scss'],\n})\nexport class AddResourceModalComponent {\n  /** Add form */\n  public addForm = this.fb.group({\n    name: ['', Validators.required],\n  });\n\n  /**\n   * Modal to add a new resource.\n   *\n   * @param fb Angular Form builder service\n   * @param dialogRef Dialog reference\n   */\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: DialogRef<AddResourceModalComponent>\n  ) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-resource-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Modal to add a new resource.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "DialogRef<AddResourceModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "rawdescription": "\n\nModal to add a new resource.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1042,
                            "end": 1044,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1036,
                            "end": 1041,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular Form builder service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1086,
                            "end": 1095,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialogRef"
                        },
                        "type": "DialogRef<AddResourceModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1080,
                            "end": 1085,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog reference</p>\n"
                    }
                ]
            },
            "templateData": "<ui-dialog size=\"small\">\n  <ng-container ngProjectAs=\"header\">\n    <h3 class=\"font-semibold\">{{ 'models.resource.create' | translate }}</h3>\n  </ng-container>\n  <ng-container ngProjectAs=\"content\">\n    <form [formGroup]=\"addForm\">\n      <div class=\"flex flex-col\">\n        <div uiFormFieldDirective>\n          <label>{{ 'common.name' | translate }}</label>\n          <input\n            formControlName=\"name\"\n            type=\"text\"\n            placeholder=\"Enter a name\"\n          />\n        </div>\n      </div>\n    </form>\n  </ng-container>\n  <ng-container ngProjectAs=\"actions\">\n    <ui-button [uiDialogClose] variant=\"default\">{{\n      'common.close' | translate\n    }}</ui-button>\n    <ui-button\n      category=\"secondary\"\n      variant=\"primary\"\n      [uiDialogClose]=\"addForm.value\"\n      cdkFocusInitial\n      [disabled]=\"!addForm.valid\"\n    >\n      {{ 'common.create' | translate }}\n    </ui-button>\n  </ng-container>\n</ui-dialog>\n"
        },
        {
            "name": "AddStepComponent",
            "id": "component-AddStepComponent-3602cb1e93994a9fe3d84e43822a94134e6121b895b74ec24a3a589631e261114508480885fe8724478784a82c9ce2fa2d8aa3b854312cbe1fbc6136beb98da7",
            "file": "apps/back-office/src/app/application/pages/workflow/components/add-step/add-step.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-step",
            "styleUrls": [
                "./add-step.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-step.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "contentTypes",
                    "defaultValue": "CONTENT_TYPES.filter((x) => x.value !== 'workflow')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Content types</p>\n",
                    "line": 33,
                    "rawdescription": "\nContent types",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 59,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<FormsQueryResponse>",
                    "optional": false,
                    "description": "<p>Forms query</p>\n",
                    "line": 35,
                    "rawdescription": "\nForms query",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stage",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>Current stage</p>\n",
                    "line": 44,
                    "rawdescription": "\nCurrent stage",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stepForm",
                    "defaultValue": "this.fb.group({\n    type: ['', Validators.required],\n    content: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Step form</p>\n",
                    "line": 39,
                    "rawdescription": "\nStep form",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "isStageValid",
                    "args": [
                        {
                            "name": "stage",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCheck if form stage is valid\n\n",
                    "description": "<p>Check if form stage is valid</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2594,
                                "end": 2599,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "stage"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2588,
                                "end": 2593,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>index of stage</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 2621,
                                "end": 2628,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>is stage valid</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpen add form component\n",
                    "description": "<p>Open add form component</p>\n",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "onBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGo to previous stage\n",
                    "description": "<p>Go to previous stage</p>\n"
                },
                {
                    "name": "onNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGo to next stage\n",
                    "description": "<p>Go to next stage</p>\n"
                },
                {
                    "name": "onSearchChange",
                    "args": [
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChanges the query according to search text\n\n",
                    "description": "<p>Changes the query according to search text</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4831,
                                "end": 4837,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "search"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4825,
                                "end": 4830,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Search text from the graphql select</p>\n"
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form to workflow service\n",
                    "description": "<p>Submit form to workflow service</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Add step page component.</p>\n",
            "rawdescription": "\n\nAdd step page component.\n",
            "type": "component",
            "sourceCode": "import { Apollo, QueryRef } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {\n  ContentType,\n  CONTENT_TYPES,\n  UnsubscribeComponent,\n  WorkflowService,\n  FormsQueryResponse,\n  AddFormMutationResponse,\n} from '@oort-front/shared';\nimport { ActivatedRoute } from '@angular/router';\nimport { takeUntil } from 'rxjs';\nimport { ADD_FORM } from '../../graphql/mutations';\nimport { GET_FORMS } from '../../graphql/queries';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { SnackbarService } from '@oort-front/ui';\n\n/** Default items per query for pagination */\nconst ITEMS_PER_PAGE = 10;\n\n/**\n * Add step page component.\n */\n@Component({\n  selector: 'app-add-step',\n  templateUrl: './add-step.component.html',\n  styleUrls: ['./add-step.component.scss'],\n})\nexport class AddStepComponent extends UnsubscribeComponent implements OnInit {\n  // === DATA ===\n  /** Content types */\n  public contentTypes = CONTENT_TYPES.filter((x) => x.value !== 'workflow');\n  /** Forms query */\n  public formsQuery!: QueryRef<FormsQueryResponse>;\n\n  // === REACTIVE FORM ===\n  /** Step form */\n  public stepForm = this.fb.group({\n    type: ['', Validators.required],\n    content: [''],\n  });\n  /** Current stage */\n  public stage = 1;\n\n  /**\n   * Add step page component\n   *\n   * @param route Angular activated route\n   * @param fb Angular form builder\n   * @param dialog Dialog service\n   * @param snackBar Shared snackbar service\n   * @param apollo Apollo service\n   * @param workflowService Shared workflow service\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    public dialog: Dialog,\n    private snackBar: SnackbarService,\n    private apollo: Apollo,\n    private workflowService: WorkflowService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.stepForm.get('type')?.valueChanges.subscribe((type) => {\n      const contentControl = this.stepForm.controls.content;\n      if (type === ContentType.form) {\n        this.formsQuery = this.apollo.watchQuery<FormsQueryResponse>({\n          query: GET_FORMS,\n          variables: {\n            first: ITEMS_PER_PAGE,\n            sortField: 'name',\n          },\n        });\n        contentControl.setValidators([Validators.required]);\n        contentControl.updateValueAndValidity();\n      } else {\n        contentControl.setValidators(null);\n        contentControl.setValue(null);\n        contentControl.updateValueAndValidity();\n      }\n      this.onNext();\n    });\n  }\n\n  /**\n   * Check if form stage is valid\n   *\n   * @param stage index of stage\n   * @returns is stage valid\n   */\n  isStageValid(stage: number): boolean {\n    switch (stage) {\n      case 1: {\n        return this.stepForm.controls.type.valid;\n      }\n      case 2: {\n        return this.stepForm.controls.content.valid;\n      }\n      default: {\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Submit form to workflow service\n   */\n  onSubmit(): void {\n    this.workflowService.addStep(this.stepForm.value, this.route);\n  }\n\n  /**\n   * Go to previous stage\n   */\n  onBack(): void {\n    this.stage -= 1;\n  }\n\n  /**\n   * Go to next stage\n   */\n  onNext(): void {\n    switch (this.stage) {\n      case 1: {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        this.stepForm.controls.type.value === ContentType.form\n          ? (this.stage += 1)\n          : this.onSubmit();\n        break;\n      }\n      case 2: {\n        this.onSubmit();\n        break;\n      }\n      default: {\n        this.stage += 1;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Open add form component\n   */\n  async onAdd(): Promise<void> {\n    const { AddFormModalComponent } = await import(\n      '../../../../../components/add-form-modal/add-form-modal.component'\n    );\n    const dialogRef = this.dialog.open(AddFormModalComponent);\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        const variablesData = { name: value.name };\n        Object.assign(\n          variablesData,\n          value.resource && { resource: value.resource },\n          value.template && { template: value.template }\n        );\n        this.apollo\n          .mutate<AddFormMutationResponse>({\n            mutation: ADD_FORM,\n            variables: variablesData,\n          })\n          .subscribe({\n            next: ({ data }) => {\n              if (data) {\n                const { id } = data.addForm;\n                this.stepForm.controls.content.setValue(id as string);\n                this.onSubmit();\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n\n  /**\n   * Changes the query according to search text\n   *\n   * @param search Search text from the graphql select\n   */\n  onSearchChange(search: string): void {\n    const variables = this.formsQuery.variables;\n    this.formsQuery.refetch({\n      ...variables,\n      filter: {\n        logic: 'and',\n        filters: [\n          {\n            field: 'name',\n            operator: 'contains',\n            value: search,\n          },\n        ],\n      },\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-step.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Add step page component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "workflowService",
                        "type": "WorkflowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 44,
                "rawdescription": "\n\nAdd step page component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1359,
                            "end": 1364,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1353,
                            "end": 1358,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular activated route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1401,
                            "end": 1403,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1395,
                            "end": 1400,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1437,
                            "end": 1443,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1431,
                            "end": 1436,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1471,
                            "end": 1479,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1465,
                            "end": 1470,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1516,
                            "end": 1522,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1510,
                            "end": 1515,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1550,
                            "end": 1565,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "workflowService"
                        },
                        "type": "WorkflowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1544,
                            "end": 1549,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared workflow service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"stepForm\">\n  <div class=\"flex flex-col items-center\" [ngSwitch]=\"stage\">\n    <!-- Selection of type of content -->\n    <ng-container *ngSwitchCase=\"1\">\n      <h2>{{ 'pages.workflow.addStep.selectType' | translate }}</h2>\n      <shared-content-choice\n        class=\"mt-8\"\n        formControlName=\"type\"\n        [contentTypes]=\"contentTypes\"\n      ></shared-content-choice>\n    </ng-container>\n    <!-- Form selection -->\n    <ng-container *ngSwitchCase=\"2\">\n      <div class=\"flex flex-col w-80\">\n        <!-- Existing form -->\n        <div uiFormFieldDirective>\n          <ui-graphql-select\n            formControlName=\"content\"\n            valueField=\"id\"\n            textField=\"name\"\n            [query]=\"formsQuery\"\n            (searchChange)=\"onSearchChange($event)\"\n            [filterable]=\"true\"\n          ></ui-graphql-select>\n        </div>\n        <ui-divider [text]=\"'or'\" class=\"my-4\"></ui-divider>\n        <!-- New form -->\n        <ui-button\n          class=\"self-center\"\n          icon=\"add\"\n          category=\"secondary\"\n          variant=\"primary\"\n          (click)=\"onAdd()\"\n          [disabled]=\"!('create' | able : 'Form')\"\n        >\n          {{ 'models.form.create' | translate }}\n        </ui-button>\n      </div>\n    </ng-container>\n  </div>\n</form>\n<!-- Actions -->\n<div class=\"flex flex-row justify-center mt-16\" *ngIf=\"stage !== 1\">\n  <ui-button [disabled]=\"stage <= 1\" (click)=\"onBack()\" class=\"my-0 mx-1\">{{\n    'common.back' | translate\n  }}</ui-button>\n  <ui-button\n    class=\"my-0 mx-1\"\n    category=\"secondary\"\n    variant=\"primary\"\n    (click)=\"onNext()\"\n    [disabled]=\"!isStageValid(stage)\"\n    >{{ 'common.next' | translate }}</ui-button\n  >\n</div>\n"
        },
        {
            "name": "AggregationsTabComponent",
            "id": "component-AggregationsTabComponent-a38703b45dae86e79ab5c315442f8c73cfd7cbf540135280989ff67464839b1a0b5c1c38ff1408cfb696b70893fd55903b0e549c464700c20bf0c5bbe77a5271",
            "file": "apps/back-office/src/app/dashboard/pages/resource/aggregations-tab/aggregations-tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-aggregations-tab",
            "styleUrls": [
                "./aggregations-tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./aggregations-tab.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "aggregations",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Aggregation[]",
                    "optional": false,
                    "description": "<p>Aggregations</p>\n",
                    "line": 41,
                    "rawdescription": "\n\nAggregations\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "aggregationsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<ResourceQueryResponse>",
                    "optional": false,
                    "description": "<p>Aggregations query</p>\n",
                    "line": 60,
                    "rawdescription": "\n\nAggregations query\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "cachedAggregations",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Aggregation[]",
                    "optional": false,
                    "description": "<p>Cached aggregations</p>\n",
                    "line": 64,
                    "rawdescription": "\n\nCached aggregations\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "displayedColumnsAggregations",
                    "defaultValue": "[\n    'name',\n    'createdAt',\n    '_actions',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "<p>Columns to display</p>\n",
                    "line": 50,
                    "rawdescription": "\n\nColumns to display\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 45,
                    "rawdescription": "\n\nLoading state\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageInfo",
                    "defaultValue": "{\n    pageIndex: 0,\n    pageSize: 10,\n    length: 0,\n    endCursor: '',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Page info</p>\n",
                    "line": 68,
                    "rawdescription": "\n\nPage info\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "resource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Resource",
                    "optional": false,
                    "description": "<p>Resource</p>\n",
                    "line": 37,
                    "rawdescription": "\n\nResource\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchAggregations",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFetches aggregations from resource.\n\n",
                    "description": "<p>Fetches aggregations from resource.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "handleAction",
                    "args": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle action from the data list presentation component\n\n",
                    "description": "<p>Handle action from the data list presentation component</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3753,
                                "end": 3759,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "action"
                            },
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3747,
                                "end": 3752,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>action containing action type and aggregation item if exists</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAddAggregation",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdds a new aggregation for the resource.\n",
                    "description": "<p>Adds a new aggregation for the resource.</p>\n",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "onDeleteAggregation",
                    "args": [
                        {
                            "name": "aggregation",
                            "type": "Aggregation",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 244,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDeletes a aggregation.\n\n",
                    "description": "<p>Deletes a aggregation.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6239,
                                "end": 6250,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "aggregation"
                            },
                            "type": "Aggregation",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6233,
                                "end": 6238,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Aggregation to delete</p>\n"
                        }
                    ]
                },
                {
                    "name": "onEditAggregation",
                    "args": [
                        {
                            "name": "aggregation",
                            "type": "Aggregation",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 209,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdits a aggregation. Opens a popup for edition.\n\n",
                    "description": "<p>Edits a aggregation. Opens a popup for edition.</p>\n",
                    "modifierKind": [
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5210,
                                "end": 5221,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "aggregation"
                            },
                            "type": "Aggregation",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5204,
                                "end": 5209,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Aggregation to edit</p>\n"
                        }
                    ]
                },
                {
                    "name": "onPage",
                    "args": [
                        {
                            "name": "e",
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles page event.\n\n",
                    "description": "<p>Handles page event.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2672,
                                "end": 2673,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2666,
                                "end": 2671,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>page event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "updateValues",
                    "args": [
                        {
                            "name": "data",
                            "type": "ResourceQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 279,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate aggregation data value\n\n",
                    "description": "<p>Update aggregation data value</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7350,
                                "end": 7354,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "ResourceQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7344,
                                "end": 7349,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>query response data</p>\n"
                        },
                        {
                            "name": {
                                "pos": 7387,
                                "end": 7394,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "loading"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7381,
                                "end": 7386,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>loading status</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Aggregations tab of resource page</p>\n",
            "rawdescription": "\n\nAggregations tab of resource page\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Dialog } from '@angular/cdk/dialog';\nimport {\n  Aggregation,\n  AggregationService,\n  ConfirmService,\n  Resource,\n  UnsubscribeComponent,\n  ResourceQueryResponse,\n} from '@oort-front/shared';\nimport { Apollo, QueryRef } from 'apollo-angular';\nimport get from 'lodash/get';\nimport {\n  getCachedValues,\n  updateQueryUniqueValues,\n} from '../../../../utils/update-queries';\nimport { GET_RESOURCE_AGGREGATIONS } from './graphql/queries';\nimport { takeUntil } from 'rxjs';\nimport { UIPageChangeEvent, handleTablePageEvent } from '@oort-front/ui';\n\n/**\n * Aggregations tab of resource page\n */\n@Component({\n  selector: 'app-aggregations-tab',\n  templateUrl: './aggregations-tab.component.html',\n  styleUrls: ['./aggregations-tab.component.scss'],\n})\nexport class AggregationsTabComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  /**\n   * Resource\n   */\n  public resource!: Resource;\n  /**\n   * Aggregations\n   */\n  public aggregations: Aggregation[] = [];\n  /**\n   * Loading state\n   */\n  public loading = true;\n\n  /**\n   * Columns to display\n   */\n  public displayedColumnsAggregations: string[] = [\n    'name',\n    'createdAt',\n    '_actions',\n  ];\n\n  // ==== PAGINATION ====\n  /**\n   * Aggregations query\n   */\n  private aggregationsQuery!: QueryRef<ResourceQueryResponse>;\n  /**\n   * Cached aggregations\n   */\n  private cachedAggregations: Aggregation[] = [];\n  /**\n   * Page info\n   */\n  public pageInfo = {\n    pageIndex: 0,\n    pageSize: 10,\n    length: 0,\n    endCursor: '',\n  };\n\n  /**\n   * Aggregations tab of resource page\n   *\n   * @param apollo Apollo service\n   * @param dialog Dialog service\n   * @param aggregationService Grid aggregation service\n   * @param confirmService Shared confirm service\n   * @param translate Angular translate service\n   */\n  constructor(\n    private apollo: Apollo,\n    private dialog: Dialog,\n    private aggregationService: AggregationService,\n    private confirmService: ConfirmService,\n    private translate: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    const state = history.state;\n    this.resource = get(state, 'resource', null);\n\n    this.aggregationsQuery = this.apollo.watchQuery<ResourceQueryResponse>({\n      query: GET_RESOURCE_AGGREGATIONS,\n      variables: {\n        first: this.pageInfo.pageSize,\n        id: this.resource?.id,\n        afterCursor: this.pageInfo.endCursor,\n      },\n    });\n\n    this.aggregationsQuery.valueChanges.subscribe(({ data, loading }) => {\n      this.updateValues(data, loading);\n    });\n  }\n\n  /**\n   * Handles page event.\n   *\n   * @param e page event.\n   */\n  onPage(e: UIPageChangeEvent): void {\n    const cachedData = handleTablePageEvent(\n      e,\n      this.pageInfo,\n      this.cachedAggregations\n    );\n    if (cachedData && cachedData.length === this.pageInfo.pageSize) {\n      this.aggregations = cachedData;\n    } else {\n      this.fetchAggregations();\n    }\n  }\n\n  /**\n   * Fetches aggregations from resource.\n   *\n   */\n  private fetchAggregations(): void {\n    this.loading = true;\n    const variables = {\n      id: this.resource.id,\n      first: this.pageInfo.pageSize,\n      afterCursor: this.pageInfo.endCursor,\n    };\n    const cachedValues: ResourceQueryResponse = getCachedValues(\n      this.apollo.client,\n      GET_RESOURCE_AGGREGATIONS,\n      variables\n    );\n    if (cachedValues) {\n      this.updateValues(cachedValues, false);\n    } else {\n      this.aggregationsQuery\n        .fetchMore({\n          variables,\n        })\n        .then((results) => this.updateValues(results.data, results.loading));\n    }\n  }\n\n  /**\n   * Handle action from the data list presentation component\n   *\n   * @param action action containing action type and aggregation item if exists\n   * @param action.type type of action, add, edit, delete\n   * @param action.item aggregation item for the given action type\n   */\n  handleAction(action: {\n    type: 'add' | 'edit' | 'delete';\n    item?: Aggregation | null;\n  }) {\n    if (action.type === 'add') {\n      this.onAddAggregation();\n    } else if (action.type === 'edit') {\n      this.onEditAggregation(action.item as Aggregation);\n    } else if (action.type === 'delete') {\n      this.onDeleteAggregation(action.item as Aggregation);\n    }\n  }\n\n  /**\n   * Adds a new aggregation for the resource.\n   */\n  async onAddAggregation(): Promise<void> {\n    const { EditAggregationModalComponent } = await import(\n      '@oort-front/shared'\n    );\n    const dialogRef = this.dialog.open(EditAggregationModalComponent, {\n      disableClose: true,\n      data: {\n        resource: this.resource,\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.aggregationService\n          .addAggregation(value, { resource: this.resource.id })\n          .subscribe(({ data }: any) => {\n            if (data.addAggregation) {\n              this.aggregations = [...this.aggregations, data?.addAggregation];\n              this.pageInfo.length += 1;\n            }\n          });\n      }\n    });\n  }\n\n  /**\n   * Edits a aggregation. Opens a popup for edition.\n   *\n   * @param aggregation Aggregation to edit\n   */\n  async onEditAggregation(aggregation: Aggregation): Promise<void> {\n    const { EditAggregationModalComponent } = await import(\n      '@oort-front/shared'\n    );\n    const dialogRef = this.dialog.open(EditAggregationModalComponent, {\n      disableClose: true,\n      data: {\n        resource: this.resource,\n        aggregation,\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.aggregationService\n          .editAggregation(aggregation, value, { resource: this.resource.id })\n          .subscribe(({ data }: any) => {\n            if (data.editAggregation) {\n              this.aggregations = this.aggregations.map((x: any) => {\n                if (x.id === aggregation.id) {\n                  return data.editAggregation;\n                } else {\n                  return x;\n                }\n              });\n            }\n          });\n      }\n    });\n  }\n\n  /**\n   * Deletes a aggregation.\n   *\n   * @param aggregation Aggregation to delete\n   */\n  onDeleteAggregation(aggregation: Aggregation): void {\n    const dialogRef = this.confirmService.openConfirmModal({\n      title: this.translate.instant('common.deleteObject', {\n        name: this.translate.instant('common.aggregation.one'),\n      }),\n      content: this.translate.instant(\n        'components.form.aggregation.delete.confirmationMessage',\n        {\n          name: aggregation.name,\n        }\n      ),\n      confirmText: this.translate.instant('components.confirmModal.delete'),\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.aggregationService\n          .deleteAggregation(aggregation, { resource: this.resource.id })\n          .subscribe(({ data }: any) => {\n            if (data.deleteAggregation) {\n              this.aggregations = this.aggregations.filter(\n                (x: any) => x.id !== aggregation.id\n              );\n              this.pageInfo.length -= 1;\n            }\n          });\n      }\n    });\n  }\n\n  /**\n   * Update aggregation data value\n   *\n   * @param data query response data\n   * @param loading loading status\n   */\n  private updateValues(data: ResourceQueryResponse, loading: boolean) {\n    if (data.resource) {\n      const mappedValues =\n        data.resource.aggregations?.edges.map((x) => x.node) ?? [];\n      this.cachedAggregations = updateQueryUniqueValues(\n        this.cachedAggregations,\n        mappedValues\n      );\n      this.pageInfo.length = data.resource.aggregations?.totalCount || 0;\n      this.pageInfo.endCursor =\n        data.resource.aggregations?.pageInfo.endCursor || '';\n      this.aggregations = this.cachedAggregations.slice(\n        this.pageInfo.pageSize * this.pageInfo.pageIndex,\n        this.pageInfo.pageSize * (this.pageInfo.pageIndex + 1)\n      );\n    }\n    this.loading = loading;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./aggregations-tab.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Aggregations tab of resource page</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "aggregationService",
                        "type": "AggregationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 73,
                "rawdescription": "\n\nAggregations tab of resource page\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1674,
                            "end": 1680,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1668,
                            "end": 1673,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1708,
                            "end": 1714,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1702,
                            "end": 1707,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1742,
                            "end": 1760,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "aggregationService"
                        },
                        "type": "AggregationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1736,
                            "end": 1741,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Grid aggregation service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1798,
                            "end": 1812,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1792,
                            "end": 1797,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1848,
                            "end": 1857,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1842,
                            "end": 1847,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-data-presentation-list\n  addNewItemButtonMessage=\"components.widget.settings.grid.aggregations.add.choice.create\"\n  emptyDataListMessage=\"components.resource.empty.aggregations\"\n  [loading]=\"loading\"\n  [dataSource]=\"aggregations\"\n  [canUpdate]=\"resource.canUpdate ?? false\"\n  [displayedColumns]=\"displayedColumnsAggregations\"\n  (itemAction)=\"handleAction($event)\"\n>\n  <ng-container ngProjectAs=\"pagination\">\n    <ui-paginator\n      [disabled]=\"loading\"\n      [pageIndex]=\"pageInfo.pageIndex\"\n      [pageSize]=\"pageInfo.pageSize\"\n      [pageSizeOptions]=\"[10, 25, 50]\"\n      [totalItems]=\"pageInfo.length\"\n      (pageChange)=\"onPage($event)\"\n    >\n    </ui-paginator>\n  </ng-container>\n</app-data-presentation-list>\n"
        },
        {
            "name": "ApiConfigurationComponent",
            "id": "component-ApiConfigurationComponent-e170c0bfb5d89ebb11843ac625de0fb5bc13f05a389a6fe2e48622d142a69a0d08a16ab4a95e7fa086e507c698d21fcb47533e46fe93b5dde31031194078aafb",
            "file": "apps/back-office/src/app/dashboard/pages/api-configuration/api-configuration.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-api-configuration",
            "styleUrls": [
                "./api-configuration.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./api-configuration.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apiConfiguration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApiConfiguration",
                    "optional": true,
                    "description": "<p>Edited api configuration</p>\n",
                    "line": 44,
                    "rawdescription": "\nEdited api configuration",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "apiForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Api form group</p>\n",
                    "line": 46,
                    "rawdescription": "\nApi form group",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "authType",
                    "defaultValue": "authType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Reference to auth type enum</p>\n",
                    "line": 52,
                    "rawdescription": "\nReference to auth type enum",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "authTypeChoices",
                    "defaultValue": "Object.values(authType)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Available auth types</p>\n",
                    "line": 54,
                    "rawdescription": "\nAvailable auth types",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Api configuration id</p>\n",
                    "line": 42,
                    "rawdescription": "\nApi configuration id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading indicator</p>\n",
                    "line": 40,
                    "rawdescription": "\nLoading indicator",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "status",
                    "defaultValue": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Reference to status enum</p>\n",
                    "line": 48,
                    "rawdescription": "\nReference to status enum",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "statusChoices",
                    "defaultValue": "Object.values(status)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Available status choices</p>\n",
                    "line": 50,
                    "rawdescription": "\nAvailable status choices",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "buildSettingsForm",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreate the settings form depending on the authType\n\n",
                    "description": "<p>Create the settings form depending on the authType</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5414,
                                "end": 5418,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "type"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5408,
                                "end": 5413,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>type of API connection</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 5448,
                                "end": 5455,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>settings form group</p>\n"
                        }
                    ]
                },
                {
                    "name": "clearControl",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 373,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClear the value of the given control, if not updated by the user\n\n",
                    "description": "<p>Clear the value of the given control, if not updated by the user</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 12041,
                                "end": 12044,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "key"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 12035,
                                "end": 12040,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>control key from settings control to clear</p>\n"
                        }
                    ]
                },
                {
                    "name": "createApiForm",
                    "args": [
                        {
                            "name": "api",
                            "type": "ApiConfiguration",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreate API form\n\n",
                    "description": "<p>Create API form</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4320,
                                "end": 4323,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "api"
                            },
                            "type": "ApiConfiguration",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4314,
                                "end": 4319,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>API configuration</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 4348,
                                "end": 4355,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>form group</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPing",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 329,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSend a ping request to test the configuration",
                    "description": "<p>Send a ping request to test the configuration</p>\n"
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEdit the API Configuration using apiForm changes",
                    "description": "<p>Edit the API Configuration using apiForm changes</p>\n"
                },
                {
                    "name": "resetFormSettings",
                    "args": [
                        {
                            "name": "authType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset settings configuration form with the given API configuration\n\n",
                    "description": "<p>Reset settings configuration form with the given API configuration</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5031,
                                "end": 5039,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "authType"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5025,
                                "end": 5030,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>current auth type of the API configuration</p>\n"
                        }
                    ]
                },
                {
                    "name": "saveAccess",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 226,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdit the permissions layer.\n\n",
                    "description": "<p>Edit the permissions layer.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6828,
                                "end": 6829,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6822,
                                "end": 6827,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>permissions</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>API configuration page component.</p>\n",
            "rawdescription": "\n\nAPI configuration page component.\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  ApiConfiguration,\n  authType,\n  ApiProxyService,\n  status,\n  BreadcrumbService,\n  UnsubscribeComponent,\n  ApiConfigurationQueryResponse,\n  EditApiConfigurationMutationResponse,\n} from '@oort-front/shared';\nimport { Apollo } from 'apollo-angular';\nimport { takeUntil } from 'rxjs/operators';\nimport { apiValidator } from '../../../utils/nameValidation';\nimport { EDIT_API_CONFIGURATION } from './graphql/mutations';\nimport { GET_API_CONFIGURATION } from './graphql/queries';\nimport { SnackbarService } from '@oort-front/ui';\n\n/**\n * Default value shown for private settings fields\n */\nconst ENCRYPTED_VALUE = '●●●●●●●●●●●●●';\n\n/**\n * API configuration page component.\n */\n@Component({\n  selector: 'app-api-configuration',\n  templateUrl: './api-configuration.component.html',\n  styleUrls: ['./api-configuration.component.scss'],\n})\nexport class ApiConfigurationComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  /** Loading indicator */\n  public loading = true;\n  /** Api configuration id */\n  public id = '';\n  /** Edited api configuration */\n  public apiConfiguration?: ApiConfiguration;\n  /** Api form group */\n  public apiForm!: ReturnType<typeof this.createApiForm>;\n  /** Reference to status enum */\n  public status = status;\n  /** Available status choices */\n  public statusChoices = Object.values(status);\n  /** Reference to auth type enum */\n  public authType = authType;\n  /** Available auth types */\n  public authTypeChoices = Object.values(authType);\n\n  /** @returns API configuration name */\n  get name(): AbstractControl | null {\n    return this.apiForm.get('name');\n  }\n\n  /**\n   * API configuration page component\n   *\n   * @param apollo Apollo service\n   * @param route Angular activated route\n   * @param snackBar Shared snackbar service\n   * @param router Angular router\n   * @param fb Angular form builder\n   * @param apiProxy Shared API proxy service\n   * @param translate Angular translate service\n   * @param breadcrumbService Shared breadcrumb service\n   */\n  constructor(\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private snackBar: SnackbarService,\n    private router: Router,\n    private fb: FormBuilder,\n    private apiProxy: ApiProxyService,\n    private translate: TranslateService,\n    private breadcrumbService: BreadcrumbService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id') || '';\n    if (this.id) {\n      this.apollo\n        .watchQuery<ApiConfigurationQueryResponse>({\n          query: GET_API_CONFIGURATION,\n          variables: {\n            id: this.id,\n          },\n        })\n        .valueChanges.pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: ({ data, loading }) => {\n            if (data.apiConfiguration) {\n              this.apiConfiguration = data.apiConfiguration;\n              this.breadcrumbService.setBreadcrumb(\n                '@api',\n                this.apiConfiguration.name as string\n              );\n              this.apiForm = this.createApiForm(data.apiConfiguration);\n              this.apiForm.controls.authType?.valueChanges\n                .pipe(takeUntil(this.destroy$))\n                .subscribe((value) => {\n                  this.resetFormSettings(value);\n                });\n              this.loading = loading;\n            } else {\n              this.snackBar.openSnackBar(\n                this.translate.instant(\n                  'common.notifications.accessNotProvided',\n                  {\n                    type: this.translate\n                      .instant('common.resource.one')\n                      .toLowerCase(),\n                    error: '',\n                  }\n                ),\n                { error: true }\n              );\n              this.router.navigate(['/settings/apiconfigurations']);\n            }\n          },\n          error: (err) => {\n            this.snackBar.openSnackBar(err.message, { error: true });\n            this.router.navigate(['/settings/apiconfigurations']);\n          },\n        });\n    }\n  }\n\n  /**\n   * Create API form\n   *\n   * @param api API configuration\n   * @returns form group\n   */\n  private createApiForm(api: ApiConfiguration) {\n    return this.fb.group({\n      id: [{ value: api.id, disabled: true }],\n      name: [api.name, [Validators.required, Validators.pattern(apiValidator)]],\n      status: [api.status, Validators.required],\n      authType: this.fb.nonNullable.control(\n        api.authType || '',\n        Validators.required\n      ),\n      endpoint: [api.endpoint, Validators.required],\n      pingUrl: [api.pingUrl],\n      settings: this.buildSettingsForm(api.authType || ''),\n      graphQLEndpoint: api.graphQLEndpoint,\n    });\n  }\n\n  /**\n   * Reset settings configuration form with the given API configuration\n   *\n   * @param authType current auth type of the API configuration\n   */\n  private resetFormSettings(authType: string) {\n    (this.apiForm as any).removeControl('settings', { emitEvent: false });\n    this.apiForm.addControl('settings', this.buildSettingsForm(authType));\n    this.apiForm.updateValueAndValidity();\n  }\n\n  /**\n   * Create the settings form depending on the authType\n   *\n   * @param type type of API connection\n   * @returns settings form group\n   */\n  private buildSettingsForm(type: string) {\n    if (type === authType.serviceToService) {\n      return this.fb.group({\n        authTargetUrl: [\n          this.apiConfiguration?.settings &&\n          this.apiConfiguration?.settings.authTargetUrl\n            ? ENCRYPTED_VALUE\n            : '',\n          Validators.required,\n        ],\n        apiClientID: [\n          this.apiConfiguration?.settings &&\n          this.apiConfiguration?.settings.apiClientID\n            ? ENCRYPTED_VALUE\n            : '',\n          Validators.minLength(3),\n        ],\n        safeSecret: [\n          this.apiConfiguration?.settings &&\n          this.apiConfiguration?.settings.safeSecret\n            ? ENCRYPTED_VALUE\n            : '',\n          Validators.minLength(3),\n        ],\n        scope: [\n          this.apiConfiguration?.settings &&\n          this.apiConfiguration?.settings.scope\n            ? ENCRYPTED_VALUE\n            : '',\n          null,\n        ],\n      });\n    } else if (type === authType.userToService) {\n      return this.fb.group({\n        token: [\n          this.apiConfiguration?.settings &&\n          this.apiConfiguration?.settings.token\n            ? ENCRYPTED_VALUE\n            : '',\n          Validators.required,\n        ],\n      });\n    }\n    return this.fb.group({});\n  }\n\n  /**\n   * Edit the permissions layer.\n   *\n   * @param e permissions\n   */\n  saveAccess(e: any): void {\n    this.loading = true;\n    this.apollo\n      .mutate<EditApiConfigurationMutationResponse>({\n        mutation: EDIT_API_CONFIGURATION,\n        variables: {\n          id: this.id,\n          permissions: e,\n        },\n      })\n      .subscribe(({ errors, data, loading }) => {\n        if (errors) {\n          this.snackBar.openSnackBar(\n            this.translate.instant('common.notifications.objectNotUpdated', {\n              type: this.translate.instant('common.apiConfiguration.one'),\n              error: errors ? errors[0].message : '',\n            }),\n            { error: true }\n          );\n        } else {\n          if (data) {\n            this.apiConfiguration = data.editApiConfiguration;\n          }\n        }\n        this.loading = loading;\n      });\n  }\n\n  /** Edit the API Configuration using apiForm changes */\n  onSave(): void {\n    this.loading = true;\n    const variables = { id: this.id };\n    Object.assign(\n      variables,\n      this.apiForm.value.name !== this.apiConfiguration?.name && {\n        name: this.apiForm.value.name,\n      },\n      this.apiForm.value.status !== this.apiConfiguration?.status && {\n        status: this.apiForm.value.status,\n      },\n      this.apiForm.value.authType !== this.apiConfiguration?.authType && {\n        authType: this.apiForm.value.authType,\n      },\n      this.apiForm.value.endpoint !== this.apiConfiguration?.endpoint && {\n        endpoint: this.apiForm.value.endpoint,\n      },\n      this.apiForm.value.graphQLEndpoint !==\n        this.apiConfiguration?.graphQLEndpoint && {\n        graphQLEndpoint: this.apiForm.value.graphQLEndpoint,\n      },\n      this.apiForm.value.pingUrl !== this.apiConfiguration?.pingUrl && {\n        pingUrl: this.apiForm.value.pingUrl,\n      },\n      // If settings is touched we will go through each settings param to save only the ones that are not the encrypted display value and that exist\n      this.apiForm.controls.settings.touched && {\n        settings: {\n          ...(this.apiForm.value.authType === authType.serviceToService &&\n            this.apiForm.value.settings?.authTargetUrl !== ENCRYPTED_VALUE && {\n              authTargetUrl: this.apiForm.value.settings?.authTargetUrl,\n            }),\n          ...(this.apiForm.value.authType === authType.serviceToService &&\n            this.apiForm.value.settings?.apiClientID !== ENCRYPTED_VALUE && {\n              apiClientID: this.apiForm.value.settings?.apiClientID,\n            }),\n          ...(this.apiForm.value.authType === authType.serviceToService &&\n            this.apiForm.value.settings?.safeSecret !== ENCRYPTED_VALUE && {\n              safeSecret: this.apiForm.value.settings?.safeSecret,\n            }),\n          ...(this.apiForm.value.authType === authType.serviceToService &&\n            this.apiForm.value.settings?.scope !== ENCRYPTED_VALUE && {\n              scope: this.apiForm.value.settings?.scope,\n            }),\n          ...(this.apiForm.value.authType === authType.userToService &&\n            this.apiForm.value.settings?.token !== ENCRYPTED_VALUE && {\n              token: this.apiForm.value.settings?.token,\n            }),\n        },\n      }\n    );\n    this.apollo\n      .mutate<EditApiConfigurationMutationResponse>({\n        mutation: EDIT_API_CONFIGURATION,\n        variables,\n      })\n      .subscribe(({ errors, data, loading }) => {\n        if (errors) {\n          this.snackBar.openSnackBar(\n            this.translate.instant('common.notifications.objectNotUpdated', {\n              type: this.translate.instant('common.apiConfiguration.one'),\n              error: errors ? errors[0].message : '',\n            }),\n            { error: true }\n          );\n        } else {\n          this.apiConfiguration = data?.editApiConfiguration;\n          this.resetFormSettings(this.apiConfiguration?.authType as string);\n          this.loading = loading || false;\n        }\n        this.loading = loading;\n      });\n  }\n\n  /** Send a ping request to test the configuration */\n  onPing(): void {\n    this.apiProxy\n      .buildPingRequest(this.apiForm.getRawValue() as ApiConfiguration)\n      ?.subscribe(\n        (res: any) => {\n          if (res) {\n            if (res.access_token) {\n              this.snackBar.openSnackBar(\n                this.translate.instant(\n                  'pages.apiConfiguration.notifications.authTokenFetched'\n                )\n              );\n            } else {\n              this.snackBar.openSnackBar(\n                this.translate.instant(\n                  'pages.apiConfiguration.notifications.pingReceived'\n                )\n              );\n            }\n          } else {\n            this.snackBar.openSnackBar(\n              this.translate.instant(\n                'pages.apiConfiguration.notifications.pingFailed'\n              ),\n              { error: true }\n            );\n          }\n        },\n        () => {\n          this.snackBar.openSnackBar(\n            this.translate.instant(\n              'pages.apiConfiguration.notifications.pingFailed'\n            ),\n            { error: true }\n          );\n        }\n      );\n  }\n\n  /**\n   * Clear the value of the given control, if not updated by the user\n   *\n   * @param key control key from settings control to clear\n   */\n  clearControl(key: string) {\n    const control = this.apiForm.get(key);\n    if (control && control.pristine) {\n      control.setValue('');\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./api-configuration.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>API configuration page component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apiProxy",
                        "type": "ApiProxyService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breadcrumbService",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 59,
                "rawdescription": "\n\nAPI configuration page component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1910,
                            "end": 1916,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1904,
                            "end": 1909,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1944,
                            "end": 1949,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1938,
                            "end": 1943,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular activated route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1986,
                            "end": 1994,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1980,
                            "end": 1985,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2031,
                            "end": 2037,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2025,
                            "end": 2030,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2065,
                            "end": 2067,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2059,
                            "end": 2064,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2101,
                            "end": 2109,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apiProxy"
                        },
                        "type": "ApiProxyService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2095,
                            "end": 2100,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared API proxy service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2147,
                            "end": 2156,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2141,
                            "end": 2146,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2195,
                            "end": 2212,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "breadcrumbService"
                        },
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2189,
                            "end": 2194,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared breadcrumb service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "name": {
                    "name": "name",
                    "getSignature": {
                        "name": "name",
                        "type": "",
                        "returnType": "AbstractControl | null",
                        "line": 57,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 1733,
                                "end": 1765,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 1734,
                                    "end": 1741,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>API configuration name</p>\n"
                            }
                        ]
                    }
                }
            },
            "templateData": "<ui-spinner *ngIf=\"loading\"></ui-spinner>\n<ng-container *ngIf=\"!loading && apiConfiguration\">\n  <div class=\"flex justify-start items-center mb-5\">\n    <h1 class=\"overflow-hidden whitespace-nowrap text-ellipsis mb-0\">\n      {{ apiConfiguration.name }}\n    </h1>\n    <shared-access\n      [access]=\"apiConfiguration.permissions\"\n      [objectTypeName]=\"'common.apiConfiguration.one' | translate\"\n      (save)=\"saveAccess($event)\"\n      *ngIf=\"apiConfiguration?.canUpdate\"\n    ></shared-access>\n  </div>\n  <form [formGroup]=\"apiForm\" *ngIf=\"apiForm\">\n    <!-- General settings -->\n    <div class=\"flex justify-between mt-8\">\n      <h2>{{ 'common.general' | translate }}</h2>\n      <!-- Status -->\n      <div uiFormFieldDirective [outline]=\"false\" class=\"p-0\">\n        <label>{{ 'common.status' | translate }}</label>\n        <ui-select-menu\n          formControlName=\"status\"\n          [customTemplate]=\"{\n            template: statusTemplate,\n            context: { $implicit: apiForm.value.status }\n          }\"\n        >\n          <ui-select-option\n            *ngFor=\"let status of statusChoices\"\n            [value]=\"status\"\n          >\n            <ng-container\n              *ngTemplateOutlet=\"statusTemplate; context: { $implicit: status }\"\n            ></ng-container>\n          </ui-select-option>\n        </ui-select-menu>\n      </div>\n    </div>\n    <div class=\"flex flex-col last:mb-0\">\n      <div class=\"flex gap-x-2 flex-wrap\">\n        <!-- Name -->\n        <div\n          [uiErrorMessage]=\"\n            'components.apiConfiguration.create.errors.name' | translate\n          \"\n          [uiErrorMessageIf]=\"name?.errors && name?.touched\"\n          uiFormFieldDirective\n          class=\"flex-auto\"\n        >\n          <label>\n            {{ 'common.name' | translate }}\n          </label>\n          <input\n            formControlName=\"name\"\n            type=\"text\"\n            [placeholder]=\"'common.placeholder.name' | translate\"\n          />\n        </div>\n        <!-- Authentication type -->\n\n        <div uiFormFieldDirective [outline]=\"false\" class=\"flex-1\">\n          <label>{{ 'models.apiConfiguration.authType' | translate }}</label>\n          <ui-select-menu\n            formControlName=\"authType\"\n            [placeholder]=\"'models.apiConfiguration.selectAuthType' | translate\"\n          >\n            <ui-select-option\n              *ngFor=\"let authTypeChoice of authTypeChoices\"\n              [value]=\"authTypeChoice\"\n              >{{ authTypeChoice }}</ui-select-option\n            >\n          </ui-select-menu>\n        </div>\n      </div>\n    </div>\n\n    <!-- Host settings ( endpoint / ping ) -->\n    <div class=\"flex justify-between mt-8\">\n      <h2>\n        {{ 'pages.apiConfiguration.host' | translate }}\n      </h2>\n      <!-- Send ping request -->\n      <ui-button\n        icon=\"online_prediction\"\n        category=\"secondary\"\n        variant=\"primary\"\n        (click)=\"onPing()\"\n        [disabled]=\"!apiForm.value.pingUrl || !apiForm.value.endpoint\"\n      >\n        {{ 'pages.apiConfiguration.ping' | translate }}\n      </ui-button>\n    </div>\n    <div class=\"flex gap-x-2\">\n      <!-- Endpoint -->\n      <div uiFormFieldDirective class=\"flex-auto\">\n        <label>\n          {{ 'pages.apiConfiguration.baseUrl' | translate }}\n        </label>\n        <input\n          formControlName=\"endpoint\"\n          type=\"text\"\n          [placeholder]=\"\n            'pages.apiConfiguration.placeholder.baseUrl' | translate\n          \"\n        />\n      </div>\n      <!-- Path to ping -->\n      <div uiFormFieldDirective class=\"flex-1\">\n        <label>\n          {{ 'pages.apiConfiguration.pingUrl' | translate }}\n        </label>\n        <input\n          formControlName=\"pingUrl\"\n          type=\"text\"\n          [placeholder]=\"\n            'pages.apiConfiguration.placeholder.pingUrl' | translate\n          \"\n        />\n      </div>\n    </div>\n\n    <!-- Authentication settings -->\n    <ng-container\n      *ngIf=\"\n        apiForm.value.authType === authType.serviceToService ||\n        apiForm.value.authType === authType.userToService\n      \"\n    >\n      <h2 class=\"mt-8\">\n        {{ 'pages.apiConfiguration.authentication' | translate }}\n      </h2>\n      <!-- Service to service connection -->\n      <ng-container\n        *ngIf=\"apiForm.value.authType === authType.serviceToService\"\n      >\n        <div formGroupName=\"settings\" class=\"flex flex-col\">\n          <!-- Token url -->\n          <div uiFormFieldDirective>\n            <label>\n              {{ 'pages.apiConfiguration.tokenUrl' | translate }}\n            </label>\n            <input\n              formControlName=\"authTargetUrl\"\n              type=\"text\"\n              [placeholder]=\"\n                'pages.apiConfiguration.placeholder.tokenUrl' | translate\n              \"\n              (focus)=\"clearControl('settings.authTargetUrl')\"\n            />\n          </div>\n          <!-- Client id -->\n          <div uiFormFieldDirective>\n            <label>\n              {{ 'pages.apiConfiguration.clientId' | translate }}\n            </label>\n            <input\n              formControlName=\"apiClientID\"\n              type=\"text\"\n              [placeholder]=\"\n                'pages.apiConfiguration.placeholder.clientId' | translate\n              \"\n              (focus)=\"clearControl('settings.apiClientID')\"\n            />\n          </div>\n          <!-- Client secret -->\n          <div uiFormFieldDirective>\n            <label>\n              {{ 'pages.apiConfiguration.secret' | translate }}\n            </label>\n            <input\n              formControlName=\"safeSecret\"\n              type=\"text\"\n              [placeholder]=\"\n                'pages.apiConfiguration.placeholder.secret' | translate\n              \"\n              (focus)=\"clearControl('settings.safeSecret')\"\n            />\n          </div>\n          <!-- Token scope -->\n          <div uiFormFieldDirective>\n            <label>\n              {{ 'pages.apiConfiguration.scope' | translate }}\n            </label>\n            <input\n              formControlName=\"scope\"\n              type=\"text\"\n              [placeholder]=\"\n                'pages.apiConfiguration.placeholder.scope' | translate\n              \"\n              (focus)=\"clearControl('settings.scope')\"\n            />\n          </div>\n        </div>\n      </ng-container>\n      <!-- User to service connection -->\n      <ng-container *ngIf=\"apiForm.value.authType === authType.userToService\">\n        <div formGroupName=\"settings\" class=\"flex flex-col\">\n          <!-- Token -->\n          <div uiFormFieldDirective>\n            <label>\n              {{ 'pages.apiConfiguration.token' | translate }}\n            </label>\n            <input\n              formControlName=\"token\"\n              type=\"text\"\n              [placeholder]=\"\n                'pages.apiConfiguration.placeholder.token' | translate\n              \"\n              (focus)=\"clearControl('settings.token')\"\n            />\n          </div>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <!-- GraphQL settings -->\n    <h2 class=\"mt-8\">\n      {{ 'pages.apiConfiguration.graphQL.title' | translate }}\n    </h2>\n    <div class=\"flex flex-col\">\n      <!-- GraphQL endpoint -->\n      <div uiFormFieldDirective>\n        <label>\n          {{ 'pages.apiConfiguration.graphQL.endpoint' | translate }}\n        </label>\n        <input\n          formControlName=\"graphQLEndpoint\"\n          type=\"text\"\n          [placeholder]=\"\n            'pages.apiConfiguration.placeholder.graphQLEndpoint' | translate\n          \"\n        />\n      </div>\n    </div>\n\n    <!-- Floating div for actions buttons -->\n    <ui-fixed-wrapper>\n      <!-- Save button -->\n      <ui-button\n        category=\"secondary\"\n        variant=\"primary\"\n        (click)=\"onSave()\"\n        [disabled]=\"apiForm.invalid || !apiForm.dirty\"\n      >\n        {{ 'common.save' | translate }}\n      </ui-button>\n    </ui-fixed-wrapper>\n  </form>\n</ng-container>\n\n<!-- Template to display status -->\n<ng-template #statusTemplate let-status>\n  <shared-status-options [status]=\"status\"></shared-status-options>\n</ng-template>\n"
        },
        {
            "name": "ApiConfigurationsComponent",
            "id": "component-ApiConfigurationsComponent-e2da1a0b91be36dad33aa11687b71cf2558e22f15d2f69d49b922da297e67f8d961d0685e8628f444fb58aa0194e2708988fb09c7456a7bdf7ef7ed2a6e08ea6",
            "file": "apps/back-office/src/app/dashboard/pages/api-configurations/api-configurations.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-api-configurations",
            "styleUrls": [
                "./api-configurations.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./api-configurations.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apiConfigurationsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<ApiConfigurationsQueryResponse>",
                    "optional": false,
                    "description": "<p>Query reference</p>\n",
                    "line": 54,
                    "rawdescription": "\nQuery reference",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "cachedApiConfigurations",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApiConfiguration[]",
                    "optional": false,
                    "description": "<p>Cached data</p>\n",
                    "line": 60,
                    "rawdescription": "\nCached data",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dataSource",
                    "defaultValue": "new Array<ApiConfiguration>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Data source</p>\n",
                    "line": 58,
                    "rawdescription": "\nData source"
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 98,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['name', 'status', 'authType', 'actions']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns to display</p>\n",
                    "line": 56,
                    "rawdescription": "\nColumns to display"
                },
                {
                    "name": "filter",
                    "defaultValue": "{\n    filters: [],\n    logic: 'and',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Filter object</p>\n",
                    "line": 68,
                    "rawdescription": "\nFilter object",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "form",
                    "defaultValue": "this.fb.group({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Filter form</p>\n",
                    "line": 73,
                    "rawdescription": "\nFilter form"
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 50,
                    "rawdescription": "\nLoading state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageInfo",
                    "defaultValue": "{\n    pageIndex: 0,\n    pageSize: ITEMS_PER_PAGE,\n    length: 0,\n    endCursor: '',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Page info</p>\n",
                    "line": 78,
                    "rawdescription": "\nPage info",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showFilters",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Show filter</p>\n",
                    "line": 75,
                    "rawdescription": "\nShow filter",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableSort",
                    "optional": false,
                    "description": "<p>Sort object</p>\n",
                    "line": 64,
                    "rawdescription": "\nSort object",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updating",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Updating state</p>\n",
                    "line": 52,
                    "rawdescription": "\nUpdating state",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nApplies the filter to the data source.\n\n",
                    "description": "<p>Applies the filter to the data source.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4240,
                                "end": 4245,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4234,
                                "end": 4239,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>event value of the filter.</p>\n"
                        }
                    ]
                },
                {
                    "name": "fetchApiConfigurations",
                    "args": [
                        {
                            "name": "refetch",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 330,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate api configurations query.\n\n",
                    "description": "<p>Update api configurations query.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9670,
                                "end": 9677,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "refetch"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 9664,
                                "end": 9669,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>erase previous query results</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates the API configuration query, and subscribes to the query changes.\n",
                    "description": "<p>Creates the API configuration query, and subscribes to the query changes.</p>\n"
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplays the AddApiConfiguration modal.\nCreates a new apiConfiguration on closed if result.\n",
                    "description": "<p>Displays the AddApiConfiguration modal.\nCreates a new apiConfiguration on closed if result.</p>\n",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 230,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemoves an apiConfiguration if authorized.\n\n",
                    "description": "<p>Removes an apiConfiguration if authorized.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6464,
                                "end": 6471,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "element"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6458,
                                "end": 6463,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>API config to delete.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 6506,
                                "end": 6507,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6500,
                                "end": 6505,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>click event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onPage",
                    "args": [
                        {
                            "name": "e",
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles page event.\n\n",
                    "description": "<p>Handles page event.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3830,
                                "end": 3831,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3824,
                                "end": 3829,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>page event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onSort",
                    "args": [
                        {
                            "name": "event",
                            "type": "TableSort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 319,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle sort change.\n\n",
                    "description": "<p>Handle sort change.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9436,
                                "end": 9441,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "TableSort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9430,
                                "end": 9435,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>sort event</p>\n"
                        }
                    ]
                },
                {
                    "name": "updateValues",
                    "args": [
                        {
                            "name": "data",
                            "type": "ApiConfigurationsQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 294,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdates local list with given data\n\n",
                    "description": "<p>Updates local list with given data</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8567,
                                "end": 8571,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "ApiConfigurationsQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8561,
                                "end": 8566,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>New values to update forms</p>\n"
                        },
                        {
                            "name": {
                                "pos": 8611,
                                "end": 8618,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "loading"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8605,
                                "end": 8610,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Loading state</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>API configurations page component.</p>\n",
            "rawdescription": "\n\nAPI configurations page component.\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { Apollo, QueryRef } from 'apollo-angular';\nimport {\n  AddApiConfigurationMutationResponse,\n  ApiConfiguration,\n  ConfirmService,\n  UnsubscribeComponent,\n  ApiConfigurationsQueryResponse,\n  DeleteApiConfigurationMutationResponse,\n} from '@oort-front/shared';\nimport {\n  ADD_API_CONFIGURATION,\n  DELETE_API_CONFIGURATION,\n} from './graphql/mutations';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  getCachedValues,\n  updateQueryUniqueValues,\n} from '../../../utils/update-queries';\nimport { ApolloQueryResult } from '@apollo/client';\nimport {\n  TableSort,\n  UIPageChangeEvent,\n  handleTablePageEvent,\n} from '@oort-front/ui';\nimport { SnackbarService } from '@oort-front/ui';\nimport { GET_API_CONFIGURATIONS } from './graphql/queries';\nimport { FormBuilder } from '@angular/forms';\n\n/** Default items per page for pagination. */\nconst ITEMS_PER_PAGE = 10;\n\n/**\n * API configurations page component.\n */\n@Component({\n  selector: 'app-api-configurations',\n  templateUrl: './api-configurations.component.html',\n  styleUrls: ['./api-configurations.component.scss'],\n})\nexport class ApiConfigurationsComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  // === DATA ===\n  /** Loading state */\n  public loading = true;\n  /** Updating state */\n  public updating = false;\n  /** Query reference */\n  private apiConfigurationsQuery!: QueryRef<ApiConfigurationsQueryResponse>;\n  /** Columns to display */\n  displayedColumns = ['name', 'status', 'authType', 'actions'];\n  /** Data source */\n  dataSource = new Array<ApiConfiguration>();\n  /** Cached data */\n  public cachedApiConfigurations: ApiConfiguration[] = [];\n\n  // === SORTING ===\n  /** Sort object */\n  private sort!: TableSort;\n\n  // === FILTERS ===\n  /** Filter object */\n  public filter: any = {\n    filters: [],\n    logic: 'and',\n  };\n  /** Filter form */\n  form = this.fb.group({});\n  /** Show filter */\n  public showFilters = false;\n\n  /** Page info */\n  public pageInfo = {\n    pageIndex: 0,\n    pageSize: ITEMS_PER_PAGE,\n    length: 0,\n    endCursor: '',\n  };\n\n  /**\n   * API configurations page component\n   *\n   * @param apollo Apollo service\n   * @param dialog Dialog service\n   * @param snackBar Shared snackbar service\n   * @param confirmService Shared confirm service\n   * @param router Angular router\n   * @param translate Angular translate service\n   * @param fb Angular Form Builder\n   */\n  constructor(\n    private apollo: Apollo,\n    public dialog: Dialog,\n    private snackBar: SnackbarService,\n    private confirmService: ConfirmService,\n    private router: Router,\n    private translate: TranslateService, // private uiTableWrapper: TableWrapperDirective\n    private fb: FormBuilder\n  ) {\n    super();\n  }\n\n  /**\n   * Creates the API configuration query, and subscribes to the query changes.\n   */\n  ngOnInit(): void {\n    this.apiConfigurationsQuery =\n      this.apollo.watchQuery<ApiConfigurationsQueryResponse>({\n        query: GET_API_CONFIGURATIONS,\n        variables: {\n          first: ITEMS_PER_PAGE,\n          afterCursor: this.pageInfo.endCursor,\n          filter: this.filter,\n          sortField: this.sort?.sortDirection && this.sort.active,\n          sortOrder: this.sort?.sortDirection,\n        },\n      });\n\n    this.apiConfigurationsQuery.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (results: ApolloQueryResult<ApiConfigurationsQueryResponse>) => {\n          this.updateValues(results.data, results.loading);\n        }\n      );\n    // Initializing sort to an empty one\n    this.sort = {\n      active: '',\n      sortDirection: '',\n    };\n  }\n\n  /**\n   * Handles page event.\n   *\n   * @param e page event.\n   */\n  onPage(e: UIPageChangeEvent): void {\n    const cachedData = handleTablePageEvent(\n      e,\n      this.pageInfo,\n      this.cachedApiConfigurations\n    );\n    if (cachedData && cachedData.length === this.pageInfo.pageSize) {\n      this.dataSource = cachedData;\n    } else {\n      this.fetchApiConfigurations();\n    }\n  }\n\n  /**\n   * Applies the filter to the data source.\n   *\n   * @param event event value of the filter.\n   */\n  applyFilter(event: any): void {\n    this.filter = event;\n    this.fetchApiConfigurations(true);\n  }\n\n  /**\n   * Displays the AddApiConfiguration modal.\n   * Creates a new apiConfiguration on closed if result.\n   */\n  async onAdd(): Promise<void> {\n    const { AddApiConfigurationComponent } = await import(\n      './components/add-api-configuration/add-api-configuration.component'\n    );\n    const dialogRef = this.dialog.open(AddApiConfigurationComponent);\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.apollo\n          .mutate<AddApiConfigurationMutationResponse>({\n            mutation: ADD_API_CONFIGURATION,\n            variables: {\n              name: value.name,\n            },\n          })\n          .subscribe({\n            next: ({ errors, data }) => {\n              if (errors) {\n                this.snackBar.openSnackBar(\n                  this.translate.instant(\n                    'common.notifications.objectNotCreated',\n                    {\n                      type: this.translate\n                        .instant('common.apiConfiguration.one')\n                        .toLowerCase(),\n                      error: errors ? errors[0].message : '',\n                    }\n                  ),\n                  { error: true }\n                );\n              } else {\n                this.snackBar.openSnackBar(\n                  this.translate.instant('common.notifications.objectCreated', {\n                    type: this.translate\n                      .instant('common.apiConfiguration.one')\n                      .toLowerCase(),\n                    value: data?.addApiConfiguration.name,\n                  })\n                );\n                if (data) {\n                  this.router.navigate([\n                    '/settings/apiconfigurations',\n                    data.addApiConfiguration.id,\n                  ]);\n                }\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n\n  /**\n   * Removes an apiConfiguration if authorized.\n   *\n   * @param element API config to delete.\n   * @param e click event.\n   */\n  onDelete(element: any, e: any): void {\n    e.stopPropagation();\n    const dialogRef = this.confirmService.openConfirmModal({\n      title: this.translate.instant('components.apiConfiguration.delete.title'),\n      content: this.translate.instant(\n        'components.apiConfiguration.delete.confirmationMessage',\n        {\n          name: element.name,\n        }\n      ),\n      confirmText: this.translate.instant('components.confirmModal.delete'),\n      confirmVariant: 'danger',\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.apollo\n          .mutate<DeleteApiConfigurationMutationResponse>({\n            mutation: DELETE_API_CONFIGURATION,\n            variables: {\n              id: element.id,\n            },\n          })\n          .subscribe({\n            next: (res) => {\n              if (res && !res.errors) {\n                this.snackBar.openSnackBar(\n                  this.translate.instant('common.notifications.objectDeleted', {\n                    value: this.translate.instant(\n                      'common.apiConfiguration.one'\n                    ),\n                  })\n                );\n                this.dataSource = this.dataSource.filter(\n                  (x) => x.id !== element.id\n                );\n              } else {\n                this.snackBar.openSnackBar(\n                  this.translate.instant(\n                    'common.notifications.objectNotDeleted',\n                    {\n                      value: this.translate.instant(\n                        'common.apiConfiguration.one'\n                      ),\n                      error: res.errors ? res.errors[0].message : '',\n                    }\n                  ),\n                  { error: true }\n                );\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n\n  /**\n   * Updates local list with given data\n   *\n   * @param data New values to update forms\n   * @param loading Loading state\n   */\n  private updateValues(\n    data: ApiConfigurationsQueryResponse,\n    loading: boolean\n  ): void {\n    const mappedValues = data.apiConfigurations.edges.map((x) => x.node);\n    this.cachedApiConfigurations = updateQueryUniqueValues(\n      this.cachedApiConfigurations,\n      mappedValues\n    );\n    // then slice the array to correctly match the items in the current page\n    this.dataSource = this.cachedApiConfigurations.slice(\n      this.pageInfo.pageSize * this.pageInfo.pageIndex,\n      this.pageInfo.pageSize * (this.pageInfo.pageIndex + 1)\n    );\n    this.pageInfo.length = data.apiConfigurations.totalCount;\n    this.pageInfo.endCursor = data.apiConfigurations.pageInfo.endCursor;\n    this.loading = loading;\n    this.updating = false;\n  }\n\n  /**\n   * Handle sort change.\n   *\n   * @param event sort event\n   */\n  onSort(event: TableSort): void {\n    // We change the sort for the current value\n    this.sort = event;\n    this.fetchApiConfigurations(true);\n  }\n\n  /**\n   * Update api configurations query.\n   *\n   * @param refetch erase previous query results\n   */\n  private fetchApiConfigurations(refetch?: boolean): void {\n    this.updating = true;\n    const variables = {\n      first: this.pageInfo.pageSize,\n      afterCursor: refetch ? null : this.pageInfo.endCursor,\n      filter: this.filter,\n      sortField: this.sort?.sortDirection && this.sort.active,\n      sortOrder: this.sort?.sortDirection,\n    };\n    const cachedValues: ApiConfigurationsQueryResponse = getCachedValues(\n      this.apollo.client,\n      GET_API_CONFIGURATIONS,\n      variables\n    );\n    if (refetch) {\n      this.cachedApiConfigurations = [];\n      this.pageInfo.pageIndex = 0;\n    }\n    if (cachedValues) {\n      this.updateValues(cachedValues, false);\n    } else {\n      if (refetch) {\n        // Rebuild the query\n        this.apiConfigurationsQuery.refetch(variables);\n      } else {\n        // Fetch more records\n        this.apiConfigurationsQuery\n          .fetchMore({\n            variables,\n          })\n          .then(\n            (results: ApolloQueryResult<ApiConfigurationsQueryResponse>) => {\n              this.updateValues(results.data, results.loading);\n            }\n          );\n      }\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./api-configurations.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>API configurations page component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 83,
                "rawdescription": "\n\nAPI configurations page component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2299,
                            "end": 2305,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2293,
                            "end": 2298,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2333,
                            "end": 2339,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2327,
                            "end": 2332,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2367,
                            "end": 2375,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2361,
                            "end": 2366,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2412,
                            "end": 2426,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2406,
                            "end": 2411,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2462,
                            "end": 2468,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2456,
                            "end": 2461,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2496,
                            "end": 2505,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2490,
                            "end": 2495,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2544,
                            "end": 2546,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2538,
                            "end": 2543,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular Form Builder</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"mb-8 flex flex-col gap-2\">\n  <div class=\"flex gap-8 justify-between flex-col sm:flex-row\">\n    <app-api-configuration-filter\n      #filter\n      (filter)=\"applyFilter($event)\"\n      [loading]=\"updating\"\n    >\n    </app-api-configuration-filter>\n    <!-- Actions -->\n    <ui-button\n      icon=\"add\"\n      category=\"secondary\"\n      variant=\"primary\"\n      (click)=\"onAdd()\"\n      *ngIf=\"'create' | able : 'ApiConfiguration'\"\n    >\n      {{ 'pages.apiConfigurations.create' | translate }}\n    </ui-button>\n  </div>\n  <ng-container *ngTemplateOutlet=\"filter.expandedFilter\"></ng-container>\n</div>\n\n<!-- Table container -->\n<div class=\"overflow-x-hidden shadow-2lg\">\n  <!-- Table scroll container -->\n  <div class=\"overflow-x-auto\">\n    <table\n      *ngIf=\"!loading\"\n      cdk-table\n      uiTableWrapper\n      (sortChange)=\"onSort($event)\"\n      [dataSource]=\"dataSource\"\n    >\n      <ng-container cdkColumnDef=\"name\">\n        <th uiTableHeaderSort=\"name\" uiCellHeader *cdkHeaderCellDef>\n          <span class=\"headerTitle\">\n            {{ 'common.name' | translate }}\n          </span>\n        </th>\n        <td\n          uiCell\n          *cdkCellDef=\"let element\"\n          class=\"!text-gray-900 !font-medium max-w-[30vw]\"\n        >\n          {{ element.name }}\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"status\">\n        <th uiCellHeader *cdkHeaderCellDef>\n          <span class=\"headerTitle\">\n            {{ 'common.status' | translate }}\n          </span>\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">\n          <shared-status-options\n            [status]=\"element.status\"\n          ></shared-status-options>\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"authType\">\n        <th uiCellHeader *cdkHeaderCellDef>\n          <span class=\"headerTitle\">\n            {{ 'models.apiConfiguration.authType' | translate }}\n          </span>\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">{{ element.authType }}</td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"actions\" [stickyEnd]=\"true\">\n        <th uiCellHeader *cdkHeaderCellDef class=\"w-16\"></th>\n        <td uiCell *cdkCellDef=\"let element\">\n          <ui-button\n            [isIcon]=\"true\"\n            icon=\"more_vert\"\n            [uiMenuTriggerFor]=\"menu\"\n            (click)=\"$event.stopPropagation()\"\n            [disabled]=\"!(element.canUpdate || element.canDelete)\"\n            [uiTooltip]=\"'common.actions' | translate\"\n          >\n          </ui-button>\n          <ui-menu #menu>\n            <button\n              uiMenuItem\n              (click)=\"onDelete(element, $event)\"\n              *ngIf=\"element.canDelete\"\n            >\n              <ui-icon icon=\"delete\" variant=\"danger\"></ui-icon>\n              {{ 'common.delete' | translate }}\n            </button>\n          </ui-menu>\n        </td>\n      </ng-container>\n\n      <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        cdk-row\n        *cdkRowDef=\"let row; columns: displayedColumns\"\n        class=\"cursor-pointer\"\n        [routerLink]=\"['/settings/apiconfigurations', row.id]\"\n      ></tr>\n    </table>\n    <shared-skeleton-table\n      *ngIf=\"loading\"\n      [columns]=\"[\n        'common.name',\n        'common.status',\n        'models.apiConfiguration.authType'\n      ]\"\n      [actions]=\"true\"\n    >\n    </shared-skeleton-table>\n  </div>\n</div>\n<ui-paginator\n  [disabled]=\"loading || updating\"\n  [pageIndex]=\"pageInfo.pageIndex\"\n  [pageSize]=\"pageInfo.pageSize\"\n  [pageSizeOptions]=\"[10, 25, 50]\"\n  [totalItems]=\"pageInfo.length\"\n  [ariaLabel]=\"'components.apiConfiguration.paginator.ariaLabel' | translate\"\n  (pageChange)=\"onPage($event)\"\n>\n</ui-paginator>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-b1f2c6742da027bd929638d1395f93893ec93a57b5f7c74beef511d3b33e3d6074876c295660b0cce1891af5984f97614165b3783846aa2c8b6b3d0ab69ca0cb",
            "file": "apps/back-office/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "declaration",
                    "defaultValue": "[\n    ApplicationDropdownComponent,\n    GeofieldsListboxComponent,\n    ReferenceDataDropdownComponent,\n    ResourceAvailableFieldsComponent,\n    ResourceCustomFiltersComponent,\n    ResourceDropdownComponent,\n    ResourceSelectTextComponent,\n    TestServiceDropdownComponent,\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Static component declaration of survey custom components for the property grid editor in order to avoid removal on tree shake for production build</p>\n",
                    "line": 26,
                    "rawdescription": "\nStatic component declaration of survey custom components for the property grid editor in order to avoid removal on tree shake for production build",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "'back-office'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Application title</p>\n",
                    "line": 37,
                    "rawdescription": "\nApplication title"
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConfiguration of the Authentication behavior\n",
                    "description": "<p>Configuration of the Authentication behavior</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Root component of back-office.</p>\n",
            "rawdescription": "\n\nRoot component of back-office.\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport {\n  GeofieldsListboxComponent,\n  ApplicationDropdownComponent,\n  AuthService,\n  ReferenceDataDropdownComponent,\n  ResourceAvailableFieldsComponent,\n  ResourceCustomFiltersComponent,\n  ResourceDropdownComponent,\n  ResourceSelectTextComponent,\n  TestServiceDropdownComponent,\n} from '@oort-front/shared';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from '../environments/environment';\n\n/**\n * Root component of back-office.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  /** Static component declaration of survey custom components for the property grid editor in order to avoid removal on tree shake for production build */\n  static declaration = [\n    ApplicationDropdownComponent,\n    GeofieldsListboxComponent,\n    ReferenceDataDropdownComponent,\n    ResourceAvailableFieldsComponent,\n    ResourceCustomFiltersComponent,\n    ResourceDropdownComponent,\n    ResourceSelectTextComponent,\n    TestServiceDropdownComponent,\n  ];\n  /** Application title */\n  title = 'back-office';\n\n  /**\n   * Root component of back-office\n   *\n   * @param authService Shared authentication service\n   * @param translate Angular translate service\n   */\n  constructor(\n    private authService: AuthService,\n    private translate: TranslateService\n  ) {\n    this.translate.addLangs(environment.availableLanguages);\n    this.translate.setDefaultLang(environment.availableLanguages[0]);\n  }\n\n  /**\n   * Configuration of the Authentication behavior\n   */\n  ngOnInit(): void {\n    this.authService.initLoginSequence();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Root component of back-office</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "rawdescription": "\n\nRoot component of back-office\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1253,
                            "end": 1264,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "authService"
                        },
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1247,
                            "end": 1252,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared authentication service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1307,
                            "end": 1316,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1301,
                            "end": 1306,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "ApplicationComponent",
            "id": "component-ApplicationComponent-b239f1a3a91a4ca0379abcf86d38e9daca019adc73b2afbd8b99dfa06b9b9d49a3c11b213ccf37eb2099c4e5a27ba29c063ea4deee6d4680237716e552408c16",
            "file": "apps/back-office/src/app/application/application.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-application",
            "styleUrls": [
                "./application.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./application.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adminNavItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "<p>Admin pages</p>\n",
                    "line": 32,
                    "rawdescription": "\nAdmin pages",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "application",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Application",
                    "optional": true,
                    "description": "<p>Current application</p>\n",
                    "line": 34,
                    "rawdescription": "\nCurrent application",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hideMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Should hide menu by default ( only when vertical )</p>\n",
                    "line": 38,
                    "rawdescription": "\nShould hide menu by default ( only when vertical )",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "largeDevice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Is large device</p>\n",
                    "line": 40,
                    "rawdescription": "\nIs large device",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading indicator</p>\n",
                    "line": 42,
                    "rawdescription": "\nLoading indicator",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "navGroups",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "<p>Navigation groups</p>\n",
                    "line": 30,
                    "rawdescription": "\nNavigation groups",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "Angular activated route",
                    "line": 55,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sideMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Use side menu or not</p>\n",
                    "line": 36,
                    "rawdescription": "\nUse side menu or not",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Application title</p>\n",
                    "line": 28,
                    "rawdescription": "\nApplication title",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "canDeactivate",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable | boolean",
                    "typeParameters": [],
                    "line": 260,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nShow modal confirmation before leave the page if has changes on custom styling\n\n",
                    "description": "<p>Show modal confirmation before leave the page if has changes on custom styling</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 8136,
                                "end": 8143,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>boolean of observable of boolean</p>\n"
                        }
                    ]
                },
                {
                    "name": "getNavIcon",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 199,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet icons from type of page\n\n",
                    "description": "<p>Get icons from type of page</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6539,
                                "end": 6543,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "type"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6533,
                                "end": 6538,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>type of page</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 6563,
                                "end": 6570,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>icon as string</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 285,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemove application data such as styling when existing application edition.\n",
                    "description": "<p>Remove application data such as styling when existing application edition.</p>\n",
                    "modifierKind": [
                        161
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 225,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDelete item, prompt for confirmation\n\n",
                    "description": "<p>Delete item, prompt for confirmation</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7144,
                                "end": 7148,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "item"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7138,
                                "end": 7143,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>item to delete</p>\n"
                        }
                    ]
                },
                {
                    "name": "onReorder",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 249,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReorder pages\n\n",
                    "description": "<p>Reorder pages</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7864,
                                "end": 7869,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7858,
                                "end": 7863,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Reorder event</p>\n"
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChange the display depending on windows size.\n\n",
                    "description": "<p>Change the display depending on windows size.</p>\n",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        167
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6888,
                                "end": 6893,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6882,
                                "end": 6887,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Event that implies a change in window size</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChange the display depending on windows size.\n\n",
                    "description": "<p>Change the display depending on windows size.</p>\n",
                    "jsdoctags": [
                        {
                            "pos": 6881,
                            "end": 6940,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 344,
                            "tagName": {
                                "pos": 6882,
                                "end": 6887,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Event that implies a change in window size</p>\n",
                            "name": {
                                "pos": 6888,
                                "end": 6893,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "isNameFirst": true,
                            "isBracketed": false
                        }
                    ],
                    "line": 216
                }
            ],
            "standalone": false,
            "imports": [],
            "description": "<p>Main component of Application view.</p>\n",
            "rawdescription": "\n\nMain component of Application view.\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  Application,\n  ContentType,\n  ApplicationService,\n  ConfirmService,\n  UnsubscribeComponent,\n} from '@oort-front/shared';\nimport get from 'lodash/get';\nimport { takeUntil, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n/**\n * Main component of Application view.\n */\n@Component({\n  selector: 'app-application',\n  templateUrl: './application.component.html',\n  styleUrls: ['./application.component.scss'],\n})\nexport class ApplicationComponent\n  extends UnsubscribeComponent\n  implements OnInit, OnDestroy\n{\n  /** Application title */\n  public title = '';\n  /** Navigation groups */\n  public navGroups: any[] = [];\n  /** Admin pages */\n  public adminNavItems: any[] = [];\n  /** Current application */\n  public application?: Application;\n  /** Use side menu or not */\n  public sideMenu = false;\n  /** Should hide menu by default ( only when vertical ) */\n  public hideMenu = false;\n  /** Is large device */\n  public largeDevice: boolean;\n  /** Loading indicator */\n  public loading = true;\n\n  /**\n   * Main component of application view\n   *\n   * @param applicationService Shared application service\n   * @param route Angular activated route\n   * @param router Angular router\n   * @param translate Angular translate service\n   * @param confirmService Shared confirmation service\n   */\n  constructor(\n    private applicationService: ApplicationService,\n    public route: ActivatedRoute,\n    private router: Router,\n    private translate: TranslateService,\n    private confirmService: ConfirmService\n  ) {\n    super();\n    this.largeDevice = window.innerWidth > 1024;\n  }\n\n  ngOnInit(): void {\n    this.route.params.pipe(takeUntil(this.destroy$)).subscribe((params) => {\n      this.loading = true;\n      this.applicationService.loadApplication(params.id);\n    });\n    this.applicationService.application$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((application: Application | null) => {\n        if (application) {\n          this.loading = false;\n          this.title = application.name || '';\n          const displayNavItems: any[] =\n            application.pages\n              ?.filter((x: any) => x.content && x.canSee)\n              .map((x: any) => ({\n                id: x.id,\n                name: x.name,\n                path:\n                  x.type === ContentType.form\n                    ? `./${x.type}/${x.id}`\n                    : `./${x.type}/${x.content}`,\n                icon: x.icon || this.getNavIcon(x.type || ''),\n                fontFamily: x.icon ? 'fa' : 'material',\n                class: null,\n                orderable: true,\n                visible: x.visible ?? true,\n                action: x.canDelete && {\n                  icon: 'delete',\n                  toolTip: this.translate.instant('common.deleteObject', {\n                    name: this.translate\n                      .instant('common.page.one')\n                      .toLowerCase(),\n                  }),\n                  callback: () => this.onDelete(x),\n                },\n              })) || [];\n          if (application.canUpdate) {\n            this.adminNavItems = [\n              {\n                name: this.translate.instant('common.settings'),\n                path: './settings/edit',\n                icon: 'settings',\n              },\n              {\n                name: this.translate.instant('common.template.few'),\n                path: './settings/templates',\n                icon: 'description',\n              },\n              {\n                name: this.translate.instant('common.distributionList.few'),\n                path: './settings/distribution-lists',\n                icon: 'mail',\n              },\n              {\n                name: this.translate.instant('common.customNotification.few'),\n                path: './settings/notifications',\n                icon: 'schedule_send',\n              },\n              {\n                name: this.translate.instant('common.user.few'),\n                path: './settings/users',\n                icon: 'supervisor_account',\n              },\n              {\n                name: this.translate.instant('common.role.few'),\n                path: './settings/roles',\n                icon: 'verified_user',\n              },\n              {\n                name: this.translate.instant(\n                  'pages.application.positionAttributes.title'\n                ),\n                path: './settings/position',\n                icon: 'edit_attributes',\n              },\n              {\n                name: this.translate.instant('common.channel.few'),\n                path: './settings/channels',\n                icon: 'dns',\n              },\n              {\n                name: this.translate.instant('common.subscription.few'),\n                path: './settings/subscriptions',\n                icon: 'add_to_queue',\n              },\n            ];\n          }\n          if (application.canUpdate) {\n            this.adminNavItems.push({\n              name: this.translate.instant('common.archive.few'),\n              path: './settings/archive',\n              icon: 'delete',\n            });\n          }\n          this.navGroups = [\n            {\n              name: this.translate.instant('common.page.few'),\n              navItems: displayNavItems,\n            },\n          ];\n          if (!this.application || application.id !== this.application.id) {\n            const firstPage = get(application, 'pages', [])[0];\n            if (this.router.url.endsWith(application?.id || '') || !firstPage) {\n              if (firstPage) {\n                this.router.navigate(\n                  [\n                    `./${firstPage.type}/${\n                      firstPage.type === ContentType.form\n                        ? firstPage.id\n                        : firstPage.content\n                    }`,\n                  ],\n                  { relativeTo: this.route }\n                );\n              } else {\n                this.router.navigate([`./`], { relativeTo: this.route });\n              }\n            }\n          }\n          this.application = application;\n          this.sideMenu = this.application?.sideMenu ?? true;\n          this.hideMenu = this.application?.hideMenu ?? false;\n        } else {\n          this.title = '';\n          this.navGroups = [];\n        }\n      });\n  }\n\n  /**\n   * Get icons from type of page\n   *\n   * @param type type of page\n   * @returns icon as string\n   */\n  private getNavIcon(type: string): string {\n    switch (type) {\n      case 'workflow':\n        return 'linear_scale';\n      case 'form':\n        return 'description';\n      default:\n        return 'dashboard';\n    }\n  }\n\n  /**\n   * Change the display depending on windows size.\n   *\n   * @param event Event that implies a change in window size\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any): void {\n    this.largeDevice = event.target.innerWidth > 1024;\n  }\n\n  /**\n   * Delete item, prompt for confirmation\n   *\n   * @param item item to delete\n   */\n  onDelete(item: any): void {\n    const dialogRef = this.confirmService.openConfirmModal({\n      title: this.translate.instant('common.deleteObject', {\n        name: this.translate.instant('common.page.one'),\n      }),\n      content: this.translate.instant(\n        'components.application.pages.delete.confirmationMessage',\n        { name: item.name }\n      ),\n      confirmText: this.translate.instant('components.confirmModal.delete'),\n      confirmVariant: 'danger',\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.applicationService.deletePage(item.id);\n      }\n    });\n  }\n\n  /**\n   * Reorder pages\n   *\n   * @param event Reorder event\n   */\n  onReorder(event: any): void {\n    this.applicationService.reorderPages(\n      event.filter((x: any) => x.id).map((x: any) => x.id)\n    );\n  }\n\n  /**\n   * Show modal confirmation before leave the page if has changes on custom styling\n   *\n   * @returns boolean of observable of boolean\n   */\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.applicationService.customStyleEdited) {\n      const dialogRef = this.confirmService.openConfirmModal({\n        title: this.translate.instant('components.form.update.exit'),\n        content: this.translate.instant(\n          'components.widget.settings.close.confirmationMessage'\n        ),\n        confirmText: this.translate.instant('components.confirmModal.confirm'),\n        confirmVariant: 'primary',\n      });\n      return dialogRef.closed.pipe(\n        map((confirm) => {\n          if (confirm) {\n            return true;\n          }\n          return false;\n        })\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove application data such as styling when existing application edition.\n   */\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.applicationService.leaveApplication();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./application.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Main component of application view</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "rawdescription": "\n\nMain component of application view\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1268,
                            "end": 1286,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1262,
                            "end": 1267,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1326,
                            "end": 1331,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1320,
                            "end": 1325,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular activated route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1368,
                            "end": 1374,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1362,
                            "end": 1367,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1402,
                            "end": 1411,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1396,
                            "end": 1401,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1450,
                            "end": 1464,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1444,
                            "end": 1449,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirmation service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!-- Loading indicator -->\n<ui-spinner\n  class=\"flex justify-center items-center h-screen\"\n  *ngIf=\"loading\"\n></ui-spinner>\n<!-- Application wrapper -->\n<shared-layout\n  *ngIf=\"!loading\"\n  [route]=\"route\"\n  [header]=\"header\"\n  [leftSidenav]=\"pages\"\n  [sideMenu]=\"sideMenu\"\n  [menuOpened]=\"!hideMenu\"\n></shared-layout>\n<ng-template #header>\n  <app-application-header\n    [title]=\"title\"\n    [navItems]=\"adminNavItems\"\n    [canUpdate]=\"application?.canUpdate!\"\n    class=\"overflow-hidden\"\n  ></app-application-header>\n</ng-template>\n<!--Need the nav variable, don't remove let-nav, used in layout-->\n<ng-template #pages let-nav>\n  <shared-navbar\n    [nav]=\"nav\"\n    [navGroups]=\"navGroups\"\n    [appLayout]=\"true\"\n    [canAddPage]=\"application?.canUpdate!\"\n    [vertical]=\"!(!sideMenu && largeDevice)\"\n    (reorder)=\"onReorder($event)\"\n  ></shared-navbar>\n</ng-template>\n"
        },
        {
            "name": "ApplicationHeaderComponent",
            "id": "component-ApplicationHeaderComponent-b51e3f821c98611db34deb8930f21e8a8c2c3852ed0ec6b849896251a403efe6205d5398dfb75b7ab7fa2bd1bca888be1f1d2af89dd277470bec217258d1d869",
            "file": "apps/back-office/src/app/components/application-header/application-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-application-header",
            "styleUrls": [
                "./application-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./application-header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "canUpdate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nCan user update application",
                    "description": "<p>Can user update application</p>\n",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "navItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAdmin routes",
                    "description": "<p>Admin routes</p>\n",
                    "line": 29,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nApplication title",
                    "description": "<p>Application title</p>\n",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "application",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Application | null",
                    "optional": false,
                    "description": "<p>Current application</p>\n",
                    "line": 33,
                    "rawdescription": "\nCurrent application",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "canPublish",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Can application be published</p>\n",
                    "line": 39,
                    "rawdescription": "\nCan application be published",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 52,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "locked",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "<p>Is edition of application locked</p>\n",
                    "line": 35,
                    "rawdescription": "\nIs edition of application locked",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "lockedByUser",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "<p>User that locked edition</p>\n",
                    "line": 37,
                    "rawdescription": "\nUser that locked edition",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPublish",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConfirms publication of application, and makes it active.\n",
                    "description": "<p>Confirms publication of application, and makes it active.</p>\n"
                },
                {
                    "name": "onUnlock",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUnlocks the application, and controls edition.\n",
                    "description": "<p>Unlocks the application, and controls edition.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Header component visible when editing application.\nAppear on top of the view.</p>\n",
            "rawdescription": "\n\nHeader component visible when editing application.\nAppear on top of the view.\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { TranslateService } from '@ngx-translate/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { SnackbarService } from '@oort-front/ui';\nimport {\n  Application,\n  ApplicationService,\n  ConfirmService,\n  UnsubscribeComponent,\n} from '@oort-front/shared';\n\n/**\n * Header component visible when editing application.\n * Appear on top of the view.\n */\n@Component({\n  selector: 'app-application-header',\n  templateUrl: './application-header.component.html',\n  styleUrls: ['./application-header.component.scss'],\n})\nexport class ApplicationHeaderComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  /** Application title */\n  @Input() title = '';\n  /** Admin routes */\n  @Input() navItems: any[] = [];\n  /** Can user update application */\n  @Input() canUpdate = false;\n  /** Current application */\n  public application: Application | null = null;\n  /** Is edition of application locked */\n  public locked: boolean | undefined = undefined;\n  /** User that locked edition */\n  public lockedByUser: boolean | undefined = undefined;\n  /** Can application be published */\n  public canPublish = false;\n\n  /**\n   * Header component visible when editing application\n   *\n   * @param applicationService Shared application service\n   * @param dialog Dialog service\n   * @param snackBar Shared snackbar service\n   * @param confirmService Shared confirm service\n   * @param translate Angular translate service\n   */\n  constructor(\n    private applicationService: ApplicationService,\n    public dialog: Dialog,\n    private snackBar: SnackbarService,\n    private confirmService: ConfirmService,\n    private translate: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.applicationService.application$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((application: Application | null) => {\n        this.application = application;\n        this.locked = this.application?.locked;\n        this.lockedByUser = this.application?.lockedByUser;\n        this.canPublish =\n          !!this.application && this.application.pages\n            ? this.application.pages.length > 0\n            : false;\n      });\n  }\n\n  /**\n   * Unlocks the application, and controls edition.\n   */\n  onUnlock(): void {\n    const dialogRef = this.confirmService.openConfirmModal({\n      title: this.translate.instant('components.application.unlock.title'),\n      content: this.translate.instant(\n        'components.application.unlock.confirmationMessage',\n        {\n          name: this.application?.name,\n        }\n      ),\n      confirmVariant: 'primary',\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.applicationService.toggleApplicationLock();\n    });\n  }\n\n  /**\n   * Confirms publication of application, and makes it active.\n   */\n  onPublish(): void {\n    if (this.locked && !this.lockedByUser) {\n      this.snackBar.openSnackBar(\n        this.translate.instant('common.notifications.objectLocked', {\n          name: this.application?.name,\n        })\n      );\n    } else {\n      const dialogRef = this.confirmService.openConfirmModal({\n        title: this.translate.instant('components.application.publish.title'),\n        content: this.translate.instant(\n          'components.application.publish.confirmationMessage',\n          {\n            name: this.application?.name,\n          }\n        ),\n        confirmVariant: 'primary',\n      });\n      dialogRef.closed\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((value: any) => {\n          if (value) {\n            this.applicationService.publish();\n          }\n        });\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./application-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Header component visible when editing application</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "rawdescription": "\n\nHeader component visible when editing application\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1297,
                            "end": 1315,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1291,
                            "end": 1296,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1355,
                            "end": 1361,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1349,
                            "end": 1354,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1389,
                            "end": 1397,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1383,
                            "end": 1388,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1434,
                            "end": 1448,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1428,
                            "end": 1433,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1484,
                            "end": 1493,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1478,
                            "end": 1483,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex-row items-center justify-between gap-x-2\">\n  <div class=\"flex items-center gap-2 overflow-hidden\">\n    <!-- Title -->\n    <h2 class=\"!m-0 truncate\">\n      {{ title }}\n    </h2>\n    <!-- Settings -->\n    <ui-button\n      *ngIf=\"navItems.length > 0\"\n      [isIcon]=\"true\"\n      icon=\"tune\"\n      variant=\"light\"\n      [uiMenuTriggerFor]=\"settingsMenu\"\n      [uiTooltip]=\"'common.settings' | translate\"\n    ></ui-button>\n    <shared-dashboard-filter-icon></shared-dashboard-filter-icon>\n  </div>\n  <div class=\"flex flex-row gap-2 items-center\" *ngIf=\"canUpdate\">\n    <!-- Unlock application edition -->\n    <ui-button\n      *ngIf=\"application?.canUpdate && locked\"\n      [isIcon]=\"true\"\n      icon=\"lock\"\n      [variant]=\"lockedByUser ? 'primary' : 'danger'\"\n      (click)=\"onUnlock()\"\n      [uiTooltip]=\"'components.application.unlock.title' | translate\"\n    >\n    </ui-button>\n    <!-- Publish application -->\n    <ui-button\n      *ngIf=\"application && this.application.status !== 'active'\"\n      category=\"secondary\"\n      variant=\"success\"\n      (click)=\"onPublish()\"\n      [disabled]=\"!canPublish\"\n      >{{ 'common.publish' | translate }}</ui-button\n    >\n  </div>\n</div>\n<!-- Admin pages -->\n<ui-menu #settingsMenu>\n  <a\n    uiMenuItem\n    *ngFor=\"let item of navItems\"\n    [routerLink]=\"item.path\"\n    routerLinkActive=\"text-primary-600 bg-gray-50\"\n    class=\"text-sm font-semibold leading-6\"\n  >\n    <ui-icon variant=\"grey\" [icon]=\"item.icon\"> </ui-icon>\n    {{ item.name }}\n  </a>\n</ui-menu>\n"
        },
        {
            "name": "ApplicationsComponent",
            "id": "component-ApplicationsComponent-f8b9ae4ba31175880f2f13b9323b1c9e35d023255431278678faf62d5f54648f7d888141b756aa65017141c06380270e3e77b03bafebe1a39a9440c523206e5b",
            "file": "apps/back-office/src/app/dashboard/pages/applications/applications.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-applications",
            "styleUrls": [
                "./applications.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./applications.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "applications",
                    "defaultValue": "new Array<Application>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Applications</p>\n",
                    "line": 56,
                    "rawdescription": "\nApplications",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "applicationsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<ApplicationsApplicationNodesQueryResponse>",
                    "optional": false,
                    "description": "<p>Applications query</p>\n",
                    "line": 54,
                    "rawdescription": "\nApplications query",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "cachedApplications",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Application[]",
                    "optional": false,
                    "description": "<p>Cached applications</p>\n",
                    "line": 58,
                    "rawdescription": "\nCached applications",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 98,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\n    'name',\n    'createdAt',\n    'status',\n    'usersCount',\n    'actions',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns to display</p>\n",
                    "line": 60,
                    "rawdescription": "\nColumns to display",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filter",
                    "defaultValue": "{\n    filters: [],\n    logic: 'and',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Filter</p>\n",
                    "line": 70,
                    "rawdescription": "\nFilter",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 50,
                    "rawdescription": "\nLoading state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "newApplications",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Application[]",
                    "optional": false,
                    "description": "<p>New applications</p>\n",
                    "line": 68,
                    "rawdescription": "\nNew applications",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageInfo",
                    "defaultValue": "{\n    pageIndex: 0,\n    pageSize: DEFAULT_PAGE_SIZE,\n    length: 0,\n    endCursor: '',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Page info</p>\n",
                    "line": 78,
                    "rawdescription": "\nPage info",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sort",
                    "defaultValue": "{ active: '', sortDirection: '' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableSort",
                    "optional": false,
                    "description": "<p>Sort</p>\n",
                    "line": 75,
                    "rawdescription": "\nSort",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updating",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Updating state</p>\n",
                    "line": 52,
                    "rawdescription": "\nUpdating state",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchApplications",
                    "args": [
                        {
                            "name": "refetch",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 191,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate applications query.\n\n",
                    "description": "<p>Update applications query.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4915,
                                "end": 4922,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "refetch"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 4909,
                                "end": 4914,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>erase previous query results</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates the application query and subscribes to the query changes.\n",
                    "description": "<p>Creates the application query and subscribes to the query changes.</p>\n"
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 299,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplays the AddApplication component.\nAdds a new application once closed, if result exists.\n",
                    "description": "<p>Displays the AddApplication component.\nAdds a new application once closed, if result exists.</p>\n"
                },
                {
                    "name": "onClone",
                    "args": [
                        {
                            "name": "application",
                            "type": "Application",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 410,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpens a dialog to give a name for the duplicated application.\n\n",
                    "description": "<p>Opens a dialog to give a name for the duplicated application.</p>\n",
                    "modifierKind": [
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 11820,
                                "end": 11831,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "application"
                            },
                            "type": "Application",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 11814,
                                "end": 11819,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>application to duplicate.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 235,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDeletes an application if authorized.\n\n",
                    "description": "<p>Deletes an application if authorized.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6166,
                                "end": 6173,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "element"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6160,
                                "end": 6165,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>application.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 6199,
                                "end": 6200,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 6193,
                                "end": 6198,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>click event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onFilter",
                    "args": [
                        {
                            "name": "filter",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFilters applications and updates table.\n\n",
                    "description": "<p>Filters applications and updates table.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4568,
                                "end": 4574,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "filter"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4562,
                                "end": 4567,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>filter event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onOpenApplication",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 432,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNavigates to application.\n\n",
                    "description": "<p>Navigates to application.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 12473,
                                "end": 12475,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 12467,
                                "end": 12472,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>application id.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onPage",
                    "args": [
                        {
                            "name": "e",
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles page event.\n\n",
                    "description": "<p>Handles page event.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4165,
                                "end": 4166,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4159,
                                "end": 4164,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>page event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onPreview",
                    "args": [
                        {
                            "name": "element",
                            "type": "Application",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 388,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpens a dialog to choose roles to fit in the preview.\n\n",
                    "description": "<p>Opens a dialog to choose roles to fit in the preview.</p>\n",
                    "modifierKind": [
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 11171,
                                "end": 11178,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "element"
                            },
                            "type": "Application",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 11165,
                                "end": 11170,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>application to preview.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onSort",
                    "args": [
                        {
                            "name": "event",
                            "type": "TableSort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle sort change.\n\n",
                    "description": "<p>Handle sort change.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4740,
                                "end": 4745,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "TableSort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4734,
                                "end": 4739,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>sort event</p>\n"
                        }
                    ]
                },
                {
                    "name": "saveAccess",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "element",
                            "type": "Application",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 341,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdits the permissions layer.\n\n",
                    "description": "<p>Edits the permissions layer.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9656,
                                "end": 9657,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9650,
                                "end": 9655,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>permissions.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 9683,
                                "end": 9690,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "element"
                            },
                            "type": "Application",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9677,
                                "end": 9682,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>application.</p>\n"
                        }
                    ]
                },
                {
                    "name": "updateValues",
                    "args": [
                        {
                            "name": "data",
                            "type": "ApplicationsApplicationNodesQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 442,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdates local list with given data\n\n",
                    "description": "<p>Updates local list with given data</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 12655,
                                "end": 12659,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "ApplicationsApplicationNodesQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 12649,
                                "end": 12654,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>New values to update forms</p>\n"
                        },
                        {
                            "name": {
                                "pos": 12699,
                                "end": 12706,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "loading"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 12693,
                                "end": 12698,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Loading state</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Applications page component.</p>\n",
            "rawdescription": "\nApplications page component.",
            "type": "component",
            "sourceCode": "import { Apollo, QueryRef } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { Router } from '@angular/router';\nimport {\n  AddApplicationMutationResponse,\n  Application,\n  ConfirmService,\n  UnsubscribeComponent,\n  ApplicationsApplicationNodesQueryResponse,\n  DeleteApplicationMutationResponse,\n  EditApplicationMutationResponse,\n} from '@oort-front/shared';\nimport {\n  DELETE_APPLICATION,\n  ADD_APPLICATION,\n  EDIT_APPLICATION,\n} from './graphql/mutations';\nimport { PreviewService } from '../../../services/preview.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { ApolloQueryResult } from '@apollo/client';\nimport {\n  getCachedValues,\n  updateQueryUniqueValues,\n} from '../../../utils/update-queries';\nimport {\n  TableSort,\n  UIPageChangeEvent,\n  handleTablePageEvent,\n} from '@oort-front/ui';\nimport { SnackbarService } from '@oort-front/ui';\nimport { GET_APPLICATIONS } from './graphql/queries';\n\n/** Default number of items per request for pagination */\nconst DEFAULT_PAGE_SIZE = 10;\n\n/** Applications page component. */\n@Component({\n  selector: 'app-applications',\n  templateUrl: './applications.component.html',\n  styleUrls: ['./applications.component.scss'],\n})\nexport class ApplicationsComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  // === DATA ===\n  /** Loading state */\n  public loading = true;\n  /** Updating state */\n  public updating = false;\n  /** Applications query */\n  private applicationsQuery!: QueryRef<ApplicationsApplicationNodesQueryResponse>;\n  /** Applications */\n  public applications = new Array<Application>();\n  /** Cached applications */\n  public cachedApplications: Application[] = [];\n  /** Columns to display */\n  public displayedColumns = [\n    'name',\n    'createdAt',\n    'status',\n    'usersCount',\n    'actions',\n  ];\n  /** New applications */\n  public newApplications: Application[] = [];\n  /** Filter */\n  public filter: any = {\n    filters: [],\n    logic: 'and',\n  };\n  /** Sort */\n  private sort: TableSort = { active: '', sortDirection: '' };\n\n  /** Page info */\n  public pageInfo = {\n    pageIndex: 0,\n    pageSize: DEFAULT_PAGE_SIZE,\n    length: 0,\n    endCursor: '',\n  };\n\n  /**\n   * Applications page component\n   *\n   * @param apollo Apollo service\n   * @param dialog Dialog service\n   * @param router Angular router\n   * @param snackBar Shared snackbar service\n   * @param previewService Shared preview service\n   * @param confirmService Share confirm service\n   * @param translate Angular translate service\n   */\n  constructor(\n    private apollo: Apollo,\n    public dialog: Dialog,\n    private router: Router,\n    private snackBar: SnackbarService,\n    private previewService: PreviewService,\n    private confirmService: ConfirmService,\n    private translate: TranslateService\n  ) {\n    super();\n  }\n\n  /**\n   * Creates the application query and subscribes to the query changes.\n   */\n  ngOnInit(): void {\n    this.applicationsQuery =\n      this.apollo.watchQuery<ApplicationsApplicationNodesQueryResponse>({\n        query: GET_APPLICATIONS,\n        variables: {\n          first: DEFAULT_PAGE_SIZE,\n          afterCursor: null,\n          filter: this.filter,\n          sortField: this.sort?.sortDirection && this.sort.active,\n          sortOrder: this.sort?.sortDirection,\n        },\n      });\n    this.apollo\n      .query<ApplicationsApplicationNodesQueryResponse>({\n        query: GET_APPLICATIONS,\n        fetchPolicy: 'no-cache',\n        variables: {\n          first: 5,\n          sortField: 'modifiedAt',\n          sortOrder: 'desc',\n        },\n      })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ data }) => {\n        this.newApplications = data.applications.edges.map((x) => x.node);\n      });\n    this.applicationsQuery.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (\n          results: ApolloQueryResult<ApplicationsApplicationNodesQueryResponse>\n        ) => {\n          this.updateValues(results.data, results.loading);\n        }\n      );\n  }\n\n  /**\n   * Handles page event.\n   *\n   * @param e page event.\n   */\n  onPage(e: UIPageChangeEvent): void {\n    const cachedData = handleTablePageEvent(\n      e,\n      this.pageInfo,\n      this.cachedApplications\n    );\n    if (cachedData && cachedData.length === this.pageInfo.pageSize) {\n      this.applications = cachedData;\n    } else {\n      this.fetchApplications();\n    }\n  }\n\n  /**\n   * Filters applications and updates table.\n   *\n   * @param filter filter event.\n   */\n  onFilter(filter: any): void {\n    this.filter = filter;\n    this.fetchApplications(true);\n  }\n\n  /**\n   * Handle sort change.\n   *\n   * @param event sort event\n   */\n  onSort(event: TableSort): void {\n    this.sort = event;\n    this.fetchApplications(true);\n  }\n\n  /**\n   * Update applications query.\n   *\n   * @param refetch erase previous query results\n   */\n  private fetchApplications(refetch?: boolean): void {\n    this.updating = true;\n    const variables = {\n      first: this.pageInfo.pageSize,\n      afterCursor: refetch ? null : this.pageInfo.endCursor,\n      filter: this.filter,\n      sortField: this.sort?.sortDirection && this.sort.active,\n      sortOrder: this.sort?.sortDirection,\n    };\n    const cachedValues: ApplicationsApplicationNodesQueryResponse =\n      getCachedValues(this.apollo.client, GET_APPLICATIONS, variables);\n    if (refetch) {\n      this.cachedApplications = [];\n      this.pageInfo.pageIndex = 0;\n    }\n    if (cachedValues) {\n      this.updateValues(cachedValues, false);\n    } else {\n      if (refetch) {\n        // Rebuild the query\n        this.applicationsQuery.refetch(variables);\n      } else {\n        // Fetch more records\n        this.applicationsQuery\n          .fetchMore({\n            variables,\n          })\n          .then(\n            (\n              results: ApolloQueryResult<ApplicationsApplicationNodesQueryResponse>\n            ) => {\n              this.updateValues(results.data, results.loading);\n            }\n          );\n      }\n    }\n  }\n\n  /**\n   * Deletes an application if authorized.\n   *\n   * @param element application.\n   * @param e click event.\n   */\n  onDelete(element: any, e?: any): void {\n    if (e) {\n      e.stopPropagation();\n    }\n    const dialogRef = this.confirmService.openConfirmModal({\n      title: this.translate.instant('common.deleteObject', {\n        name: this.translate.instant('common.application.one'),\n      }),\n      content: this.translate.instant(\n        'components.application.delete.confirmationMessage',\n        { name: element.name }\n      ),\n      confirmText: this.translate.instant('components.confirmModal.delete'),\n      confirmVariant: 'danger',\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        const id = element.id;\n        this.apollo\n          .mutate<DeleteApplicationMutationResponse>({\n            mutation: DELETE_APPLICATION,\n            variables: {\n              id,\n            },\n          })\n          .subscribe({\n            next: ({ errors, data }) => {\n              if (errors) {\n                this.snackBar.openSnackBar(\n                  this.translate.instant(\n                    'common.notifications.objectNotDeleted',\n                    {\n                      value: this.translate.instant('common.application.one'),\n                      error: errors ? errors[0].message : '',\n                    }\n                  ),\n                  { error: true }\n                );\n              } else {\n                this.snackBar.openSnackBar(\n                  this.translate.instant('common.notifications.objectDeleted', {\n                    value: this.translate.instant('common.application.one'),\n                  })\n                );\n                this.applications = this.applications.filter(\n                  (x) => x.id !== data?.deleteApplication.id\n                );\n                this.newApplications = this.newApplications.filter(\n                  (x) => x.id !== data?.deleteApplication.id\n                );\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n\n  /**\n   * Displays the AddApplication component.\n   * Adds a new application once closed, if result exists.\n   */\n  onAdd(): void {\n    this.apollo\n      .mutate<AddApplicationMutationResponse>({\n        mutation: ADD_APPLICATION,\n      })\n      .subscribe({\n        next: ({ errors, data }) => {\n          if (errors?.length) {\n            this.snackBar.openSnackBar(\n              this.translate.instant('common.notifications.objectNotCreated', {\n                type: this.translate\n                  .instant('common.application.one')\n                  .toLowerCase(),\n                error: errors ? errors[0].message : '',\n              }),\n              { error: true }\n            );\n          } else {\n            if (data) {\n              this.snackBar.openSnackBar(\n                this.translate.instant('common.notifications.objectCreated', {\n                  type: this.translate.instant('common.application.one'),\n                  value: data.addApplication.name,\n                })\n              );\n              const id = data.addApplication.id;\n              this.router.navigate(['/applications', id]);\n            }\n          }\n        },\n        error: (err) => {\n          this.snackBar.openSnackBar(err.message, { error: true });\n        },\n      });\n  }\n\n  /**\n   * Edits the permissions layer.\n   *\n   * @param e permissions.\n   * @param element application.\n   */\n  saveAccess(e: any, element: Application): void {\n    this.apollo\n      .mutate<EditApplicationMutationResponse>({\n        mutation: EDIT_APPLICATION,\n        variables: {\n          id: element.id,\n          permissions: e,\n        },\n      })\n      .subscribe({\n        next: ({ errors, data }) => {\n          if (errors) {\n            this.snackBar.openSnackBar(\n              this.translate.instant('common.notifications.objectNotUpdated', {\n                type: this.translate.instant('common.access'),\n                error: errors ? errors[0].message : '',\n              }),\n              { error: true }\n            );\n          } else {\n            if (data) {\n              this.snackBar.openSnackBar(\n                this.translate.instant('common.notifications.objectUpdated', {\n                  type: this.translate.instant('common.access'),\n                  value: element.name,\n                })\n              );\n              const index = this.applications.findIndex(\n                (x) => x.id === element.id\n              );\n              this.applications[index] = data.editApplication;\n              // eslint-disable-next-line no-self-assign\n              this.applications = this.applications;\n            }\n          }\n        },\n        error: (err) => {\n          this.snackBar.openSnackBar(err.message, { error: true });\n        },\n      });\n  }\n\n  /**\n   * Opens a dialog to choose roles to fit in the preview.\n   *\n   * @param element application to preview.\n   */\n  async onPreview(element: Application): Promise<void> {\n    const { ChoseRoleComponent } = await import(\n      './components/chose-role/chose-role.component'\n    );\n    const dialogRef = this.dialog.open(ChoseRoleComponent, {\n      data: {\n        application: element.id,\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.previewService.setRole(value.role);\n        this.router.navigate(['./app-preview', element.id]);\n      }\n    });\n  }\n\n  /**\n   * Opens a dialog to give a name for the duplicated application.\n   *\n   * @param application application to duplicate.\n   */\n  async onClone(application: Application): Promise<void> {\n    const { DuplicateApplicationModalComponent } = await import(\n      '../../../components/duplicate-application-modal/duplicate-application-modal.component'\n    );\n    const dialogRef = this.dialog.open(DuplicateApplicationModalComponent, {\n      data: {\n        id: application.id,\n        name: application.name,\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.onOpenApplication(value.id);\n      }\n    });\n  }\n\n  /**\n   * Navigates to application.\n   *\n   * @param id application id.\n   */\n  onOpenApplication(id: string): void {\n    this.router.navigate(['/applications', id]);\n  }\n\n  /**\n   * Updates local list with given data\n   *\n   * @param data New values to update forms\n   * @param loading Loading state\n   */\n  private updateValues(\n    data: ApplicationsApplicationNodesQueryResponse,\n    loading: boolean\n  ): void {\n    const mappedValues = data.applications.edges.map((x) => x.node);\n    this.cachedApplications = updateQueryUniqueValues(\n      this.cachedApplications,\n      mappedValues\n    );\n    this.pageInfo.length = data.applications.totalCount;\n    this.pageInfo.endCursor = data.applications.pageInfo.endCursor;\n    this.loading = loading;\n    this.applications = this.cachedApplications.slice(\n      this.pageInfo.pageSize * this.pageInfo.pageIndex,\n      this.pageInfo.pageSize * (this.pageInfo.pageIndex + 1)\n    );\n    this.updating = false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./applications.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Applications page component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "previewService",
                        "type": "PreviewService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 83,
                "rawdescription": "\n\nApplications page component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2341,
                            "end": 2347,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2335,
                            "end": 2340,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2375,
                            "end": 2381,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2369,
                            "end": 2374,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2409,
                            "end": 2415,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2403,
                            "end": 2408,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2443,
                            "end": 2451,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2437,
                            "end": 2442,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2488,
                            "end": 2502,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "previewService"
                        },
                        "type": "PreviewService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2482,
                            "end": 2487,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared preview service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2538,
                            "end": 2552,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2532,
                            "end": 2537,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Share confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2587,
                            "end": 2596,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2581,
                            "end": 2586,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container>\n  <!-- NEW APPLICATIONS -->\n  <h2>{{ 'pages.applications.recent' | translate }}</h2>\n  <shared-applications-summary\n    class=\"block mb-14\"\n    [loading]=\"loading\"\n    [canCreate]=\"'create' | able : 'Application'\"\n    (add)=\"onAdd()\"\n    [applications]=\"newApplications\"\n    (openApplication)=\"onOpenApplication($event)\"\n    (delete)=\"onDelete($event)\"\n    (preview)=\"onPreview($event)\"\n    (clone)=\"onClone($event)\"\n  ></shared-applications-summary>\n  <div class=\"mb-8 flex flex-col gap-2\">\n    <div class=\"flex justify-between\">\n      <!-- Title -->\n      <h2 class=\"m-0\">{{ 'pages.applications.all' | translate }}</h2>\n      <!-- Filter -->\n      <app-applications-filter\n        #filter\n        (filter)=\"onFilter($event)\"\n        [loading]=\"updating\"\n        class=\"block\"\n      ></app-applications-filter>\n    </div>\n    <ng-container *ngTemplateOutlet=\"filter.expandedFilter\"></ng-container>\n  </div>\n  <!-- Table container -->\n  <div class=\"overflow-x-hidden shadow-2lg\">\n    <!-- Table scroll container -->\n    <div class=\"overflow-x-auto\">\n      <table\n        *ngIf=\"!loading\"\n        cdk-table\n        uiTableWrapper\n        [dataSource]=\"applications\"\n        (sortChange)=\"onSort($event)\"\n      >\n        <ng-container cdkColumnDef=\"name\">\n          <th uiTableHeaderSort=\"name\" uiCellHeader *cdkHeaderCellDef>\n            {{ 'common.name' | translate }}\n          </th>\n          <td\n            uiCell\n            *cdkCellDef=\"let element\"\n            class=\"!text-gray-900 !font-medium max-w-[30vw]\"\n          >\n            {{ element.name }}\n          </td>\n        </ng-container>\n\n        <ng-container cdkColumnDef=\"createdAt\">\n          <th uiTableHeaderSort=\"createdAt\" uiCellHeader *cdkHeaderCellDef>\n            {{ 'common.createdOn' | translate }}\n          </th>\n          <td uiCell *cdkCellDef=\"let element\">\n            {{ element.createdAt | sharedDate }}\n          </td>\n        </ng-container>\n\n        <ng-container cdkColumnDef=\"status\">\n          <th uiCellHeader *cdkHeaderCellDef>\n            {{ 'common.status' | translate }}\n          </th>\n          <td uiCell *cdkCellDef=\"let element\">\n            <shared-status-options\n              [status]=\"element.status\"\n            ></shared-status-options>\n          </td>\n        </ng-container>\n\n        <ng-container cdkColumnDef=\"usersCount\">\n          <th uiCellHeader *cdkHeaderCellDef>\n            <span class=\"headerTitle\">\n              {{ 'common.user.few' | translate }}\n            </span>\n          </th>\n          <td uiCell *cdkCellDef=\"let element\">\n            {{ element.users?.totalCount }}\n          </td>\n        </ng-container>\n\n        <ng-container cdkColumnDef=\"actions\" [stickyEnd]=\"true\">\n          <th uiCellHeader *cdkHeaderCellDef class=\"w-16\"></th>\n          <td uiCell *cdkCellDef=\"let element\">\n            <ui-button\n              [isIcon]=\"true\"\n              icon=\"more_vert\"\n              [uiMenuTriggerFor]=\"menu\"\n              (click)=\"$event.stopPropagation()\"\n              [uiTooltip]=\"'common.actions' | translate\"\n            >\n            </ui-button>\n            <ui-menu #menu>\n              <button uiMenuItem (click)=\"onPreview(element)\">\n                <ui-icon icon=\"preview\" variant=\"grey\"></ui-icon>\n                {{ 'common.preview' | translate }}\n              </button>\n              <shared-access\n                [menuItem]=\"true\"\n                [access]=\"element.permissions\"\n                [objectTypeName]=\"'common.application.one' | translate\"\n                (save)=\"saveAccess($event, element)\"\n                *ngIf=\"element.canUpdate\"\n              ></shared-access>\n              <button\n                uiMenuItem\n                (click)=\"onClone(element)\"\n                *ngIf=\"'create' | able : 'Application'\"\n              >\n                <ui-icon icon=\"file_copy\" variant=\"grey\"></ui-icon>\n                {{ 'common.duplicate' | translate }}\n              </button>\n              <ng-container *ngIf=\"element.canDelete\">\n                <ui-divider class=\"py-1\"></ui-divider>\n                <button uiMenuItem (click)=\"onDelete(element, $event)\">\n                  <ui-icon icon=\"delete\" variant=\"danger\"></ui-icon>\n                  {{ 'common.delete' | translate }}\n                </button>\n              </ng-container>\n            </ui-menu>\n          </td>\n        </ng-container>\n\n        <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n        <tr\n          class=\"cursor-pointer\"\n          cdk-row\n          *cdkRowDef=\"let row; columns: displayedColumns\"\n          [routerLink]=\"['/applications', row.id]\"\n        ></tr>\n      </table>\n      <!-- Loading indicator -->\n      <shared-skeleton-table\n        *ngIf=\"loading\"\n        [columns]=\"[\n          'common.name',\n          'common.createdOn',\n          'common.status',\n          'common.user.few'\n        ]\"\n        [actions]=\"true\"\n      >\n      </shared-skeleton-table>\n    </div>\n  </div>\n  <!-- Pagination -->\n  <ui-paginator\n    [disabled]=\"loading || updating\"\n    [pageIndex]=\"pageInfo.pageIndex\"\n    [pageSize]=\"pageInfo.pageSize\"\n    [pageSizeOptions]=\"[10, 25, 50]\"\n    [totalItems]=\"pageInfo.length\"\n    [ariaLabel]=\"'components.applications.paginator.ariaLabel' | translate\"\n    (pageChange)=\"onPage($event)\"\n  >\n  </ui-paginator>\n</ng-container>\n"
        },
        {
            "name": "AppPreviewComponent",
            "id": "component-AppPreviewComponent-7c18c304eaef26690169ffc6a67827565dbffb5531d6d1b430a238f23a44409fe9794111fe9a83ab124bc01b20a0b1879ee9d6f801f89f18d3db9a9d48fa177a",
            "file": "apps/back-office/src/app/app-preview/app-preview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-app-preview",
            "styleUrls": [
                "./app-preview.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app-preview.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "application",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Application | null",
                    "optional": false,
                    "description": "<p>Current application.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nCurrent application.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hideMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Should hide menu by default ( only when vertical )</p>\n",
                    "line": 90,
                    "rawdescription": "\nShould hide menu by default ( only when vertical )",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "largeDevice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Is large device.</p>\n",
                    "line": 94,
                    "rawdescription": "\n\nIs large device.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "navGroups",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "<p>Nav Groups of the application.</p>\n",
                    "line": 76,
                    "rawdescription": "\n\nNav Groups of the application.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "role",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Role to preview with.</p>\n",
                    "line": 84,
                    "rawdescription": "\n\nRole to preview with.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sideMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Use side menu or not.</p>\n",
                    "line": 88,
                    "rawdescription": "\n\nUse side menu or not.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Title of application.</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nTitle of application.\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getNavIcon",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 253,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nav icon from the page's content type.\n\n",
                    "description": "<p>Returns nav icon from the page&#39;s content type.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7751,
                                "end": 7755,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "type"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7745,
                                "end": 7750,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>content type of the page.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 7788,
                                "end": 7795,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>name of the icon.</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 242,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemove application data such as styling when exiting preview.\n",
                    "description": "<p>Remove application data such as styling when exiting preview.</p>\n",
                    "modifierKind": [
                        161
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGenerates the routes from the application that is loaded.\n",
                    "description": "<p>Generates the routes from the application that is loaded.</p>\n"
                },
                {
                    "name": "onResize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChange the display depending on windows size.\n\n",
                    "description": "<p>Change the display depending on windows size.</p>\n",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        167
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3236,
                                "end": 3241,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3230,
                                "end": 3235,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Event that implies a change in window size</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChange the display depending on windows size.\n\n",
                    "description": "<p>Change the display depending on windows size.</p>\n",
                    "jsdoctags": [
                        {
                            "pos": 3229,
                            "end": 3288,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 344,
                            "tagName": {
                                "pos": 3230,
                                "end": 3235,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Event that implies a change in window size</p>\n",
                            "name": {
                                "pos": 3236,
                                "end": 3241,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "isNameFirst": true,
                            "isBracketed": false
                        }
                    ],
                    "line": 122
                }
            ],
            "standalone": false,
            "imports": [],
            "description": "<p>Main component of Application preview capacity.</p>\n",
            "rawdescription": "\n\nMain component of Application preview capacity.\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AbilityBuilder } from '@casl/ability';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  AppAbility,\n  Application,\n  ContentType,\n  ApplicationService,\n  UnsubscribeComponent,\n} from '@oort-front/shared';\nimport get from 'lodash/get';\nimport { takeUntil } from 'rxjs/operators';\nimport { PreviewService } from '../services/preview.service';\n\n/**\n * Creates a ability object the app preview\n * given the application and the role to preview with\n *\n * @param app The application being previewed\n * @param role The role to preview with\n * @returns The ability object\n */\nconst getAbilityForAppPreview = (app: Application, role: string) => {\n  const { can, rules } = new AbilityBuilder(AppAbility);\n  const permissions =\n    app.roles?.find((x) => x.id === role)?.permissions?.map((p) => p.type) ||\n    [];\n  // === Role ===\n  if (permissions.includes('can_see_roles')) {\n    can(['create', 'read', 'update', 'delete'], ['Role', 'Channel']);\n  }\n\n  // === User ===\n  if (permissions.includes('can_see_users')) {\n    can(['create', 'read', 'update', 'delete'], 'User');\n  }\n\n  // === Template ===\n  if (permissions.includes('can_manage_templates')) {\n    can(['create', 'read', 'update', 'delete', 'manage'], 'Template');\n  }\n\n  // === Distribution list ===\n  if (permissions.includes('can_manage_distribution_lists')) {\n    can(['create', 'read', 'update', 'delete', 'manage'], 'DistributionList');\n  }\n\n  // === Custom notifications===\n  if (permissions.includes('can_manage_custom_notifications')) {\n    can(['create', 'read', 'update', 'delete', 'manage'], 'CustomNotification');\n  }\n\n  return new AppAbility(rules);\n};\n\n/**\n * Main component of Application preview capacity.\n */\n@Component({\n  selector: 'app-app-preview',\n  templateUrl: './app-preview.component.html',\n  styleUrls: ['./app-preview.component.scss'],\n})\nexport class AppPreviewComponent\n  extends UnsubscribeComponent\n  implements OnInit, OnDestroy\n{\n  /**\n   * Title of application.\n   */\n  public title = '';\n  /**\n   * Nav Groups of the application.\n   */\n  public navGroups: any[] = [];\n  /**\n   * Current application.\n   */\n  public application: Application | null = null;\n  /**\n   * Role to preview with.\n   */\n  public role = '';\n  /**\n   * Use side menu or not.\n   */\n  public sideMenu = false;\n  /** Should hide menu by default ( only when vertical ) */\n  public hideMenu = false;\n  /**\n   * Is large device.\n   */\n  public largeDevice: boolean;\n\n  /**\n   * Main component of Application preview capacity.\n   *\n   * @param route Current route\n   * @param applicationService Shared application service\n   * @param previewService Custom preview service\n   * @param router Angular Router\n   * @param translate Angular Translate service\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private applicationService: ApplicationService,\n    private previewService: PreviewService,\n    private router: Router,\n    private translate: TranslateService\n  ) {\n    super();\n    this.largeDevice = window.innerWidth > 1024;\n  }\n\n  /**\n   * Change the display depending on windows size.\n   *\n   * @param event Event that implies a change in window size\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any): void {\n    this.largeDevice = event.target.innerWidth > 1024;\n  }\n\n  /**\n   * Generates the routes from the application that is loaded.\n   */\n  ngOnInit(): void {\n    this.route.params.pipe(takeUntil(this.destroy$)).subscribe((params) => {\n      this.previewService.roleId$\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((role: string) => {\n          this.applicationService.loadApplication(params.id, role);\n          this.role = role;\n        });\n    });\n    this.applicationService.application$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((application: Application | null) => {\n        if (application) {\n          this.title = application.name + ' (Preview)';\n          const ability = getAbilityForAppPreview(application, this.role);\n          const adminNavItems: any[] = [];\n          this.sideMenu = this.application?.sideMenu ?? true;\n          this.hideMenu = this.application?.hideMenu ?? false;\n          if (ability.can('read', 'User')) {\n            adminNavItems.push({\n              name: this.translate.instant('common.user.few'),\n              path: './settings/users',\n              icon: 'supervisor_account',\n              visible: true,\n            });\n          }\n          if (ability.can('read', 'Role')) {\n            adminNavItems.push({\n              name: this.translate.instant('common.role.few'),\n              path: './settings/roles',\n              icon: 'admin_panel_settings',\n              visible: true,\n            });\n          }\n          if (ability.can('manage', 'Template')) {\n            adminNavItems.push({\n              name: this.translate.instant('common.template.few'),\n              path: './settings/templates',\n              icon: 'description',\n              visible: true,\n            });\n          }\n          if (ability.can('manage', 'DistributionList')) {\n            adminNavItems.push({\n              name: this.translate.instant('common.distributionList.few'),\n              path: './settings/distribution-lists',\n              icon: 'mail',\n              visible: true,\n            });\n          }\n          if (ability.can('manage', 'CustomNotification')) {\n            adminNavItems.push({\n              name: this.translate.instant('common.customNotification.few'),\n              path: './settings/notifications',\n              icon: 'schedule_send',\n              visible: true,\n            });\n          }\n          this.navGroups = [\n            {\n              name: 'Pages',\n              navItems: application.pages\n                ?.filter((x) => x.content)\n                .map((x) => ({\n                  name: x.name,\n                  path:\n                    x.type === ContentType.form\n                      ? `./${x.type}/${x.id}`\n                      : `./${x.type}/${x.content}`,\n                  icon: x.icon || this.getNavIcon(x.type || ''),\n                  fontFamily: x.icon ? 'fa' : 'material',\n                  visible: x.visible ?? false,\n                })),\n            },\n            {\n              name: 'Administration',\n              navItems: adminNavItems,\n            },\n          ];\n          if (!this.application || application.id !== this.application.id) {\n            const firstPage = get(application, 'pages', [])[0];\n            if (\n              this.router.url.endsWith('/') ||\n              (this.application && application.id !== this.application?.id) ||\n              !firstPage ||\n              (!this.application && application)\n            ) {\n              if (firstPage) {\n                this.router.navigate(\n                  [\n                    `./${firstPage.type}/${\n                      firstPage.type === ContentType.form\n                        ? firstPage.id\n                        : firstPage.content\n                    }`,\n                  ],\n                  { relativeTo: this.route }\n                );\n              } else {\n                this.router.navigate([`./`], { relativeTo: this.route });\n              }\n            }\n          }\n          this.application = application;\n        } else {\n          this.navGroups = [];\n        }\n      });\n  }\n\n  /**\n   * Remove application data such as styling when exiting preview.\n   */\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.applicationService.leaveApplication();\n  }\n\n  /**\n   * Returns nav icon from the page's content type.\n   *\n   * @param type content type of the page.\n   * @returns name of the icon.\n   */\n  private getNavIcon(type: string): string {\n    switch (type) {\n      case 'workflow':\n        return 'linear_scale';\n      case 'form':\n        return 'description';\n      default:\n        return 'dashboard';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app-preview.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Main component of Application preview capacity.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "previewService",
                        "type": "PreviewService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 94,
                "rawdescription": "\n\nMain component of Application preview capacity.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2659,
                            "end": 2664,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2653,
                            "end": 2658,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Current route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2691,
                            "end": 2709,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2685,
                            "end": 2690,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2749,
                            "end": 2763,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "previewService"
                        },
                        "type": "PreviewService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2743,
                            "end": 2748,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Custom preview service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2799,
                            "end": 2805,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2793,
                            "end": 2798,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular Router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2833,
                            "end": 2842,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2827,
                            "end": 2832,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular Translate service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<shared-layout\n  [title]=\"title\"\n  [leftSidenav]=\"leftSidenav\"\n  [sideMenu]=\"sideMenu\"\n  [menuOpened]=\"!hideMenu\"\n></shared-layout>\n<ng-template #toolbar>\n  <app-preview-toolbar></app-preview-toolbar>\n</ng-template>\n<!--Need the nav variable, don't remove let-nav, used in layout-->\n<ng-template #leftSidenav let-nav>\n  <shared-navbar\n    [nav]=\"nav\"\n    [navGroups]=\"navGroups\"\n    [appLayout]=\"true\"\n    [vertical]=\"!(!sideMenu && largeDevice)\"\n  ></shared-navbar>\n</ng-template>\n"
        },
        {
            "name": "ArchiveComponent",
            "id": "component-ArchiveComponent-463771b5efb4a5ee90e00fad20961ac6e240546692fa2ec6f352a22b2355eafe946e4f02b109c4411828af296e7babf3272cc155c612df506ac95be6a77ea95f",
            "file": "apps/back-office/src/app/application/pages/archive/archive.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-archive",
            "styleUrls": [
                "./archive.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./archive.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 29,
                    "rawdescription": "\nLoading state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pages",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArchivePage[]",
                    "optional": false,
                    "description": "<p>Application pages</p>\n",
                    "line": 31,
                    "rawdescription": "\nApplication pages",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "role",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Current previewed role</p>\n",
                    "line": 35,
                    "rawdescription": "\nCurrent previewed role",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Archive page component for application preview.</p>\n",
            "rawdescription": "\n\nArchive page component for application preview.\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport {\n  Application,\n  ArchivePage,\n  Page,\n  ApplicationService,\n  UnsubscribeComponent,\n  ApplicationQueryResponse,\n} from '@oort-front/shared';\nimport { TranslateService } from '@ngx-translate/core';\nimport { filter, map, switchMap, takeUntil } from 'rxjs/operators';\nimport { SnackbarService } from '@oort-front/ui';\nimport { combineLatest, of } from 'rxjs';\nimport { PreviewService } from '../../../services/preview.service';\nimport { GET_APPLICATION_ARCHIVED_PAGES } from './graphql/queries';\n\n/**\n * Archive page component for application preview.\n */\n@Component({\n  selector: 'app-archive',\n  templateUrl: './archive.component.html',\n  styleUrls: ['./archive.component.scss'],\n})\nexport class ArchiveComponent extends UnsubscribeComponent implements OnInit {\n  // === DATA ===\n  /** Loading state */\n  public loading = true;\n  /** Application pages */\n  public pages: ArchivePage[] = [];\n\n  // === PREVIEWED ROLE ===\n  /** Current previewed role */\n  public role = '';\n\n  /**\n   * Workflow page component for application preview\n   *\n   * @param apollo Apollo service\n   * @param applicationService Shared ApplicationService\n   * @param snackBar Shared snackbar service\n   * @param translate Angular translate service\n   * @param previewService Shared preview service\n   */\n  constructor(\n    private apollo: Apollo,\n    private applicationService: ApplicationService,\n    private snackBar: SnackbarService,\n    private translate: TranslateService,\n    private previewService: PreviewService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    const applicationStream$ = combineLatest([\n      this.applicationService.application$.pipe(\n        filter(Boolean),\n        map((application: Application) => application.id ?? null)\n      ),\n      this.previewService.roleId$,\n    ]);\n    applicationStream$\n      .pipe(\n        switchMap(([id, asRole]) => {\n          if (id !== null) {\n            return this.apollo.query<ApplicationQueryResponse>({\n              query: GET_APPLICATION_ARCHIVED_PAGES,\n              variables: {\n                id,\n                asRole,\n              },\n            });\n          } else {\n            return of({ data: { application: { pages: [] as Page[] } } });\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe({\n        next: ({ data }) => {\n          if (data) {\n            this.pages =\n              (data.application.pages || []).map((page) => {\n                return {\n                  id: page.id,\n                  name: page.name,\n                  autoDeletedAt: page.autoDeletedAt,\n                } as ArchivePage;\n              }) ?? [];\n          } else {\n            this.snackBar.openSnackBar(\n              this.translate.instant('common.notifications.accessNotProvided', {\n                type: this.translate\n                  .instant('common.workflow.one')\n                  .toLowerCase(),\n                error: '',\n              }),\n              { error: true }\n            );\n          }\n          this.loading = false;\n        },\n        error: (err) => {\n          this.snackBar.openSnackBar(err.message, { error: true });\n          this.loading = false;\n        },\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./archive.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Workflow page component for application preview</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "previewService",
                        "type": "PreviewService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "rawdescription": "\n\nWorkflow page component for application preview\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1149,
                            "end": 1155,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1143,
                            "end": 1148,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1183,
                            "end": 1201,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1177,
                            "end": 1182,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared ApplicationService</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1240,
                            "end": 1248,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1234,
                            "end": 1239,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1285,
                            "end": 1294,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1279,
                            "end": 1284,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1333,
                            "end": 1347,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "previewService"
                        },
                        "type": "PreviewService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1327,
                            "end": 1332,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared preview service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>{{ 'common.archive.few' | translate }}</h1>\n<ng-container *ngIf=\"!loading; else loadingTmpl\">\n  <shared-applications-archive [pages]=\"pages\"></shared-applications-archive>\n</ng-container>\n<ng-template #loadingTmpl>\n  <shared-skeleton-table\n    [columns]=\"[\n      'components.application.archive.name',\n      'components.application.archive.autoDeletedAt'\n    ]\"\n  >\n  </shared-skeleton-table>\n</ng-template>\n"
        },
        {
            "name": "CalculatedFieldsTabComponent",
            "id": "component-CalculatedFieldsTabComponent-133950b38932630f3d647374138ea4e4dff96a488014552ac1cb8cc651b5436b77585bb6ea666513d0e284fabee9c6f840ab21b1f8f72d7f898c72d7aa69202b",
            "file": "apps/back-office/src/app/dashboard/pages/resource/calculated-fields-tab/calculated-fields-tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-calculated-fields-tab",
            "styleUrls": [
                "./calculated-fields-tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./calculated-fields-tab.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayedColumns",
                    "defaultValue": "['name', 'createdAt', '_actions']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "<p>Columns to display</p>\n",
                    "line": 39,
                    "rawdescription": "\n\nColumns to display\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "fields",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "<p>Calculated fields</p>\n",
                    "line": 34,
                    "rawdescription": "\n\nCalculated fields\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "resource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Resource",
                    "optional": false,
                    "description": "<p>Resource</p>\n",
                    "line": 30,
                    "rawdescription": "\n\nResource\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleCalculatedFieldResponse",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle calculated field mutation response for add/update a calculated field\n\n",
                    "description": "<p>Handle calculated field mutation response for add/update a calculated field</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3092,
                                "end": 3097,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3086,
                                "end": 3091,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>retrieved from the mutation response</p>\n"
                        },
                        {
                            "name": {
                                "pos": 3147,
                                "end": 3152,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "field"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 3141,
                                "end": 3146,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>field to update if it&#39;s an update mutation</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAddCalculatedField",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdds a new Calculated field for the resource.\n",
                    "description": "<p>Adds a new Calculated field for the resource.</p>\n",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "onDeleteCalculatedField",
                    "args": [
                        {
                            "name": "field",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDeletes a Calculated field.\n\n",
                    "description": "<p>Deletes a Calculated field.</p>\n",
                    "modifierKind": [
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4965,
                                "end": 4970,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "field"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4959,
                                "end": 4964,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Calculated field to delete</p>\n"
                        }
                    ]
                },
                {
                    "name": "onEditCalculatedField",
                    "args": [
                        {
                            "name": "field",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdits a layout. Opens a popup for edition.\n\n",
                    "description": "<p>Edits a layout. Opens a popup for edition.</p>\n",
                    "modifierKind": [
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2378,
                                "end": 2383,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "field"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2372,
                                "end": 2377,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Calculated field to edit</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Calculated fields tab of resource page</p>\n",
            "rawdescription": "\n\nCalculated fields tab of resource page\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  EditResourceMutationResponse,\n  Resource,\n  UnsubscribeComponent,\n} from '@oort-front/shared';\nimport { Apollo } from 'apollo-angular';\nimport get from 'lodash/get';\nimport { Calculated_FIELD_UPDATE } from './graphql/mutations';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { SnackbarService } from '@oort-front/ui';\nimport { takeUntil } from 'rxjs';\n\n/**\n * Calculated fields tab of resource page\n */\n@Component({\n  selector: 'app-calculated-fields-tab',\n  templateUrl: './calculated-fields-tab.component.html',\n  styleUrls: ['./calculated-fields-tab.component.scss'],\n})\nexport class CalculatedFieldsTabComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  /**\n   * Resource\n   */\n  public resource!: Resource;\n  /**\n   * Calculated fields\n   */\n  public fields: any[] = [];\n\n  /**\n   * Columns to display\n   */\n  public displayedColumns: string[] = ['name', 'createdAt', '_actions'];\n\n  /**\n   * Layouts tab of resource page\n   *\n   * @param apollo Apollo service\n   * @param dialog Dialog service\n   * @param translate Angular translate service\n   * @param snackBar Shared snackbar service\n   */\n  constructor(\n    private apollo: Apollo,\n    private dialog: Dialog,\n    private translate: TranslateService,\n    private snackBar: SnackbarService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    const state = history.state;\n    this.resource = get(state, 'resource', null);\n\n    if (this.resource && this.resource.fields) {\n      this.fields = this.resource.fields.filter((f: any) => f.isCalculated);\n    } else {\n      this.fields = [];\n    }\n  }\n\n  /**\n   * Adds a new Calculated field for the resource.\n   */\n  async onAddCalculatedField(): Promise<void> {\n    const { EditCalculatedFieldModalComponent } = await import(\n      '@oort-front/shared'\n    );\n    const dialogRef = this.dialog.open(EditCalculatedFieldModalComponent, {\n      disableClose: true,\n      data: {\n        calculatedField: null,\n        resourceFields: this.resource.fields.filter(\n          (f: any) => !f.isCalculated\n        ),\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      this.handleCalculatedFieldResponse(value);\n    });\n  }\n\n  /**\n   * Edits a layout. Opens a popup for edition.\n   *\n   * @param field Calculated field to edit\n   */\n  async onEditCalculatedField(field: any): Promise<void> {\n    const { EditCalculatedFieldModalComponent } = await import(\n      '@oort-front/shared'\n    );\n    const dialogRef = this.dialog.open(EditCalculatedFieldModalComponent, {\n      disableClose: true,\n      data: {\n        calculatedField: field,\n        resourceFields: this.resource.fields.filter(\n          (f: any) => !f.isCalculated\n        ),\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      this.handleCalculatedFieldResponse(value, field);\n    });\n  }\n\n  /**\n   * Handle calculated field mutation response for add/update a calculated field\n   *\n   * @param value retrieved from the mutation response\n   * @param field field to update if it's an update mutation\n   */\n  private handleCalculatedFieldResponse(value: any, field?: any) {\n    if (value) {\n      const expression = value.expression\n        .replace(/<[^>]*>/gi, ' ')\n        .replace(/<\\/[^>]*>/gi, ' ')\n        .replace(/&nbsp;|&#160;/gi, ' ')\n        .replace(/\\s+/gi, ' ')\n        .trim();\n      this.apollo\n        .mutate<EditResourceMutationResponse>({\n          mutation: Calculated_FIELD_UPDATE,\n          variables: {\n            resourceId: this.resource.id,\n            calculatedField: {\n              ...(!field && {\n                add: {\n                  name: value.name,\n                  expression,\n                },\n              }),\n              ...(field && {\n                update: {\n                  oldName: field.name,\n                  name: value.name,\n                  expression,\n                },\n              }),\n            },\n          },\n        })\n        .subscribe({\n          next: (res) => {\n            if (res.data?.editResource) {\n              // Needed to update the field as table data source\n              this.fields = field\n                ? res.data.editResource.fields.filter(\n                    (f: any) => f.isCalculated\n                  )\n                : this.fields.concat(\n                    res.data.editResource.fields.find(\n                      (f: any) => f.name === value.name\n                    )\n                  );\n            }\n            if (res.errors) {\n              this.snackBar.openSnackBar(res.errors[0].message, {\n                error: true,\n              });\n            }\n          },\n          error: (err) => {\n            this.snackBar.openSnackBar(err.message, { error: true });\n          },\n        });\n    }\n  }\n\n  /**\n   * Deletes a Calculated field.\n   *\n   * @param field Calculated field to delete\n   */\n  async onDeleteCalculatedField(field: any): Promise<void> {\n    const { ConfirmModalComponent } = await import('@oort-front/shared');\n    const dialogRef = this.dialog.open(ConfirmModalComponent, {\n      data: {\n        title: this.translate.instant('common.deleteObject', {\n          name: this.translate.instant('common.calculatedField.one'),\n        }),\n        content: this.translate.instant(\n          'components.calculatedFields.delete.confirmationMessage',\n          {\n            name: field.name,\n          }\n        ),\n        confirmText: this.translate.instant('components.confirmModal.delete'),\n        cancelText: this.translate.instant('components.confirmModal.cancel'),\n      },\n    });\n\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.apollo\n          .mutate<EditResourceMutationResponse>({\n            mutation: Calculated_FIELD_UPDATE,\n            variables: {\n              resourceId: this.resource.id,\n              calculatedField: {\n                remove: {\n                  name: field.name,\n                },\n              },\n            },\n          })\n          .subscribe({\n            next: (res) => {\n              if (res.data?.editResource) {\n                this.fields = this.fields.filter(\n                  (f: any) => f.name !== field.name\n                );\n              }\n              if (res.errors) {\n                this.snackBar.openSnackBar(res.errors[0].message, {\n                  error: true,\n                });\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding-top: 16px;\n}\n",
                    "styleUrl": "./calculated-fields-tab.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Layouts tab of resource page</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "rawdescription": "\n\nLayouts tab of resource page\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1082,
                            "end": 1088,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1076,
                            "end": 1081,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1116,
                            "end": 1122,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1110,
                            "end": 1115,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1150,
                            "end": 1159,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1144,
                            "end": 1149,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1198,
                            "end": 1206,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1192,
                            "end": 1197,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"fields.length\">\n  <ng-container *ngTemplateOutlet=\"newField\"> </ng-container>\n</ng-container>\n<ng-template #newField>\n  <div class=\"self-end\">\n    <ui-button\n      variant=\"primary\"\n      class=\"actions\"\n      category=\"secondary\"\n      (click)=\"onAddCalculatedField()\"\n    >\n      {{ 'components.calculatedFields.add' | translate }}</ui-button\n    >\n  </div>\n</ng-template>\n<ng-container *ngIf=\"fields.length; else emptyTmpl\">\n  <div class=\"overflow-x-hidden shadow-2lg\">\n    <!-- Table scroll container -->\n    <div class=\"overflow-x-auto\">\n      <table cdk-table uiTableWrapper [dataSource]=\"fields\">\n        <ng-container cdkColumnDef=\"name\">\n          <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n            {{ 'models.form.field.name' | translate }}\n          </th>\n          <td uiCell *cdkCellDef=\"let element\" class=\"max-w-[30vw]\">\n            {{ element.name }}\n          </td>\n        </ng-container>\n\n        <ng-container cdkColumnDef=\"createdAt\">\n          <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n            {{ 'components.calculatedFields.expression' | translate }}\n          </th>\n          <td uiCell *cdkCellDef=\"let element\">\n            {{ element.expression }}\n          </td>\n        </ng-container>\n\n        <ng-container cdkColumnDef=\"_actions\" [stickyEnd]=\"true\">\n          <th uiCellHeader *cdkHeaderCellDef scope=\"col\" class=\"w-16\"></th>\n          <td uiCell *cdkCellDef=\"let element\">\n            <ui-button\n              [isIcon]=\"true\"\n              icon=\"more_vert\"\n              [uiMenuTriggerFor]=\"resMenu\"\n              (click)=\"$event.stopPropagation()\"\n              [disabled]=\"!resource.canUpdate\"\n              [uiTooltip]=\"'common.actions' | translate\"\n            >\n            </ui-button>\n            <ui-menu #resMenu>\n              <button uiMenuItem (click)=\"onEditCalculatedField(element)\">\n                <ui-icon icon=\"edit\" variant=\"grey\"></ui-icon>\n                {{ 'common.edit' | translate }}\n              </button>\n              <ui-divider class=\"py-1\"></ui-divider>\n              <button uiMenuItem (click)=\"onDeleteCalculatedField(element)\">\n                <ui-icon icon=\"delete\" variant=\"danger\"></ui-icon>\n                {{ 'common.delete' | translate }}\n              </button>\n            </ui-menu>\n          </td>\n        </ng-container>\n\n        <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n        <tr cdk-row *cdkRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n    </div>\n  </div>\n</ng-container>\n<ng-template #emptyTmpl>\n  <shared-empty\n    [title]=\"'components.resource.empty.calculatedFields' | translate\"\n    [footerTemplate]=\"newField\"\n  ></shared-empty>\n</ng-template>\n"
        },
        {
            "name": "ChannelModalComponent",
            "id": "component-ChannelModalComponent-7b440ffa57a8b591b2c3ad45ad462629fa3b1a34d14976c1623070b62ad62999ae07116cedcf40c411098e5cb5cbb804775cb6cbcf8a0c3221b1c05e88314dc6",
            "file": "apps/back-office/src/app/application/pages/channels/components/channel-modal/channel-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-channel-modal",
            "styleUrls": [
                "./channel-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./channel-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "channelForm",
                    "defaultValue": "this.fb.group({\n    title: [this.data?.channel.title ?? '', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Channel form group</p>\n",
                    "line": 43,
                    "rawdescription": "\nChannel form group",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "Injected dialog data",
                    "line": 61,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167,
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogRef<ChannelModalComponent>",
                    "optional": false,
                    "description": "Dialog ref",
                    "line": 58,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ChannelsRoutingModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "IconModule",
                    "type": "module"
                },
                {
                    "name": "FormWrapperModule",
                    "type": "module"
                },
                {
                    "name": "SpinnerModule",
                    "type": "module"
                },
                {
                    "name": "MenuModule",
                    "type": "module"
                },
                {
                    "name": "DividerModule",
                    "type": "module"
                },
                {
                    "name": "DialogModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "<p>Channel component, act as modal.\nUsed for both edition and addition of channels.</p>\n",
            "rawdescription": "\n\nChannel component, act as modal.\nUsed for both edition and addition of channels.\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Optional } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { CommonModule } from '@angular/common';\nimport { ChannelsRoutingModule } from '../../channels-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IconModule } from '@oort-front/ui';\nimport { DialogModule } from '@oort-front/ui';\nimport {\n  SpinnerModule,\n  DividerModule,\n  MenuModule,\n  ButtonModule,\n  FormWrapperModule,\n} from '@oort-front/ui';\nimport { Channel } from '@oort-front/shared';\n\n/**\n * Channel component, act as modal.\n * Used for both edition and addition of channels.\n */\n@Component({\n  standalone: true,\n  imports: [\n    CommonModule,\n    ChannelsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IconModule,\n    FormWrapperModule,\n    SpinnerModule,\n    MenuModule,\n    DividerModule,\n    DialogModule,\n    ButtonModule,\n  ],\n  selector: 'app-channel-modal',\n  templateUrl: './channel-modal.component.html',\n  styleUrls: ['./channel-modal.component.scss'],\n})\nexport class ChannelModalComponent {\n  /** Channel form group */\n  public channelForm = this.fb.group({\n    title: [this.data?.channel.title ?? '', Validators.required],\n  });\n\n  /**\n   * Channel component, act as modal.\n   * Used for both edition and addition of channels.\n   *\n   * @param fb Angular form builder\n   * @param dialogRef Dialog ref\n   * @param data Injected dialog data\n   * @param data.channel channel to edit\n   */\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: DialogRef<ChannelModalComponent>,\n    @Optional()\n    @Inject(DIALOG_DATA)\n    public data: {\n      channel: Channel;\n    }\n  ) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./channel-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Channel component, act as modal.\nUsed for both edition and addition of channels.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "DialogRef<ChannelModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "rawdescription": "\n\nChannel component, act as modal.\nUsed for both edition and addition of channels.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1412,
                            "end": 1414,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1406,
                            "end": 1411,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1448,
                            "end": 1457,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialogRef"
                        },
                        "type": "DialogRef<ChannelModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1442,
                            "end": 1447,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog ref</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1481,
                            "end": 1485,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "data"
                        },
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1475,
                            "end": 1480,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Injected dialog data</p>\n"
                    }
                ]
            },
            "templateData": "<ui-dialog size=\"small\">\n  <ng-container ngProjectAs=\"header\">\n    <h3 class=\"font-semibold\">\n      {{ (data ? 'models.channel.edit' : 'models.channel.new') | translate }}\n    </h3>\n  </ng-container>\n  <ng-container ngProjectAs=\"content\">\n    <form [formGroup]=\"channelForm\" class=\"flex flex-col\">\n      <div uiFormFieldDirective>\n        <label>{{ 'common.title' | translate }}</label>\n        <input\n          formControlName=\"title\"\n          type=\"text\"\n          [placeholder]=\"'common.placeholder.title' | translate\"\n        />\n      </div>\n    </form>\n  </ng-container>\n  <ng-container ngProjectAs=\"actions\">\n    <ui-button [uiDialogClose] variant=\"default\">{{\n      'common.close' | translate\n    }}</ui-button>\n    <ui-button\n      category=\"secondary\"\n      variant=\"primary\"\n      [uiDialogClose]=\"channelForm.value\"\n      cdkFocusInitial\n      [disabled]=\"!channelForm.valid\"\n    >\n      {{ (data ? 'common.update' : 'common.create') | translate }}\n    </ui-button>\n  </ng-container>\n</ui-dialog>\n"
        },
        {
            "name": "ChannelsComponent",
            "id": "component-ChannelsComponent-01d902a0f1bec086c7f88993735bc6e0e0eab6b24d0e5fe2e4256845b2d7d2da4b74616f329ba9d2c4f940e2db534f7f6b571dc53bc3c9758368e98b1805007c",
            "file": "apps/back-office/src/app/application/pages/channels/channels.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-channels",
            "styleUrls": [
                "./channels.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./channels.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "channels",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Channel[]",
                    "optional": false,
                    "description": "<p>Channels list</p>\n",
                    "line": 26,
                    "rawdescription": "\nChannels list",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "channelsData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChannelDisplay[]",
                    "optional": false,
                    "description": "<p>Channels data</p>\n",
                    "line": 28,
                    "rawdescription": "\nChannels data",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 45,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['title', 'subscribedRoles', 'actions']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "<p>Table columns</p>\n",
                    "line": 32,
                    "rawdescription": "\nTable columns",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 30,
                    "rawdescription": "\nLoading state",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplay the AddChannel modal.\nCreate a new channel linked to this application on close.\n",
                    "description": "<p>Display the AddChannel modal.\nCreate a new channel linked to this application on close.</p>\n",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "channel",
                            "type": "Channel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplay a modal to confirm the deletion of the channel.\nIf confirmed, the channel is removed from the system with all notifications linked to it.\n\n",
                    "description": "<p>Display a modal to confirm the deletion of the channel.\nIf confirmed, the channel is removed from the system with all notifications linked to it.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3675,
                                "end": 3682,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "channel"
                            },
                            "type": "Channel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3669,
                                "end": 3674,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>channel to delete</p>\n"
                        }
                    ]
                },
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "channel",
                            "type": "Channel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdit channel, opening channel modal\n\n",
                    "description": "<p>Edit channel, opening channel modal</p>\n",
                    "modifierKind": [
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2999,
                                "end": 3006,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "channel"
                            },
                            "type": "Channel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2993,
                                "end": 2998,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>channel to edit</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Channels page component.</p>\n",
            "rawdescription": "\n\nChannels page component.\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  Application,\n  Channel,\n  ChannelDisplay,\n  Role,\n  ApplicationService,\n  ConfirmService,\n  UnsubscribeComponent,\n} from '@oort-front/shared';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Channels page component.\n */\n@Component({\n  selector: 'app-channels',\n  templateUrl: './channels.component.html',\n  styleUrls: ['./channels.component.scss'],\n})\nexport class ChannelsComponent extends UnsubscribeComponent implements OnInit {\n  // === DATA ===\n  /** Channels list */\n  private channels: Channel[] = [];\n  /** Channels data */\n  public channelsData: ChannelDisplay[] = [];\n  /** Loading state */\n  public loading = true;\n  /** Table columns */\n  public displayedColumns: string[] = ['title', 'subscribedRoles', 'actions'];\n\n  /**\n   * Channels page component\n   *\n   * @param applicationService Shared application service\n   * @param confirmService Shared confirm service\n   * @param dialog Dialog service\n   * @param translate Angular translate service\n   */\n  constructor(\n    private applicationService: ApplicationService,\n    private confirmService: ConfirmService,\n    public dialog: Dialog,\n    private translate: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.loading = false;\n    this.applicationService.application$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((application: Application | null) => {\n        if (application) {\n          this.channels = application.channels || [];\n        } else {\n          this.channels = [];\n        }\n        // Move roles in an array under corresponding applications under corresponding channels\n        this.channelsData = this.channels.map((channel: ChannelDisplay) => {\n          const subscribedApplications = Array.from(\n            new Set(channel.subscribedRoles?.map((x) => x.application?.name))\n          ).map((name?: string) => ({\n            name: name ? name : 'Global',\n            roles: channel.subscribedRoles\n              ? channel.subscribedRoles.reduce((o: Role[], role: Role) => {\n                  if (role?.application?.name === name) {\n                    o.push(role);\n                  }\n                  return o;\n                }, [])\n              : [],\n          }));\n          return { ...channel, subscribedApplications };\n        });\n      });\n  }\n\n  /**\n   * Display the AddChannel modal.\n   * Create a new channel linked to this application on close.\n   */\n  async onAdd(): Promise<void> {\n    const { ChannelModalComponent } = await import(\n      './components/channel-modal/channel-modal.component'\n    );\n    const dialogRef = this.dialog.open(ChannelModalComponent);\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.applicationService.addChannel(value);\n      }\n    });\n  }\n\n  /**\n   * Edit channel, opening channel modal\n   *\n   * @param channel channel to edit\n   */\n  async onEdit(channel: Channel): Promise<void> {\n    const { ChannelModalComponent } = await import(\n      './components/channel-modal/channel-modal.component'\n    );\n    const dialogRef = this.dialog.open(ChannelModalComponent, {\n      data: {\n        channel,\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.applicationService.editChannel(channel, value.title);\n      }\n    });\n  }\n\n  /**\n   * Display a modal to confirm the deletion of the channel.\n   * If confirmed, the channel is removed from the system with all notifications linked to it.\n   *\n   * @param channel channel to delete\n   */\n  onDelete(channel: Channel): void {\n    const dialogRef = this.confirmService.openConfirmModal({\n      title: this.translate.instant('common.deleteObject', {\n        name: this.translate.instant('common.channel.one'),\n      }),\n      content: this.translate.instant(\n        'components.channel.delete.confirmationMessage',\n        {\n          name: channel.title,\n        }\n      ),\n      confirmText: this.translate.instant('components.confirmModal.delete'),\n      confirmVariant: 'danger',\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.applicationService.deleteChannel(channel);\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./channels.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Channels page component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "rawdescription": "\n\nChannels page component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 949,
                            "end": 967,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 943,
                            "end": 948,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1007,
                            "end": 1021,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1001,
                            "end": 1006,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1057,
                            "end": 1063,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1051,
                            "end": 1056,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1091,
                            "end": 1100,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1085,
                            "end": 1090,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!loading; else loadingTmpl\">\n  <ng-container *ngIf=\"channelsData.length\">\n    <div class=\"flex justify-end\">\n      <ng-container *ngTemplateOutlet=\"newChannel\"></ng-container>\n    </div>\n  </ng-container>\n  <ng-template #newChannel>\n    <ui-button\n      icon=\"add\"\n      category=\"secondary\"\n      variant=\"primary\"\n      (click)=\"onAdd()\"\n    >\n      {{ 'models.channel.create' | translate }}\n    </ui-button>\n  </ng-template>\n\n  <ng-container *ngIf=\"channelsData.length; else emptyTmpl\">\n    <!-- Table container -->\n    <div class=\"overflow-x-hidden mt-4 shadow-2lg\">\n      <!-- Table scroll container -->\n      <div class=\"overflow-x-auto\">\n        <table cdk-table uiTableWrapper [dataSource]=\"channelsData\">\n          <ng-container cdkColumnDef=\"title\">\n            <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n              {{ 'common.title' | translate }}\n            </th>\n            <td\n              uiCell\n              *cdkCellDef=\"let element\"\n              class=\"!text-gray-900 !font-medium max-w-[30vw]\"\n            >\n              {{ element.title }}\n            </td>\n          </ng-container>\n          <ng-container cdkColumnDef=\"subscribedRoles\">\n            <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n              {{ 'common.role.few' | translate }}\n            </th>\n            <td uiCell *cdkCellDef=\"let element\">\n              <span\n                *ngFor=\"\n                  let subscribedApplication of element.subscribedApplications\n                \"\n              >\n                <span *ngIf=\"subscribedApplication.roles.length > 0\"\n                  >[{{ subscribedApplication.name }}] :\n                </span>\n                <span *ngFor=\"let role of subscribedApplication.roles\">\n                  <span> {{ role.title }}, </span>\n                </span>\n              </span>\n            </td>\n          </ng-container>\n\n          <ng-container cdkColumnDef=\"actions\" [stickyEnd]=\"true\">\n            <th uiCellHeader *cdkHeaderCellDef scope=\"col\" class=\"w-16\"></th>\n            <td uiCell *cdkCellDef=\"let element\">\n              <ui-button\n                [isIcon]=\"true\"\n                icon=\"more_vert\"\n                [uiMenuTriggerFor]=\"menu\"\n                (click)=\"$event.stopPropagation()\"\n                [uiTooltip]=\"'common.actions' | translate\"\n              >\n              </ui-button>\n              <ui-menu #menu>\n                <button uiMenuItem (click)=\"onEdit(element)\">\n                  <ui-icon icon=\"edit\" variant=\"grey\"></ui-icon>\n                  {{ 'common.edit' | translate }}\n                </button>\n                <ui-divider class=\"py-1\"></ui-divider>\n                <button uiMenuItem (click)=\"onDelete(element)\">\n                  <ui-icon icon=\"delete\" variant=\"danger\"></ui-icon>\n                  {{ 'common.delete' | translate }}\n                </button>\n              </ui-menu>\n            </td>\n          </ng-container>\n\n          <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n          <tr *cdkRowDef=\"let row; columns: displayedColumns\" cdk-row></tr>\n        </table>\n      </div>\n    </div>\n  </ng-container>\n  <ng-template #emptyTmpl>\n    <!-- Empty indicator -->\n    <shared-empty\n      [title]=\"'common.channel.none' | translate\"\n      [footerTemplate]=\"newChannel\"\n    ></shared-empty>\n  </ng-template>\n</ng-container>\n<ng-template #loadingTmpl>\n  <!-- Loading indicator -->\n  <shared-skeleton-table [columns]=\"displayedColumns\" [actions]=\"true\">\n  </shared-skeleton-table>\n</ng-template>\n"
        },
        {
            "name": "ChoseRoleComponent",
            "id": "component-ChoseRoleComponent-c260a16efbacda4e73df38e9d03b8459d03b17dfb9fd5287ab57b78c24642ec677a9a59fb1807b575a3e5967e94ce2adcd15a459558575b20881af847ea13351",
            "file": "apps/back-office/src/app/dashboard/pages/applications/components/chose-role/chose-role.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chose-role",
            "styleUrls": [
                "./chose-role.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chose-role.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "Injected modal data",
                    "line": 42,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogRef<ChoseRoleComponent>",
                    "optional": false,
                    "description": "Dialog ref",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading indicator</p>\n",
                    "line": 20,
                    "rawdescription": "\nLoading indicator",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "roleForm",
                    "defaultValue": "this.fb.group({\n    role: [null, Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Role reactive form group</p>\n",
                    "line": 22,
                    "rawdescription": "\nRole reactive form group",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "roles",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Role[]",
                    "optional": false,
                    "description": "<p>Available roles</p>\n",
                    "line": 18,
                    "rawdescription": "\nAvailable roles",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "rolesQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<RolesQueryResponse>",
                    "optional": false,
                    "description": "<p>GraphQL roles query</p>\n",
                    "line": 26,
                    "rawdescription": "\nGraphQL roles query",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Chose role component, to preview application with selected role.</p>\n",
            "rawdescription": "\n\nChose role component, to preview application with selected role.\n",
            "type": "component",
            "sourceCode": "import { Apollo, QueryRef } from 'apollo-angular';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { GET_ROLES } from '../../graphql/queries';\nimport { Role, RolesQueryResponse } from '@oort-front/shared';\nimport { DialogRef, DIALOG_DATA } from '@angular/cdk/dialog';\n\n/**\n * Chose role component, to preview application with selected role.\n */\n@Component({\n  selector: 'app-chose-role',\n  templateUrl: './chose-role.component.html',\n  styleUrls: ['./chose-role.component.scss'],\n})\nexport class ChoseRoleComponent implements OnInit {\n  /** Available roles */\n  public roles: Role[] = [];\n  /** Loading indicator */\n  public loading = true;\n  /** Role reactive form group */\n  public roleForm = this.fb.group({\n    role: [null, Validators.required],\n  });\n  /** GraphQL roles query */\n  public rolesQuery!: QueryRef<RolesQueryResponse>;\n\n  /**\n   * Chose role component, to preview application with selected role.\n   *\n   * @param fb Angular form builder\n   * @param dialogRef Dialog ref\n   * @param apollo Angular service\n   * @param data Injected modal data\n   * @param data.application application id\n   */\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: DialogRef<ChoseRoleComponent>,\n    private apollo: Apollo,\n    @Inject(DIALOG_DATA)\n    public data: {\n      application: string;\n    }\n  ) {}\n\n  ngOnInit(): void {\n    this.rolesQuery = this.apollo.watchQuery<RolesQueryResponse>({\n      query: GET_ROLES,\n      variables: {\n        application: this.data.application,\n      },\n    });\n\n    this.rolesQuery.valueChanges.subscribe(({ loading }) => {\n      this.loading = loading;\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./chose-role.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Chose role component, to preview application with selected role.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "DialogRef<ChoseRoleComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "rawdescription": "\n\nChose role component, to preview application with selected role.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1007,
                            "end": 1009,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1001,
                            "end": 1006,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1043,
                            "end": 1052,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialogRef"
                        },
                        "type": "DialogRef<ChoseRoleComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1037,
                            "end": 1042,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog ref</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1076,
                            "end": 1082,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1070,
                            "end": 1075,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1111,
                            "end": 1115,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "data"
                        },
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1105,
                            "end": 1110,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Injected modal data</p>\n"
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ui-dialog size=\"small\">\n  <ng-container ngProjectAs=\"header\">\n    <h3 class=\"font-semibold\">\n      {{ 'components.role.impersonate.title' | translate }}\n    </h3>\n  </ng-container>\n  <ng-container ngProjectAs=\"content\">\n    <ui-spinner *ngIf=\"loading\"></ui-spinner>\n    <form [formGroup]=\"roleForm\" class=\"flex flex-col\" *ngIf=\"!loading\">\n      <div uiFormFieldDirective>\n        <label>{{ 'common.role.one' | translate }}</label>\n        <ui-graphql-select\n          valueField=\"id\"\n          textField=\"title\"\n          [query]=\"rolesQuery\"\n          formControlName=\"role\"\n        >\n        </ui-graphql-select>\n      </div>\n    </form>\n  </ng-container>\n  <ng-container ngProjectAs=\"actions\">\n    <ui-button [uiDialogClose] variant=\"default\">{{\n      'common.close' | translate\n    }}</ui-button>\n    <ui-button\n      category=\"secondary\"\n      variant=\"primary\"\n      [uiDialogClose]=\"roleForm.value\"\n      cdkFocusInitial\n      [disabled]=\"!roleForm.valid\"\n    >\n      {{ 'common.preview' | translate }}\n    </ui-button>\n  </ng-container>\n</ui-dialog>\n"
        },
        {
            "name": "ContextDatasourceComponent",
            "id": "component-ContextDatasourceComponent-f7bcc76f5212a7596d620bdc66039e6e7330d85ae945d3a4daed6ec1d7b8111b8f7ca16e582823894ac4d95c91b03c929b89fbf83f44aeb3536b0a143be1b5a1",
            "file": "apps/back-office/src/app/dashboard/pages/dashboard/components/context-datasource/context-datasource.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-context-datasource",
            "styleUrls": [
                "./context-datasource.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./context-datasource.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "availableFields",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "<p>Available fields</p>\n",
                    "line": 91,
                    "rawdescription": "\nAvailable fields",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PageContextT",
                    "optional": false,
                    "description": "initial context",
                    "line": 102,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogRef<ContextDatasourceComponent>",
                    "optional": false,
                    "description": "dialog reference",
                    "line": 103,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayField",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "<p>Current display field</p>\n",
                    "line": 89,
                    "rawdescription": "\nCurrent display field",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Context form group</p>\n",
                    "line": 83,
                    "rawdescription": "\nContext form group",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "refData",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReferenceData | null",
                    "optional": false,
                    "description": "<p>Selected reference data</p>\n",
                    "line": 87,
                    "rawdescription": "\nSelected reference data",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "resource",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Resource | null",
                    "optional": false,
                    "description": "<p>Selected resource</p>\n",
                    "line": 85,
                    "rawdescription": "\nSelected resource",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clearFormField",
                    "args": [
                        {
                            "name": "formField",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 245,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset given form field value if there is a value previously to avoid triggering\nnot necessary actions\n\n",
                    "description": "<p>Reset given form field value if there is a value previously to avoid triggering\nnot necessary actions</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6564,
                                "end": 6573,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "formField"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6558,
                                "end": 6563,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Current form field</p>\n"
                        },
                        {
                            "name": {
                                "pos": 6605,
                                "end": 6610,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6599,
                                "end": 6604,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>click event</p>\n"
                        }
                    ]
                },
                {
                    "name": "getReferenceData",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet reference data by id\n\n",
                    "description": "<p>Get reference data by id</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4552,
                                "end": 4554,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4546,
                                "end": 4551,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>reference data id</p>\n"
                        }
                    ]
                },
                {
                    "name": "getResource",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet resource by id\n\n",
                    "description": "<p>Get resource by id</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4949,
                                "end": 4951,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4943,
                                "end": 4948,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>resource id</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 219,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEmits the selected context",
                    "description": "<p>Emits the selected context</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "updateDisplayFieldOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nUpdates the options for the display field select",
                    "description": "<p>Updates the options for the display field select</p>\n",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "DialogModule",
                    "type": "module"
                },
                {
                    "name": "IconModule",
                    "type": "module"
                },
                {
                    "name": "TooltipModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "SelectMenuModule",
                    "type": "module"
                },
                {
                    "name": "FormWrapperModule",
                    "type": "module"
                },
                {
                    "name": "AlertModule",
                    "type": "module"
                },
                {
                    "name": "ResourceSelectComponent",
                    "type": "component"
                },
                {
                    "name": "ReferenceDataSelectComponent",
                    "type": "component"
                },
                {
                    "name": "DividerModule",
                    "type": "module"
                }
            ],
            "description": "<p>Component for selecting the dashboard context datasource</p>\n",
            "rawdescription": "\nComponent for selecting the dashboard context datasource",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DialogRef, DIALOG_DATA } from '@angular/cdk/dialog';\nimport {\n  PageContextT,\n  ReferenceData,\n  ReferenceDataQueryResponse,\n  Resource,\n  UnsubscribeComponent,\n  ResourceQueryResponse,\n  ResourceSelectComponent,\n  ReferenceDataSelectComponent,\n} from '@oort-front/shared';\nimport { takeUntil } from 'rxjs';\nimport { Apollo } from 'apollo-angular';\nimport { GET_REFERENCE_DATA, GET_RESOURCE } from './graphql/queries';\nimport {\n  ButtonModule,\n  SelectMenuModule,\n  FormWrapperModule,\n  AlertModule,\n  DialogModule,\n  TooltipModule,\n  IconModule,\n  DividerModule,\n} from '@oort-front/ui';\n\n/**\n * Create a form group for the page context datasource selection\n *\n * @param data the initial page context\n * @returns the form group\n */\nconst createContextDatasourceForm = (data?: PageContextT) => {\n  return new FormGroup({\n    resource: new FormControl(\n      data && 'resource' in data ? data.resource : null\n    ),\n    refData: new FormControl(data && 'refData' in data ? data.refData : null),\n    displayField: new FormControl(\n      data && data.displayField ? data.displayField : null,\n      [Validators.required]\n    ),\n  });\n};\n\n/** Component for selecting the dashboard context datasource */\n@Component({\n  selector: 'app-context-datasource',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    DialogModule,\n    IconModule,\n    TooltipModule,\n    ButtonModule,\n    SelectMenuModule,\n    FormWrapperModule,\n    AlertModule,\n    ResourceSelectComponent,\n    ReferenceDataSelectComponent,\n    DividerModule,\n  ],\n  templateUrl: './context-datasource.component.html',\n  styleUrls: ['./context-datasource.component.scss'],\n})\nexport class ContextDatasourceComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  /** Context form group */\n  public form!: ReturnType<typeof createContextDatasourceForm>;\n  /** Selected resource */\n  public resource: Resource | null = null;\n  /** Selected reference data */\n  public refData: ReferenceData | null = null;\n  /** Current display field */\n  public displayField: string | null = null;\n  /** Available fields */\n  public availableFields: string[] = [];\n\n  /**\n   * Component for selecting the dashboard context datasource\n   *\n   * @param apollo apollo client\n   * @param data initial context\n   * @param dialogRef dialog reference\n   */\n  constructor(\n    private apollo: Apollo,\n    @Inject(DIALOG_DATA) public data: PageContextT,\n    public dialogRef: DialogRef<ContextDatasourceComponent>\n  ) {\n    super();\n    this.form = createContextDatasourceForm(data);\n  }\n\n  ngOnInit(): void {\n    // If the form has a resource, fetch it\n    const resourceID = this.form.get('resource')?.value;\n    if (resourceID) {\n      this.getResource(resourceID);\n    }\n    // Set subscription of resource\n    this.form.controls.resource.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => {\n        // Set displayField to null\n        const displayField = this.form.get('displayField');\n        displayField?.setValue(null);\n\n        if (value) {\n          this.form.controls.refData.setValue(null);\n          this.refData = null;\n          displayField?.enable();\n          this.getResource(value);\n        } else {\n          displayField?.disable();\n        }\n      });\n\n    // If form has a refData, fetch it\n    const refDataID = this.form.get('refData')?.value;\n    if (refDataID) {\n      this.getReferenceData(refDataID);\n    }\n    // Set subscription of resource\n    this.form.controls.refData.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => {\n        // Set displayField to null\n        const displayField = this.form.get('displayField');\n        displayField?.setValue(null);\n\n        if (value) {\n          this.form.controls.resource.setValue(null);\n          this.resource = null;\n          this.getReferenceData(value);\n          displayField?.enable();\n        } else {\n          displayField?.disable();\n        }\n      });\n\n    // do the same for ref data\n\n    const sourceSelected =\n      !!this.form.get('resource')?.value || !!this.form.get('refData')?.value;\n\n    if (!sourceSelected) this.form.get('displayField')?.disable();\n  }\n\n  /**\n   * Get reference data by id\n   *\n   * @param id reference data id\n   */\n  private getReferenceData(id: string) {\n    this.apollo\n      .query<ReferenceDataQueryResponse>({\n        query: GET_REFERENCE_DATA,\n        variables: {\n          id,\n        },\n      })\n      .subscribe(({ data }) => {\n        this.refData = data.referenceData;\n        this.updateDisplayFieldOptions();\n      });\n  }\n\n  /**\n   * Get resource by id\n   *\n   * @param id resource id\n   */\n  private getResource(id: string) {\n    this.apollo\n      .query<ResourceQueryResponse>({\n        query: GET_RESOURCE,\n        variables: {\n          id,\n        },\n      })\n      .subscribe(({ data }) => {\n        this.resource = data.resource;\n        this.updateDisplayFieldOptions();\n      });\n  }\n\n  /** Updates the options for the display field select */\n  private updateDisplayFieldOptions(): void {\n    if (this.resource) {\n      this.availableFields =\n        this.resource?.fields.map((x: any) => x.name) ?? [];\n    } else if (this.refData) {\n      // TODO: When frontend changes about referenceData fields are merged,\n      // swap to the commented line to remove any casting\n      // this.availableFields = this.refData?.fields?.map((x) => x.name) ?? [];\n      this.availableFields =\n        this.refData?.fields?.map((x: any) => x.name) ?? [];\n    } else {\n      this.availableFields = [];\n    }\n  }\n\n  /** Emits the selected context */\n  public onSubmit(): void {\n    const formValue = this.form.getRawValue();\n\n    if (!formValue.displayField || (!formValue.refData && !formValue.resource))\n      return;\n\n    const context: PageContextT = formValue.resource\n      ? {\n          resource: this.resource?.id ?? '',\n          displayField: formValue.displayField ?? '',\n        }\n      : {\n          refData: this.refData?.id ?? '',\n          displayField: formValue.displayField ?? '',\n        };\n\n    this.dialogRef.close(context as any);\n  }\n\n  /**\n   * Reset given form field value if there is a value previously to avoid triggering\n   * not necessary actions\n   *\n   * @param formField Current form field\n   * @param event click event\n   */\n  clearFormField(formField: string, event: Event) {\n    if (this.form.get(formField)?.value) {\n      this.form.get(formField)?.setValue(null);\n    }\n    event.stopPropagation();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./context-datasource.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Component for selecting the dashboard context datasource</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "PageContextT",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "DialogRef<ContextDatasourceComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 91,
                "rawdescription": "\n\nComponent for selecting the dashboard context datasource\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2543,
                            "end": 2549,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2537,
                            "end": 2542,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>apollo client</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2576,
                            "end": 2580,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "data"
                        },
                        "type": "PageContextT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2570,
                            "end": 2575,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>initial context</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2609,
                            "end": 2618,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialogRef"
                        },
                        "type": "DialogRef<ContextDatasourceComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2603,
                            "end": 2608,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>dialog reference</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ui-dialog size=\"medium\">\n  <ng-container ngProjectAs=\"header\">\n    <h3 class=\"font-semibold\">\n      {{ 'models.dashboard.context.datasource.title' | translate }}\n    </h3>\n  </ng-container>\n\n  <ng-container ngProjectAs=\"content\">\n    <form [formGroup]=\"form\" class=\"flex justify-between w-full flex-col py-2\">\n      <ui-alert class=\"mb-6 text-sm\">\n        {{ 'models.dashboard.context.datasource.alert' | translate }}\n      </ui-alert>\n      <div class=\"flex-1 flex-col\">\n        <!-- Reference data selection  -->\n        <div\n          uiFormFieldDirective\n          class=\"flex-1\"\n          *ngIf=\"!form.value.resource\"\n        >\n          <label>{{ 'models.referenceData.select' | translate }}</label>\n          <shared-reference-data-select\n            formControlName=\"refData\"\n            [selectedElements]=\"[refData]\"\n          ></shared-reference-data-select>\n          <!-- Remove value -->\n          <ui-button\n            *ngIf=\"form.value.refData\"\n            uiSuffix\n            (click)=\"clearFormField('refData', $event)\"\n            [isIcon]=\"true\"\n            icon=\"close\"\n            variant=\"danger\"\n            [uiTooltip]=\"'common.remove' | translate\"\n          ></ui-button>\n        </div>\n        <ui-divider\n          class=\"max-w-xs m-auto\"\n          [text]=\"'common.or' | translate\"\n          *ngIf=\"!form.value.resource && !form.value.refData\"\n        ></ui-divider>\n        <!-- Resource selection  -->\n        <div\n          uiFormFieldDirective\n          class=\"flex-1\"\n          *ngIf=\"!form.value.refData\"\n        >\n          <label>{{ 'models.resource.select' | translate }}</label>\n          <shared-resource-select\n            formControlName=\"resource\"\n            [selectedElements]=\"[resource]\"\n          ></shared-resource-select>\n          <!-- Remove value -->\n          <ui-button\n            *ngIf=\"form.value.resource\"\n            uiSuffix\n            (click)=\"clearFormField('resource', $event)\"\n            [isIcon]=\"true\"\n            icon=\"close\"\n            variant=\"danger\"\n            [uiTooltip]=\"'common.remove' | translate\"\n          ></ui-button>\n        </div>\n      </div>\n      \n      <!-- Field selection -->\n      <div uiFormFieldDirective [outline]=\"false\">\n        <label>{{ 'models.dashboard.context.displayField' | translate }}</label>\n        <ui-select-menu\n          formControlName=\"displayField\"\n          [placeholder]=\"\n            'models.dashboard.context.selectDisplayField' | translate\n          \"\n        >\n          <ui-select-option\n            *ngFor=\"let field of availableFields\"\n            [value]=\"field\"\n            uiPrefix\n          >\n            {{ field }}\n          </ui-select-option>\n        </ui-select-menu>\n        <ui-icon\n          icon=\"info\"\n          class=\"cursor-pointer\"\n          variant=\"grey\"\n          uiSuffix\n          [uiTooltip]=\"'models.dashboard.context.datasource.info' | translate\"\n        ></ui-icon>\n      </div>\n    </form>\n  </ng-container>\n\n  <ng-container ngProjectAs=\"actions\">\n    <ui-button [uiDialogClose]>\n      {{ 'common.close' | translate }}\n    </ui-button>\n    <ui-button\n      category=\"secondary\"\n      variant=\"primary\"\n      (click)=\"onSubmit()\"\n      cdkFocusInitial\n      [disabled]=\"!form.valid || !!form.get('displayField')?.disabled\"\n      class=\"ml-auto\"\n    >\n      {{\n        (data\n          ? 'models.dashboard.context.datasource.update'\n          : 'models.dashboard.context.datasource.set'\n        ) | translate\n      }}\n    </ui-button>\n  </ng-container>\n</ui-dialog>\n"
        },
        {
            "name": "CustomStyleComponent",
            "id": "component-CustomStyleComponent-08768bc4ea281f8e5a9a88fe6b74de0788605c63a972e22c5fcebb2ca6e38d27e3305b9a10919993f59ffa7343d7725974aba18a89215eb25af101cc011fa945",
            "file": "apps/back-office/src/app/components/custom-style/custom-style.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom-style",
            "styleUrls": [
                "./custom-style.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-style.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "cancel",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nCancel output",
                    "description": "<p>Cancel output</p>\n",
                    "line": 64,
                    "type": "EventEmitter"
                },
                {
                    "name": "style",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nStyle output",
                    "description": "<p>Style output</p>\n",
                    "line": 62,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "applicationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>Application id</p>\n",
                    "line": 60,
                    "rawdescription": "\nApplication id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "editorOptions",
                    "defaultValue": "{\n    theme: 'vs-dark',\n    language: 'scss',\n    fixedOverflowWidgets: false,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Editor options</p>\n",
                    "line": 66,
                    "rawdescription": "\nEditor options",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formControl",
                    "defaultValue": "new FormControl(DEFAULT_STYLE)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Form control</p>\n",
                    "line": 58,
                    "rawdescription": "\nForm control",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 76,
                    "rawdescription": "\nLoading state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "rawCustomStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Raw custom style</p>\n",
                    "line": 72,
                    "rawdescription": "\nRaw custom style",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "savedStyle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Saved style</p>\n",
                    "line": 74,
                    "rawdescription": "\nSaved style",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "timeoutListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeJS.Timeout",
                    "optional": false,
                    "description": "<p>Timeout to init editor</p>\n",
                    "line": 78,
                    "rawdescription": "\nTimeout to init editor",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initEditor",
                    "args": [
                        {
                            "name": "editor",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 226,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOn initialization of editor, format code\n\n",
                    "description": "<p>On initialization of editor, format code</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6849,
                                "end": 6855,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "editor"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6843,
                                "end": 6848,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>monaco editor used for scss edition</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 243,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        161
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhen clicking on the close button",
                    "description": "<p>When clicking on the close button</p>\n"
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSave application custom css styling",
                    "description": "<p>Save application custom css styling</p>\n",
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MonacoEditorModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "SpinnerModule",
                    "type": "module"
                },
                {
                    "name": "TooltipModule",
                    "type": "module"
                }
            ],
            "description": "<p>Component that allow custom styling to the application using free scss editor</p>\n",
            "rawdescription": "\nComponent that allow custom styling to the application using free scss editor",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnDestroy,\n  Inject,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MonacoEditorModule } from 'ngx-monaco-editor-v2';\nimport {\n  Application,\n  ApplicationService,\n  UnsubscribeComponent,\n  ConfirmService,\n  RestService,\n  BlobType,\n  DownloadService,\n} from '@oort-front/shared';\nimport { takeUntil } from 'rxjs/operators';\nimport { Apollo } from 'apollo-angular';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport {\n  ButtonModule,\n  SnackbarService,\n  SpinnerModule,\n  TooltipModule,\n} from '@oort-front/ui';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/** Default css style example to initialize the form and editor */\nconst DEFAULT_STYLE = '';\n\n/** Component that allow custom styling to the application using free scss editor */\n@Component({\n  selector: 'app-custom-style',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MonacoEditorModule,\n    TranslateModule,\n    ButtonModule,\n    SpinnerModule,\n    TooltipModule,\n  ],\n  templateUrl: './custom-style.component.html',\n  styleUrls: ['./custom-style.component.scss'],\n})\nexport class CustomStyleComponent\n  extends UnsubscribeComponent\n  implements OnInit, OnDestroy\n{\n  /** Form control */\n  public formControl = new FormControl(DEFAULT_STYLE);\n  /** Application id */\n  public applicationId?: string;\n  /** Style output */\n  @Output() style = new EventEmitter<string>();\n  /** Cancel output */\n  @Output() cancel = new EventEmitter();\n  /** Editor options */\n  public editorOptions = {\n    theme: 'vs-dark',\n    language: 'scss',\n    fixedOverflowWidgets: false,\n  };\n  /** Raw custom style */\n  private rawCustomStyle!: string;\n  /** Saved style */\n  private savedStyle = '';\n  /** Loading state */\n  public loading = false;\n  /** Timeout to init editor */\n  private timeoutListener!: NodeJS.Timeout;\n\n  /**\n   * Creates an instance of CustomStyleComponent, form and updates.\n   *\n   * @param applicationService Shared application service\n   * @param snackBar Shared snackbar service\n   * @param apollo Apollo service\n   * @param translate Angular translate service\n   * @param confirmService Shared confirmation service\n   * @param restService Shared rest service\n   * @param document document\n   * @param downloadService Shared download service\n   */\n  constructor(\n    private applicationService: ApplicationService,\n    private snackBar: SnackbarService,\n    private apollo: Apollo,\n    private translate: TranslateService,\n    private confirmService: ConfirmService,\n    private restService: RestService,\n    @Inject(DOCUMENT) private document: Document,\n    private downloadService: DownloadService\n  ) {\n    super();\n    // Updates the style when the value changes\n    this.formControl.valueChanges\n      .pipe(\n        debounceTime(1000),\n        distinctUntilChanged(),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((value: any) => {\n        const scss = value as string;\n        this.restService\n          .post('style/scss-to-css', { scss }, { responseType: 'text' })\n          .subscribe({\n            next: (css) => {\n              if (this.applicationService.customStyle) {\n                this.applicationService.customStyle.innerText = css;\n              }\n            },\n          });\n        this.applicationService.customStyleEdited = true;\n        this.rawCustomStyle = value;\n      });\n  }\n\n  ngOnInit(): void {\n    if (this.applicationService.rawCustomStyle) {\n      this.savedStyle = this.applicationService.customStyle?.innerText || '';\n      this.rawCustomStyle = this.applicationService.rawCustomStyle;\n      this.formControl.setValue(this.rawCustomStyle, { emitEvent: false });\n      this.formControl.markAsPristine();\n    } else {\n      const styleElement = this.document.createElement('style');\n      styleElement.innerText = '';\n      this.document.getElementsByTagName('head')[0].appendChild(styleElement);\n      this.applicationService.rawCustomStyle = this.rawCustomStyle;\n      this.applicationService.customStyle = styleElement;\n    }\n\n    this.applicationService.application$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((application: Application | null) => {\n        if (application) {\n          this.applicationId = application.id;\n        }\n      });\n  }\n\n  /** When clicking on the close button */\n  onClose(): void {\n    if (this.formControl.pristine) {\n      this.cancel.emit(true);\n    } else {\n      /** If not saved changes, confirm before close */\n      const confirmDialogRef = this.confirmService.openConfirmModal({\n        title: this.translate.instant('components.form.update.exit'),\n        content: this.translate.instant(\n          'components.widget.settings.close.confirmationMessage'\n        ),\n        confirmText: this.translate.instant('components.confirmModal.confirm'),\n        confirmVariant: 'danger',\n      });\n      confirmDialogRef.closed\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((confirm: any) => {\n          if (confirm) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n            if (this.applicationService.customStyle) {\n              this.applicationService.customStyleEdited = false;\n              this.applicationService.customStyle.innerText = this.savedStyle;\n            }\n            this.cancel.emit(true);\n          }\n        });\n    }\n  }\n\n  /** Save application custom css styling */\n  async onSave(): Promise<void> {\n    this.loading = true;\n    if (!this.applicationId) {\n      throw new Error('No application id');\n    }\n\n    const file = new File(\n      [this.formControl.value as string],\n      'customStyle.scss',\n      {\n        type: 'scss',\n      }\n    );\n\n    const path = await this.downloadService.uploadBlob(\n      file,\n      BlobType.APPLICATION_STYLE,\n      this.applicationId\n    );\n\n    this.snackBar.openSnackBar(\n      this.translate.instant('common.notifications.objectUpdated', {\n        value: this.translate.instant('components.application.customStyling'),\n        type: '',\n      })\n    );\n    if (path) {\n      this.snackBar.openSnackBar(\n        this.translate.instant('common.notifications.objectUpdated', {\n          value: this.translate.instant('components.application.customStyling'),\n          type: '',\n        })\n      );\n      this.formControl.markAsPristine();\n      this.applicationService.customStyleEdited = false;\n      this.applicationService.rawCustomStyle = this.rawCustomStyle;\n      this.savedStyle = this.applicationService.customStyle?.innerText || '';\n    }\n    this.loading = false;\n  }\n\n  /**\n   * On initialization of editor, format code\n   *\n   * @param editor monaco editor used for scss edition\n   */\n  public initEditor(editor: any): void {\n    if (editor) {\n      if (this.timeoutListener) {\n        clearTimeout(this.timeoutListener);\n      }\n      this.timeoutListener = setTimeout(() => {\n        editor\n          .getAction('editor.action.formatDocument')\n          .run()\n          .finally(() => {\n            this.formControl.markAsPristine();\n            this.applicationService.customStyleEdited = false;\n          });\n      }, 100);\n    }\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    if (this.timeoutListener) {\n      clearTimeout(this.timeoutListener);\n    }\n    if (\n      this.applicationService.customStyleEdited &&\n      this.applicationService.customStyle\n    ) {\n      this.applicationService.customStyleEdited = false;\n      this.applicationService.customStyle.innerText = this.savedStyle;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "::ng-deep .editor-widget.suggest-widget {\n  left: 0 !important;\n}\n",
                    "styleUrl": "./custom-style.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Creates an instance of CustomStyleComponent, form and updates.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "restService",
                        "type": "RestService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "downloadService",
                        "type": "DownloadService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 78,
                "rawdescription": "\n\nCreates an instance of CustomStyleComponent, form and updates.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2177,
                            "end": 2195,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2171,
                            "end": 2176,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2235,
                            "end": 2243,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2229,
                            "end": 2234,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2280,
                            "end": 2286,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2274,
                            "end": 2279,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2314,
                            "end": 2323,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2308,
                            "end": 2313,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2362,
                            "end": 2376,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2356,
                            "end": 2361,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirmation service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2417,
                            "end": 2428,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "restService"
                        },
                        "type": "RestService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2411,
                            "end": 2416,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared rest service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2461,
                            "end": 2469,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "document"
                        },
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2455,
                            "end": 2460,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>document</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2491,
                            "end": 2506,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "downloadService"
                        },
                        "type": "DownloadService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2485,
                            "end": 2490,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared download service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"w-80 h-full flex flex-col\">\n  <!-- Header -->\n  <div class=\"items-center p-4 border-b\">\n    <div class=\"flex justify-between items-center mb-2\">\n      <h2 class=\"mb-0\">\n        {{ 'components.application.customStyling' | translate }}\n      </h2>\n      <div class=\"flex\">\n        <ui-button\n          variant=\"primary\"\n          category=\"tertiary\"\n          [isIcon]=\"true\"\n          icon=\"check\"\n          (click)=\"onSave()\"\n          [disabled]=\"!applicationId || formControl.pristine\"\n          [uiTooltip]=\"'common.save' | translate\"\n        >\n        </ui-button>\n        <ui-button\n          [isIcon]=\"true\"\n          icon=\"close\"\n          (click)=\"onClose()\"\n          [uiTooltip]=\"'common.cancel' | translate\"\n        >\n        </ui-button>\n      </div>\n    </div>\n  </div>\n  <ui-spinner class=\"my-2\" *ngIf=\"loading\"></ui-spinner>\n  <!-- Style editor -->\n  <div class=\"grow overflow-y-auto overflow-x-hidden\">\n    <ngx-monaco-editor\n      class=\"!h-full\"\n      (onInit)=\"initEditor($event)\"\n      [options]=\"editorOptions\"\n      [formControl]=\"formControl\"\n    ></ngx-monaco-editor>\n  </div>\n</div>\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-98924c298984abf6ad2d7c3008cfc49fbee6e3f8d2208376944be788078af56345ffe61ac6668d11d6903a55d1864531863f1d9a1405c49b6d1ebb436f446063",
            "file": "apps/back-office/src/app/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "navGroups",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "<p>Navigation groups</p>\n",
                    "line": 21,
                    "rawdescription": "\nNavigation groups",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "'Back-office'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Title of the page</p>\n",
                    "line": 17,
                    "rawdescription": "\nTitle of the page",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setNavGroups",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet the navigation items, from the permissions of user.\n",
                    "description": "<p>Set the navigation items, from the permissions of user.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Main BO dashboard component</p>\n",
            "rawdescription": "\n\nMain BO dashboard component\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AppAbility, UnsubscribeComponent } from '@oort-front/shared';\nimport { takeUntil } from 'rxjs';\n\n/**\n * Main BO dashboard component\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent extends UnsubscribeComponent {\n  // === HEADER TITLE ===\n  /** Title of the page */\n  public title = 'Back-office';\n\n  // === AVAILABLE ROUTES, DEPENDS ON USER ===\n  /** Navigation groups */\n  public navGroups: any[] = [];\n\n  /**\n   * Main BO dashboard component\n   *\n   * @param translate Angular translate service\n   * @param ability user ability\n   */\n  constructor(\n    private translate: TranslateService,\n    private ability: AppAbility\n  ) {\n    super();\n    this.setNavGroups();\n    translate.onLangChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.setNavGroups();\n    });\n  }\n\n  /**\n   * Set the navigation items, from the permissions of user.\n   */\n  setNavGroups(): void {\n    const navGroups = [];\n    // Site builder items ( applications )\n    const siteBuilderItems = [];\n    if (this.ability.can('read', 'Application')) {\n      siteBuilderItems.push({\n        name: this.translate.instant('pages.applications.title'),\n        path: '/applications',\n        icon: 'apps',\n      });\n    }\n    if (siteBuilderItems.length > 0) {\n      navGroups.push({\n        name: this.translate.instant('pages.appBuilder.title'),\n        navItems: siteBuilderItems,\n      });\n    }\n    // Data items ( forms / resources / ref data )\n    const dataItems = [];\n    if (this.ability.can('read', 'Form')) {\n      dataItems.push({\n        name: this.translate.instant('common.form.few'),\n        path: '/forms',\n        icon: 'poll',\n      });\n    }\n    if (this.ability.can('read', 'Resource')) {\n      dataItems.push({\n        name: this.translate.instant('common.resource.few'),\n        path: '/resources',\n        icon: 'storage',\n      });\n    }\n    if (this.ability.can('read', 'ReferenceData')) {\n      dataItems.push({\n        name: this.translate.instant('common.referenceData.few'),\n        path: '/referencedata',\n        icon: 'cloud_download',\n      });\n    }\n    if (dataItems.length > 0) {\n      navGroups.push({\n        name: this.translate.instant('pages.formBuilder.title'),\n        navItems: dataItems,\n      });\n    }\n    // Administrative items ( users / roles / APIs / automated actions )\n    const administrationItems = [];\n    if (this.ability.can('read', 'User')) {\n      administrationItems.push({\n        name: this.translate.instant('common.user.few'),\n        path: '/settings/users',\n        icon: 'supervisor_account',\n      });\n    }\n    if (this.ability.can('read', 'Role')) {\n      administrationItems.push({\n        name: this.translate.instant('common.role.few'),\n        path: '/settings/roles',\n        icon: 'admin_panel_settings',\n      });\n    }\n    if (this.ability.can('read', 'ApiConfiguration')) {\n      administrationItems.push({\n        name: this.translate.instant('common.apiConfiguration.few'),\n        path: '/settings/apiconfigurations',\n        icon: 'settings_input_composite',\n      });\n    }\n    if (this.ability.can('read', 'PullJob')) {\n      administrationItems.push({\n        name: this.translate.instant('common.pullJob.few'),\n        path: '/settings/pulljobs',\n        icon: 'cloud_download',\n      });\n    }\n    if (administrationItems.length > 0) {\n      navGroups.push({\n        name: this.translate.instant('pages.administration.title'),\n        navItems: administrationItems,\n      });\n    }\n\n    this.navGroups = navGroups;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Main BO dashboard component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ability",
                        "type": "AppAbility",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "rawdescription": "\n\nMain BO dashboard component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 691,
                            "end": 700,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 685,
                            "end": 690,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 739,
                            "end": 746,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "ability"
                        },
                        "type": "AppAbility",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 733,
                            "end": 738,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>user ability</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "templateData": "<shared-layout [title]=\"title\" [leftSidenav]=\"leftSidenav\"></shared-layout>\n<!--Need the nav variable, don't remove let-nav, used in layout-->\n<ng-template #leftSidenav let-nav>\n  <shared-navbar [nav]=\"nav\" [navGroups]=\"navGroups\"></shared-navbar>\n</ng-template>\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-38b3d6c40d61f064ca79d1405b7f3f70f68c0ced4c3b0de0587a703761ffbe2cc42636ca7844fda77da7f0ec1cbae56814ea59a4724f01b08fcccbf5a77ccb26-1",
            "file": "apps/back-office/src/app/app-preview/pages/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "changeStep",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEmit event when changing steps",
                    "description": "<p>Emit event when changing steps</p>\n",
                    "line": 43,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dashboard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dashboard",
                    "optional": true,
                    "description": "<p>Current dashboard</p>\n",
                    "line": 41,
                    "rawdescription": "\nCurrent dashboard",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Id of loaded dashboard</p>\n",
                    "line": 35,
                    "rawdescription": "\nId of loaded dashboard",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading indicator</p>\n",
                    "line": 37,
                    "rawdescription": "\nLoading indicator",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "widgets",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Current widgets</p>\n",
                    "line": 39,
                    "rawdescription": "\nCurrent widgets",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDestroys all subscriptions of the page.\n",
                    "description": "<p>Destroys all subscriptions of the page.</p>\n",
                    "modifierKind": [
                        161
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets the dashboard from the page parameters.\n",
                    "description": "<p>Gets the dashboard from the page parameters.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Dashboard component page, for application preview.</p>\n",
            "rawdescription": "\n\nDashboard component page, for application preview.\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport {\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GET_DASHBOARD_BY_ID } from './graphql/queries';\nimport {\n  Dashboard,\n  DashboardQueryResponse,\n  DashboardService,\n  UnsubscribeComponent,\n} from '@oort-front/shared';\nimport { TranslateService } from '@ngx-translate/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { SnackbarService } from '@oort-front/ui';\nimport { cloneDeep } from 'lodash';\n\n/**\n * Dashboard component page, for application preview.\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent\n  extends UnsubscribeComponent\n  implements OnInit, OnDestroy\n{\n  /** Id of loaded dashboard */\n  public id = '';\n  /** Loading indicator */\n  public loading = true;\n  /** Current widgets */\n  public widgets = [];\n  /** Current dashboard */\n  public dashboard?: Dashboard;\n  /** Emit event when changing steps */\n  @Output() changeStep: EventEmitter<number> = new EventEmitter();\n\n  /**\n   * Dashboard component page for application preview.\n   *\n   * @param apollo Apollo service\n   * @param route Angular activated route\n   * @param router Angular router\n   * @param snackBar Shared snackbar service\n   * @param dashboardService Shared dashboard service\n   * @param translate Angular translate service\n   */\n  constructor(\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private router: Router,\n    private snackBar: SnackbarService,\n    private dashboardService: DashboardService,\n    private translate: TranslateService\n  ) {\n    super();\n  }\n\n  /**\n   * Gets the dashboard from the page parameters.\n   */\n  ngOnInit(): void {\n    this.route.params.pipe(takeUntil(this.destroy$)).subscribe((params) => {\n      this.loading = true;\n      this.id = params.id;\n      this.apollo\n        .query<DashboardQueryResponse>({\n          query: GET_DASHBOARD_BY_ID,\n          variables: {\n            id: this.id,\n          },\n        })\n        .subscribe({\n          next: ({ data, loading }) => {\n            if (data.dashboard) {\n              this.dashboard = data.dashboard;\n              this.dashboardService.openDashboard(this.dashboard);\n              this.widgets = cloneDeep(\n                data.dashboard.structure ? data.dashboard.structure : []\n              );\n              this.loading = loading;\n            } else {\n              this.snackBar.openSnackBar(\n                this.translate.instant(\n                  'common.notifications.accessNotProvided',\n                  {\n                    type: this.translate\n                      .instant('common.dashboard.one')\n                      .toLowerCase(),\n                    error: '',\n                  }\n                ),\n                { error: true }\n              );\n              this.router.navigate(['/dashboards']);\n            }\n          },\n          error: (err) => {\n            this.snackBar.openSnackBar(err.message, { error: true });\n            this.router.navigate(['/dashboards']);\n          },\n        });\n    });\n  }\n\n  /**\n   * Destroys all subscriptions of the page.\n   */\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.dashboardService.closeDashboard();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Dashboard component page for application preview.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dashboardService",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "rawdescription": "\n\nDashboard component page for application preview.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1247,
                            "end": 1253,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1241,
                            "end": 1246,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1281,
                            "end": 1286,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1275,
                            "end": 1280,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular activated route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1323,
                            "end": 1329,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1317,
                            "end": 1322,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1357,
                            "end": 1365,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1351,
                            "end": 1356,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1402,
                            "end": 1418,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dashboardService"
                        },
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1396,
                            "end": 1401,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared dashboard service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1456,
                            "end": 1465,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1450,
                            "end": 1455,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DashboardComponent-1",
            "templateData": "<shared-widget-grid\n  [loading]=\"loading\"\n  [widgets]=\"widgets\"\n  (changeStep)=\"changeStep.emit($event)\"\n></shared-widget-grid>\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-3f2b8f79380d5f6019443917b5e5a256cd9c657126b26bbbe755484e18100e33464157d4799f8925262770970f7450218ef71832c420b5182a6a8a0233b70e01-2",
            "file": "apps/back-office/src/app/dashboard/pages/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "changeStep",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nChange step event ( in workflow )",
                    "description": "<p>Change step event ( in workflow )</p>\n",
                    "line": 75,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "addTimeoutListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeJS.Timeout",
                    "optional": false,
                    "description": "<p>Timeout to scroll to newly added widget</p>\n",
                    "line": 114,
                    "rawdescription": "\nTimeout to scroll to newly added widget",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "applicationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>Application id</p>\n",
                    "line": 84,
                    "rawdescription": "\nApplication id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "applications",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Application[]",
                    "optional": false,
                    "description": "<p>List of available applications</p>\n",
                    "line": 100,
                    "rawdescription": "\nList of available applications",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "buttonActions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonActionT[]",
                    "optional": false,
                    "description": "<p>Configured dashboard quick actions</p>\n",
                    "line": 112,
                    "rawdescription": "\nConfigured dashboard quick actions",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "canUpdate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>User can update dashboard</p>\n",
                    "line": 94,
                    "rawdescription": "\nUser can update dashboard",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "contextId",
                    "defaultValue": "new FormControl<string | number | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Contextual template id</p>\n",
                    "line": 106,
                    "rawdescription": "\nContextual template id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "contextRecord",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record | null",
                    "optional": false,
                    "description": "<p>Contextual record</p>\n",
                    "line": 110,
                    "rawdescription": "\nContextual record",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dashboard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dashboard",
                    "optional": true,
                    "description": "<p>Current dashboard</p>\n",
                    "line": 90,
                    "rawdescription": "\nCurrent dashboard",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 165,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "editionActive",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Is edition active</p>\n",
                    "line": 119,
                    "rawdescription": "\nIs edition active",
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.edit-mode-dashboard'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "formActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Dashboard name edition is active</p>\n",
                    "line": 96,
                    "rawdescription": "\nDashboard name edition is active",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "gridOptions",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridsterConfig",
                    "optional": false,
                    "description": "<p>Additional grid configuration</p>\n",
                    "line": 121,
                    "rawdescription": "\nAdditional grid configuration",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "gridOptionsTimeoutListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeJS.Timeout",
                    "optional": false,
                    "description": "<p>Timeout to load grid options</p>\n",
                    "line": 116,
                    "rawdescription": "\nTimeout to load grid options",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Dashboard id</p>\n",
                    "line": 82,
                    "rawdescription": "\nDashboard id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isFullScreen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Is dashboard in fullscreen mode</p>\n",
                    "line": 80,
                    "rawdescription": "\nIs dashboard in fullscreen mode",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Is dashboard loading</p>\n",
                    "line": 86,
                    "rawdescription": "\nIs dashboard loading",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "recordsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<ResourceRecordsNodesQueryResponse>",
                    "optional": false,
                    "description": "<p>Contextual records query</p>\n",
                    "line": 104,
                    "rawdescription": "\nContextual records query",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "refDataElements",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "<p>Contextual reference data elements</p>\n",
                    "line": 102,
                    "rawdescription": "\nContextual reference data elements",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "refDataValueField",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Field of contextual reference data</p>\n",
                    "line": 108,
                    "rawdescription": "\nField of contextual reference data",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showAppMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Show application menu</p>\n",
                    "line": 98,
                    "rawdescription": "\nShow application menu",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Show dashboard filter</p>\n",
                    "line": 92,
                    "rawdescription": "\nShow dashboard filter",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "widgetGridComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WidgetGridComponent",
                    "optional": false,
                    "description": "<p>Widget grid reference</p>\n",
                    "line": 78,
                    "rawdescription": "\nWidget grid reference",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "WidgetGridComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "widgets",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "<p>List of widgets</p>\n",
                    "line": 88,
                    "rawdescription": "\nList of widgets",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "autoSaveChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 516,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSave the dashboard changes in the database.",
                    "description": "<p>Save the dashboard changes in the database.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "canDeactivate",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable | boolean",
                    "typeParameters": [],
                    "line": 399,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nShow modal confirmation before leave the page if has changes on form\n\n",
                    "description": "<p>Show modal confirmation before leave the page if has changes on form</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 13634,
                                "end": 13641,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>boolean of observable of boolean</p>\n"
                        }
                    ]
                },
                {
                    "name": "initContext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 719,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nInitializes the dashboard context",
                    "description": "<p>Initializes the dashboard context</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "loadDashboard",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 289,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInit the dashboard\n\n",
                    "description": "<p>Init the dashboard</p>\n",
                    "modifierKind": [
                        121,
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9759,
                                "end": 9761,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9753,
                                "end": 9758,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Dashboard id</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 9781,
                                "end": 9788,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Promise</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 381,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLeave dashboard\n",
                    "description": "<p>Leave dashboard</p>\n",
                    "modifierKind": [
                        161
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAdd",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 424,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd a new widget to the dashboard.\n\n",
                    "description": "<p>Add a new widget to the dashboard.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 14440,
                                "end": 14441,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 14434,
                                "end": 14439,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>add event</p>\n"
                        }
                    ]
                },
                {
                    "name": "onAddButtonAction",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 595,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOpen modal to add new button action",
                    "description": "<p>Open modal to add new button action</p>\n",
                    "modifierKind": [
                        123,
                        132
                    ]
                },
                {
                    "name": "onButtonActionDrop",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 755,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReorders button actions.\n\n",
                    "description": "<p>Reorders button actions.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 23953,
                                "end": 23958,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "CdkDragDrop<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 23947,
                                "end": 23952,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Drop event</p>\n"
                        }
                    ]
                },
                {
                    "name": "onContextChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number | undefined | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 687,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle dashboard context change by simply updating the url.\n\n",
                    "description": "<p>Handle dashboard context change by simply updating the url.</p>\n",
                    "modifierKind": [
                        121,
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 21859,
                                "end": 21864,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "string | number | undefined | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 21853,
                                "end": 21858,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>id of the element or record</p>\n"
                        }
                    ]
                },
                {
                    "name": "onDeleteTile",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 489,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemove a widget from the dashboard.\n\n",
                    "description": "<p>Remove a widget from the dashboard.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 16220,
                                "end": 16221,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 16214,
                                "end": 16219,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>delete event</p>\n"
                        }
                    ]
                },
                {
                    "name": "onEditTile",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 445,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdits the settings or display of a widget.\n\n",
                    "description": "<p>Edits the settings or display of a widget.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 15087,
                                "end": 15088,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 15081,
                                "end": 15086,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>widget to save.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onOpenSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 770,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpen settings modal.\n",
                    "description": "<p>Open settings modal.</p>\n",
                    "modifierKind": [
                        123,
                        132
                    ]
                },
                {
                    "name": "onSearchChange",
                    "args": [
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 849,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate query based on text search.\n\n",
                    "description": "<p>Update query based on text search.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 27002,
                                "end": 27008,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "search"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 26996,
                                "end": 27001,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Search text from the graphql select</p>\n"
                        }
                    ]
                },
                {
                    "name": "onShare",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 586,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nDisplay the ShareUrl modal with the route to access the dashboard.",
                    "description": "<p>Display the ShareUrl modal with the route to access the dashboard.</p>\n",
                    "modifierKind": [
                        123,
                        132
                    ]
                },
                {
                    "name": "onStyleTile",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 504,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStyle a widget from the dashboard.\n\n",
                    "description": "<p>Style a widget from the dashboard.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 16609,
                                "end": 16610,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 16603,
                                "end": 16608,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>style event</p>\n"
                        }
                    ]
                },
                {
                    "name": "saveName",
                    "args": [
                        {
                            "name": "dashboardName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 554,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate the name of the dashboard and the step or page linked to it.\n\n",
                    "description": "<p>Update the name of the dashboard and the step or page linked to it.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 17831,
                                "end": 17844,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "dashboardName"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 17816,
                                "end": 17821,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>new dashboard name</p>\n",
                            "typeExpression": {
                                "pos": 17822,
                                "end": 17830,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 17823,
                                    "end": 17829,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 152
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "selectContextDatasource",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 617,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOpens modal for context dataset selection",
                    "description": "<p>Opens modal for context dataset selection</p>\n",
                    "modifierKind": [
                        123,
                        132
                    ]
                },
                {
                    "name": "toggleFormActive",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 539,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggle visibility of form.\n",
                    "description": "<p>Toggle visibility of form.</p>\n"
                },
                {
                    "name": "updateContextOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 657,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate the context options.\nLoads elements from reference data or records from resource.\n",
                    "description": "<p>Update the context options.\nLoads elements from reference data or records from resource.</p>\n",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.edit-mode-dashboard",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs edition active",
                    "description": "<p>Is edition active</p>\n",
                    "line": 119,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Back-office Dashboard page.\nEdition of the dashboard ( if user has permission ).</p>\n",
            "rawdescription": "\n\nBack-office Dashboard page.\nEdition of the dashboard ( if user has permission ).\n",
            "type": "component",
            "sourceCode": "import { Apollo, QueryRef } from 'apollo-angular';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport {\n  Dashboard,\n  ApplicationService,\n  WorkflowService,\n  DashboardService,\n  Application,\n  UnsubscribeComponent,\n  WidgetGridComponent,\n  ConfirmService,\n  ReferenceDataService,\n  Record,\n  ButtonActionT,\n  ResourceRecordsNodesQueryResponse,\n  DashboardQueryResponse,\n  EditDashboardMutationResponse,\n  RecordQueryResponse,\n} from '@oort-front/shared';\nimport { EDIT_DASHBOARD } from './graphql/mutations';\nimport {\n  GET_DASHBOARD_BY_ID,\n  GET_RECORD_BY_ID,\n  GET_RESOURCE_RECORDS,\n} from './graphql/queries';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  map,\n  takeUntil,\n  filter,\n  startWith,\n  debounceTime,\n} from 'rxjs/operators';\nimport { Observable, firstValueFrom } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { cloneDeep, isEqual } from 'lodash';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { SnackbarService, UILayoutService } from '@oort-front/ui';\nimport localForage from 'localforage';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { ContextService, CustomWidgetStyleComponent } from '@oort-front/shared';\nimport { DOCUMENT } from '@angular/common';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { GridsterConfig } from 'angular-gridster2';\n\n/** Default number of records fetched per page */\nconst ITEMS_PER_PAGE = 10;\n\n/**\n * Back-office Dashboard page.\n * Edition of the dashboard ( if user has permission ).\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent\n  extends UnsubscribeComponent\n  implements OnInit, OnDestroy\n{\n  /** Change step event ( in workflow ) */\n  @Output() changeStep: EventEmitter<number> = new EventEmitter();\n  /** Widget grid reference */\n  @ViewChild(WidgetGridComponent)\n  widgetGridComponent!: WidgetGridComponent;\n  /** Is dashboard in fullscreen mode */\n  public isFullScreen = false;\n  /** Dashboard id */\n  public id = '';\n  /** Application id */\n  public applicationId?: string;\n  /** Is dashboard loading */\n  public loading = true;\n  /** List of widgets */\n  public widgets: any[] = [];\n  /** Current dashboard */\n  public dashboard?: Dashboard;\n  /** Show dashboard filter */\n  public showFilter!: boolean;\n  /** User can update dashboard */\n  public canUpdate = false;\n  /** Dashboard name edition is active */\n  public formActive = false;\n  /** Show application menu */\n  public showAppMenu = false;\n  /** List of available applications */\n  public applications: Application[] = [];\n  /** Contextual reference data elements  */\n  public refDataElements: any[] = [];\n  /** Contextual records query */\n  public recordsQuery!: QueryRef<ResourceRecordsNodesQueryResponse>;\n  /** Contextual template id */\n  public contextId = new FormControl<string | number | null>(null);\n  /** Field of contextual reference data */\n  public refDataValueField = '';\n  /** Contextual record */\n  public contextRecord: Record | null = null;\n  /** Configured dashboard quick actions */\n  public buttonActions: ButtonActionT[] = [];\n  /** Timeout to scroll to newly added widget */\n  private addTimeoutListener!: NodeJS.Timeout;\n  /** Timeout to load grid options */\n  private gridOptionsTimeoutListener!: NodeJS.Timeout;\n  /** Is edition active */\n  @HostBinding('class.edit-mode-dashboard')\n  public editionActive = true;\n  /** Additional grid configuration */\n  public gridOptions: GridsterConfig = {};\n\n  /** @returns type of context element */\n  get contextType() {\n    if (this.dashboard?.page?.context) {\n      return 'resource' in this.dashboard.page.context ? 'record' : 'element';\n    } else {\n      return;\n    }\n  }\n\n  /** @returns is dashboard a step or a page */\n  get isStep(): boolean {\n    return this.router.url.includes('/workflow/');\n  }\n\n  /**\n   * Back-office Dashboard page.\n   * Edition of the dashboard ( if user has permission ).\n   *\n   * @param applicationService Shared application service\n   * @param workflowService Shared workflow service\n   * @param apollo Apollo service\n   * @param route Angular activated route\n   * @param router Angular router\n   * @param dialog Dialog service\n   * @param snackBar Shared snackbar service\n   * @param dashboardService Shared dashboard service\n   * @param translate Angular translate service\n   * @param confirmService Shared confirm service\n   * @param contextService Dashboard context service\n   * @param refDataService Shared reference data service\n   * @param renderer Angular renderer\n   * @param elementRef Angular element ref\n   * @param layoutService Shared layout service\n   * @param document Document\n   * @param clipboard Angular clipboard service\n   */\n  constructor(\n    private applicationService: ApplicationService,\n    private workflowService: WorkflowService,\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private router: Router,\n    public dialog: Dialog,\n    private snackBar: SnackbarService,\n    private dashboardService: DashboardService,\n    private translate: TranslateService,\n    private confirmService: ConfirmService,\n    private contextService: ContextService,\n    private refDataService: ReferenceDataService,\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    private layoutService: UILayoutService,\n    @Inject(DOCUMENT) private document: Document,\n    private clipboard: Clipboard\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.contextId.valueChanges\n      .pipe(debounceTime(500), takeUntil(this.destroy$))\n      .subscribe((value) => {\n        // Load template, or go back to default one\n        this.onContextChange(value);\n      });\n    /** Listen to router events navigation end, to get last version of params & queryParams. */\n    this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationEnd),\n        startWith(this.router), // initialize\n        takeUntil(this.destroy$)\n      )\n      .subscribe(() => {\n        this.loading = true;\n        // Reset context\n        this.contextRecord = null;\n        this.contextId.setValue(null, {\n          emitEvent: false,\n          emitModelToViewChange: false,\n          emitViewToModelChange: false,\n        });\n        this.contextId.markAsPristine();\n        this.contextId.markAsUntouched();\n        // Reset scroll when changing page\n        const pageContainer = this.document.getElementById('appPageContainer');\n        if (pageContainer) {\n          pageContainer.scrollTop = 0;\n        }\n\n        /** Extract main dashboard id */\n        const id = this.route.snapshot.paramMap.get('id');\n        /** Extract query id to load template */\n        const queryId = this.route.snapshot.queryParamMap.get('id');\n        if (id) {\n          if (queryId) {\n            this.loadDashboard(id).then(() => {\n              const templates = this.dashboard?.page?.contentWithContext;\n              const type = this.contextType;\n              if (type) {\n                // Find template from parent's templates, based on query params id\n                const template = templates?.find((d) => {\n                  // If templates use reference data\n                  if (type === 'element')\n                    return (\n                      'element' in d &&\n                      d.element.toString().trim() === queryId.trim()\n                    );\n                  // If templates use resource\n                  else if (type === 'record')\n                    return (\n                      'record' in d &&\n                      d.record.toString().trim() === queryId.trim()\n                    );\n                  return false;\n                });\n\n                if (template) {\n                  // if we found the contextual dashboard, load it\n                  this.loadDashboard(template.content).then(\n                    () => (this.loading = false)\n                  );\n                } else {\n                  if (this.dashboard?.page && this.canUpdate) {\n                    this.snackBar.openSnackBar(\n                      this.translate.instant(\n                        'models.dashboard.context.notifications.creatingTemplate'\n                      )\n                    );\n                    this.dashboardService\n                      .createDashboardWithContext(\n                        this.dashboard?.page?.id as string,\n                        type, // type of context\n                        queryId // id of the context\n                      )\n                      .then(({ data }) => {\n                        if (!data?.addDashboardWithContext?.id) return;\n                        this.snackBar.openSnackBar(\n                          this.translate.instant(\n                            'models.dashboard.context.notifications.templateCreated'\n                          )\n                        );\n                        // load the contextual dashboard\n                        this.loadDashboard(\n                          data.addDashboardWithContext.id\n                        ).then(() => (this.loading = false));\n                      });\n                  }\n                }\n              } else {\n                this.loading = false;\n              }\n            });\n          } else {\n            // if there is no id, we are not on a contextual dashboard, we simply load the dashboard\n            this.loadDashboard(id).then(() => (this.loading = false));\n          }\n        }\n      });\n  }\n\n  /**\n   * Init the dashboard\n   *\n   * @param id Dashboard id\n   * @returns Promise\n   */\n  private async loadDashboard(id: string) {\n    // don't init the dashboard if the id is the same\n    if (this.dashboard?.id === id) {\n      return;\n    }\n\n    const rootElement = this.elementRef.nativeElement;\n    this.renderer.setAttribute(rootElement, 'data-dashboard-id', id);\n    this.formActive = false;\n    this.loading = true;\n    this.id = id;\n    return firstValueFrom(\n      this.apollo.query<DashboardQueryResponse>({\n        query: GET_DASHBOARD_BY_ID,\n        variables: {\n          id: this.id,\n        },\n      })\n    )\n      .then(({ data }) => {\n        if (data.dashboard) {\n          this.dashboard = data.dashboard;\n          this.gridOptions = {\n            ...this.gridOptions,\n            ...this.dashboard?.gridOptions,\n            scrollToNewItems: false,\n          };\n          this.initContext();\n          this.updateContextOptions();\n          this.canUpdate =\n            (this.dashboard?.page\n              ? this.dashboard?.page?.canUpdate\n              : this.dashboard?.step?.canUpdate) || false;\n          this.editionActive = this.canUpdate;\n\n          this.dashboardService.openDashboard(this.dashboard);\n          this.widgets = cloneDeep(\n            data.dashboard.structure\n              ?.filter((x: any) => x !== null)\n              .map((widget: any) => {\n                const contextData = this.dashboard?.contextData;\n                this.contextService.context = contextData || null;\n\n                if (!contextData) return widget;\n                // If tile has context, replace the templates with the values\n                // and keep the original, to be used for the widget settings\n                const settings = widget.settings;\n                widget.settings = this.contextService.replaceContext(settings);\n                widget.originalSettings = settings;\n                return widget;\n              }) || []\n          );\n          this.applicationId = this.dashboard.page\n            ? this.dashboard.page.application?.id\n            : this.dashboard.step\n            ? this.dashboard.step.workflow?.page?.application?.id\n            : '';\n          this.buttonActions = this.dashboard.buttons || [];\n          this.showFilter = this.dashboard.filter?.show ?? false;\n          this.contextService.isFilterEnabled.next(this.showFilter);\n          if (this.gridOptionsTimeoutListener) {\n            clearTimeout(this.gridOptionsTimeoutListener);\n          }\n          this.gridOptionsTimeoutListener = setTimeout(() => {\n            this.gridOptions = {\n              ...this.gridOptions,\n              scrollToNewItems: true,\n            };\n          }, 1000);\n        } else {\n          this.contextService.isFilterEnabled.next(false);\n          this.snackBar.openSnackBar(\n            this.translate.instant('common.notifications.accessNotProvided', {\n              type: this.translate\n                .instant('common.dashboard.one')\n                .toLowerCase(),\n              error: '',\n            }),\n            { error: true }\n          );\n          this.router.navigate(['/applications']);\n        }\n      })\n      .catch((err) => {\n        this.snackBar.openSnackBar(err.message, { error: true });\n        this.router.navigate(['/applications']);\n      });\n  }\n\n  /**\n   * Leave dashboard\n   */\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    if (this.addTimeoutListener) {\n      clearTimeout(this.addTimeoutListener);\n    }\n    if (this.gridOptionsTimeoutListener) {\n      clearTimeout(this.gridOptionsTimeoutListener);\n    }\n    localForage.removeItem(this.applicationId + 'position'); //remove temporary contextual filter data\n    localForage.removeItem(this.applicationId + 'filterStructure');\n    this.dashboardService.closeDashboard();\n  }\n\n  /**\n   * Show modal confirmation before leave the page if has changes on form\n   *\n   * @returns boolean of observable of boolean\n   */\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.widgetGridComponent && !this.widgetGridComponent?.canDeactivate) {\n      const dialogRef = this.confirmService.openConfirmModal({\n        title: this.translate.instant('pages.dashboard.update.exit'),\n        content: this.translate.instant('pages.dashboard.update.exitMessage'),\n        confirmText: this.translate.instant('components.confirmModal.confirm'),\n        confirmVariant: 'primary',\n      });\n      return dialogRef.closed.pipe(takeUntil(this.destroy$)).pipe(\n        map((confirm) => {\n          if (confirm) {\n            return true;\n          }\n          return false;\n        })\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Add a new widget to the dashboard.\n   *\n   * @param e add event\n   */\n  onAdd(e: any): void {\n    const widget = cloneDeep(e);\n    this.widgets.push(widget);\n    if (this.addTimeoutListener) {\n      clearTimeout(this.addTimeoutListener);\n    }\n    // scroll to the element once it is created\n    this.addTimeoutListener = setTimeout(() => {\n      const widgetComponents =\n        this.widgetGridComponent.widgetComponents.toArray();\n      const target = widgetComponents[widgetComponents.length - 1];\n      const el = this.document.getElementById(target.id);\n      el?.scrollIntoView({ behavior: 'smooth' });\n    }, 1000);\n  }\n\n  /**\n   * Edits the settings or display of a widget.\n   *\n   * @param e widget to save.\n   */\n  onEditTile(e: any): void {\n    switch (e.type) {\n      case 'display': {\n        this.autoSaveChanges();\n        break;\n      }\n      case 'data': {\n        // Find the widget to be edited\n        const widgetComponents =\n          this.widgetGridComponent.widgetComponents.toArray();\n        const index = widgetComponents.findIndex((v: any) => v.id === e.id);\n        if (index > -1) {\n          // Update the configuration\n          const options = this.contextService.replaceContext(\n            this.widgets[index]?.settings?.defaultLayout\n              ? {\n                  ...e.options,\n                  defaultLayout: this.widgets[index].settings.defaultLayout,\n                }\n              : e.options\n          );\n          if (options) {\n            // Save configuration\n            this.widgets[index] = {\n              ...this.widgets[index],\n              settings: options,\n            };\n            this.autoSaveChanges();\n          }\n        }\n\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Remove a widget from the dashboard.\n   *\n   * @param e delete event\n   */\n  onDeleteTile(e: any): void {\n    const widgetComponents =\n      this.widgetGridComponent.widgetComponents.toArray();\n    const targetIndex = widgetComponents.findIndex((x) => x.id === e.id);\n    if (targetIndex > -1) {\n      this.widgets.splice(targetIndex, 1);\n      this.autoSaveChanges();\n    }\n  }\n\n  /**\n   * Style a widget from the dashboard.\n   *\n   * @param e style event\n   */\n  onStyleTile(e: any): void {\n    this.layoutService.setRightSidenav({\n      component: CustomWidgetStyleComponent,\n      inputs: {\n        widgetComp: e,\n        save: (tile: any) => this.onEditTile(tile),\n      },\n    });\n    this.layoutService.closeRightSidenav = true;\n  }\n\n  /** Save the dashboard changes in the database. */\n  private autoSaveChanges(): void {\n    this.apollo\n      .mutate<EditDashboardMutationResponse>({\n        mutation: EDIT_DASHBOARD,\n        variables: {\n          id: this.id,\n          structure: this.widgets,\n        },\n      })\n      .subscribe({\n        next: ({ errors }) => {\n          this.applicationService.handleEditionMutationResponse(\n            errors,\n            this.translate.instant('common.dashboard.one')\n          );\n        },\n        complete: () => (this.loading = false),\n      });\n  }\n\n  /**\n   * Toggle visibility of form.\n   */\n  toggleFormActive(): void {\n    if (\n      this.dashboard?.page\n        ? this.dashboard.page.canUpdate\n        : this.dashboard?.step?.canUpdate\n    ) {\n      this.formActive = !this.formActive;\n    }\n  }\n\n  /**\n   * Update the name of the dashboard and the step or page linked to it.\n   *\n   * @param {string} dashboardName new dashboard name\n   */\n  saveName(dashboardName: string): void {\n    if (dashboardName && dashboardName !== this.dashboard?.name) {\n      const callback = () => {\n        this.dashboard = { ...this.dashboard, name: dashboardName };\n      };\n      if (this.contextId.value) {\n        // Seeing a template\n        this.dashboardService.editName(dashboardName, callback);\n      } else {\n        // Not part of contextual page\n        if (this.isStep) {\n          this.workflowService.updateStepName(\n            {\n              id: this.dashboard?.step?.id,\n              name: dashboardName,\n            },\n            callback\n          );\n        } else {\n          this.applicationService.updatePageName(\n            {\n              id: this.dashboard?.page?.id,\n              name: dashboardName,\n            },\n            callback\n          );\n        }\n      }\n    }\n  }\n\n  /** Display the ShareUrl modal with the route to access the dashboard. */\n  public async onShare(): Promise<void> {\n    const url = `${window.origin}/share/${this.dashboard?.id}`;\n    this.clipboard.copy(url);\n    this.snackBar.openSnackBar(\n      this.translate.instant('common.notifications.copiedToClipboard')\n    );\n  }\n\n  /** Open modal to add new button action */\n  public async onAddButtonAction() {\n    const { EditButtonActionComponent } = await import(\n      './components/edit-button-action/edit-button-action.component'\n    );\n    const dialogRef = this.dialog.open<ButtonActionT | undefined>(\n      EditButtonActionComponent\n    );\n\n    dialogRef.closed\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(async (button) => {\n        if (!button) return;\n        const currButtons =\n          (await firstValueFrom(this.dashboardService.dashboard$))?.buttons ||\n          [];\n\n        this.dashboardService.saveDashboardButtons([...currButtons, button]);\n        this.buttonActions.push(button);\n      });\n  }\n\n  /** Opens modal for context dataset selection */\n  public async selectContextDatasource() {\n    const currContext =\n      (await firstValueFrom(this.dashboardService.dashboard$))?.page?.context ??\n      null;\n\n    const { ContextDatasourceComponent } = await import(\n      './components/context-datasource/context-datasource.component'\n    );\n    const dialogRef = this.dialog.open(ContextDatasourceComponent, {\n      data: currContext,\n    });\n\n    const parentDashboardId = this.route.snapshot.paramMap.get('id');\n\n    dialogRef.closed\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(async (context: any) => {\n        if (context) {\n          if (isEqual(context, currContext)) return;\n\n          await this.dashboardService.updateContext(context);\n          this.dashboard =\n            (await firstValueFrom(this.dashboardService.dashboard$)) ||\n            undefined;\n\n          const urlArr = this.router.url.split('/');\n\n          // load the linked data\n          this.updateContextOptions();\n          // go the the parent dashboard\n          urlArr[urlArr.length - 1] = `${parentDashboardId}`;\n          this.router.navigateByUrl(urlArr.join('/'));\n        }\n      });\n  }\n\n  /**\n   * Update the context options.\n   * Loads elements from reference data or records from resource.\n   */\n  private updateContextOptions() {\n    const context = this.dashboard?.page?.context;\n    if (!context) return;\n\n    if ('resource' in context) {\n      this.recordsQuery =\n        this.apollo.watchQuery<ResourceRecordsNodesQueryResponse>({\n          query: GET_RESOURCE_RECORDS,\n          variables: {\n            first: ITEMS_PER_PAGE,\n            id: context.resource,\n          },\n        });\n    }\n\n    if ('refData' in context) {\n      this.refDataService.loadReferenceData(context.refData).then((refData) => {\n        this.refDataValueField = refData.valueField || '';\n        this.refDataService.fetchItems(refData).then((items) => {\n          this.refDataElements = items;\n        });\n      });\n    }\n  }\n\n  /**\n   * Handle dashboard context change by simply updating the url.\n   *\n   * @param value id of the element or record\n   */\n  private async onContextChange(value: string | number | undefined | null) {\n    if (\n      !this.dashboard?.id ||\n      !this.dashboard?.page?.id ||\n      !this.dashboard.page.context ||\n      !this.contextType\n    )\n      return;\n    if (value) {\n      this.router.navigate(['.'], {\n        relativeTo: this.route,\n        queryParams: {\n          id: value,\n        },\n      });\n      // const urlArr = this.router.url.split('/');\n      // urlArr[urlArr.length - 1] = `${parentDashboardId}?id=${value}`;\n      // this.router.navigateByUrl(urlArr.join('/'));\n    } else {\n      this.snackBar.openSnackBar(\n        this.translate.instant(\n          'models.dashboard.context.notifications.loadDefault'\n        )\n      );\n      this.router.navigate(['.'], { relativeTo: this.route });\n      // const urlArr = this.router.url.split('/');\n      // urlArr[urlArr.length - 1] = parentDashboardId;\n      // this.router.navigateByUrl(urlArr.join('/'));\n    }\n  }\n\n  /** Initializes the dashboard context */\n  private initContext() {\n    if (!this.dashboard?.page?.context || !this.dashboard?.id) return;\n    // Checks if the dashboard has context attached to it\n    const contentWithContext = this.dashboard?.page?.contentWithContext || [];\n    const id = this.dashboard.id;\n    const dContext = contentWithContext.find((c) => c.content === id);\n\n    if (!dContext) return;\n\n    // If it has updated the form\n    if ('element' in dContext) {\n      this.contextId.setValue(dContext.element, { emitEvent: false });\n    } else if ('record' in dContext) {\n      // Get record by id\n      this.apollo\n        .query<RecordQueryResponse>({\n          query: GET_RECORD_BY_ID,\n          variables: {\n            id: dContext.record,\n          },\n        })\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((res) => {\n          if (res?.data) {\n            this.contextRecord = res.data.record;\n            this.contextId.setValue(dContext.record, { emitEvent: false });\n          }\n        });\n    }\n  }\n\n  /**\n   * Reorders button actions.\n   *\n   * @param event Drop event\n   */\n  public onButtonActionDrop(event: CdkDragDrop<typeof this.buttonActions>) {\n    if (event.previousIndex === event.currentIndex) return;\n\n    moveItemInArray(\n      this.buttonActions,\n      event.previousIndex,\n      event.currentIndex\n    );\n\n    this.dashboardService.saveDashboardButtons(this.buttonActions);\n  }\n\n  /**\n   * Open settings modal.\n   */\n  public async onOpenSettings(): Promise<void> {\n    const { ViewSettingsModalComponent } = await import(\n      '../../../components/view-settings-modal/view-settings-modal.component'\n    );\n    const dialogRef = this.dialog.open(ViewSettingsModalComponent, {\n      data: {\n        type: this.isStep ? 'step' : 'page',\n        applicationId: this.applicationId,\n        page: this.isStep ? undefined : this.dashboard?.page,\n        step: this.isStep ? this.dashboard?.step : undefined,\n        visible: this.dashboard?.page?.visible,\n        icon: this.isStep\n          ? this.dashboard?.step?.icon\n          : this.dashboard?.page?.icon,\n        accessData: {\n          access: this.dashboard?.permissions,\n          application: this.applicationId,\n          objectTypeName: this.translate.instant(\n            'common.' + this.isStep ? 'step' : 'page' + '.one'\n          ),\n        },\n        canUpdate: this.dashboard?.page\n          ? this.dashboard?.page.canUpdate\n          : this.dashboard?.step\n          ? this.dashboard?.step.canUpdate\n          : false,\n        dashboard: this.dashboard,\n      },\n    });\n    // Subscribes to settings updates\n    const subscription = dialogRef.componentInstance?.onUpdate\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((updates: any) => {\n        if (updates) {\n          if (this.isStep) {\n            this.dashboard = {\n              ...this.dashboard,\n              ...(updates.permissions && updates),\n              ...(updates.gridOptions && updates),\n              ...(updates.filter && updates),\n              step: {\n                ...this.dashboard?.step,\n                ...(!updates.permissions && !updates.filter && updates),\n              },\n            };\n          } else {\n            this.dashboard = {\n              ...this.dashboard,\n              ...(updates.permissions && updates),\n              ...(updates.gridOptions && updates),\n              ...(updates.filter && updates),\n              page: {\n                ...this.dashboard?.page,\n                ...(!updates.permissions && !updates.filter && updates),\n              },\n            };\n          }\n          this.gridOptions = {\n            ...this.gridOptions,\n            ...this.dashboard?.gridOptions,\n          };\n\n          if (updates.filter) {\n            this.showFilter = updates.filter.show;\n            this.contextService.isFilterEnabled.next(this.showFilter);\n          }\n        }\n      });\n    // Unsubscribe to dialog onUpdate event\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      subscription?.unsubscribe();\n    });\n  }\n\n  /**\n   * Update query based on text search.\n   *\n   * @param search Search text from the graphql select\n   */\n  public onSearchChange(search: string): void {\n    const context = this.dashboard?.page?.context;\n    if (!context) return;\n    if ('resource' in context) {\n      this.recordsQuery.refetch({\n        variables: {\n          first: ITEMS_PER_PAGE,\n          id: context.resource,\n        },\n        filter: {\n          logic: 'and',\n          filters: [\n            {\n              field: context.displayField,\n              operator: 'contains',\n              value: search,\n            },\n          ],\n        },\n      });\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Back-office Dashboard page.\nEdition of the dashboard ( if user has permission ).</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "workflowService",
                        "type": "WorkflowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dashboardService",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "contextService",
                        "type": "ContextService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "refDataService",
                        "type": "ReferenceDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "layoutService",
                        "type": "UILayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "clipboard",
                        "type": "Clipboard",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 135,
                "rawdescription": "\n\nBack-office Dashboard page.\nEdition of the dashboard ( if user has permission ).\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 4216,
                            "end": 4234,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4210,
                            "end": 4215,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4274,
                            "end": 4289,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "workflowService"
                        },
                        "type": "WorkflowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4268,
                            "end": 4273,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared workflow service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4326,
                            "end": 4332,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4320,
                            "end": 4325,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4360,
                            "end": 4365,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4354,
                            "end": 4359,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular activated route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4402,
                            "end": 4408,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4396,
                            "end": 4401,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4436,
                            "end": 4442,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4430,
                            "end": 4435,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4470,
                            "end": 4478,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4464,
                            "end": 4469,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4515,
                            "end": 4531,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dashboardService"
                        },
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4509,
                            "end": 4514,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared dashboard service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4569,
                            "end": 4578,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4563,
                            "end": 4568,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4617,
                            "end": 4631,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4611,
                            "end": 4616,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4667,
                            "end": 4681,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "contextService"
                        },
                        "type": "ContextService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4661,
                            "end": 4666,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dashboard context service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4720,
                            "end": 4734,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "refDataService"
                        },
                        "type": "ReferenceDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4714,
                            "end": 4719,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared reference data service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4777,
                            "end": 4785,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "renderer"
                        },
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4771,
                            "end": 4776,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular renderer</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4815,
                            "end": 4825,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "elementRef"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4809,
                            "end": 4814,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular element ref</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4858,
                            "end": 4871,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "layoutService"
                        },
                        "type": "UILayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4852,
                            "end": 4857,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared layout service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4906,
                            "end": 4914,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "document"
                        },
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4900,
                            "end": 4905,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Document</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4936,
                            "end": 4945,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "clipboard"
                        },
                        "type": "Clipboard",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4930,
                            "end": 4935,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular clipboard service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "contextType": {
                    "name": "contextType",
                    "getSignature": {
                        "name": "contextType",
                        "type": "",
                        "returnType": "",
                        "line": 124,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 3756,
                                "end": 3789,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 3757,
                                    "end": 3764,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>type of context element</p>\n"
                            }
                        ]
                    }
                },
                "isStep": {
                    "name": "isStep",
                    "getSignature": {
                        "name": "isStep",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 133,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 3978,
                                "end": 4017,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 3979,
                                    "end": 3986,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>is dashboard a step or a page</p>\n"
                            }
                        ]
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "DashboardComponent-2",
            "templateData": "<shared-dashboard-filter\n  *ngIf=\"showFilter && !isFullScreen\"\n  [editable]=\"true\"\n  [isFullScreen]=\"isFullScreen\"\n  [variant]=\"dashboard?.filter?.variant ?? 'default'\"\n  [closable]=\"dashboard?.filter?.closable ?? false\"\n></shared-dashboard-filter>\n<!-- We use a div so we can have a standard background when seeing the dashboard on fullscreen -->\n<div\n  [ngClass]=\"{\n    'py-8 px-6 h-full bg-white overflow-y-auto overflow-x-hidden': isFullScreen\n  }\"\n>\n  <shared-dashboard-filter\n    *ngIf=\"showFilter && isFullScreen\"\n    [editable]=\"true\"\n    [isFullScreen]=\"isFullScreen\"\n    [variant]=\"dashboard?.filter?.variant ?? 'default'\"\n    [closable]=\"dashboard?.filter?.closable ?? false\"\n  ></shared-dashboard-filter>\n  <ng-container\n    sharedFullScreen\n    [(isFullScreenMode)]=\"isFullScreen\"\n    *sharedSkeleton=\"\n      loading;\n      repeat: 1;\n      height: '32px';\n      width: '120px';\n      shape: 'rectangle'\n    \"\n  >\n    <!-- Dashboard options -->\n    <ng-container *ngIf=\"dashboard\">\n      <div\n        id=\"dashboard-header\"\n        class=\"flex flex-wrap items-center justify-between mb-6 gap-4\"\n      >\n        <!-- Dashboard title -->\n        <div class=\"flex items-center gap-1\">\n          <shared-editable-text\n            [text]=\"dashboard.name\"\n            [canEdit]=\"canUpdate\"\n            (onChange)=\"saveName($event)\"\n            (formActiveEvent)=\"formActive = $event\"\n          >\n            <h1 class=\"!m-0 overflow-hidden text-ellipsis\">\n              {{ dashboard.name }}\n            </h1>\n          </shared-editable-text>\n          <!-- Settings -->\n          <ui-button\n            *ngIf=\"!formActive\"\n            variant=\"grey\"\n            (click)=\"onOpenSettings()\"\n            [isIcon]=\"true\"\n            icon=\"settings\"\n            [uiTooltip]=\"'common.settings' | translate\"\n          ></ui-button>\n          <ui-button\n            *ngIf=\"canUpdate\"\n            [icon]=\"editionActive ? 'edit' : 'preview'\"\n            (click)=\"editionActive = !editionActive\"\n            >{{\n              (editionActive\n                ? 'components.application.dashboard.enterPreviewMode'\n                : 'components.application.dashboard.enterEditMode'\n              ) | translate\n            }}</ui-button\n          >\n        </div>\n        <!-- Other dashboard settings -->\n        <div\n          class=\"flex items-center gap-1\"\n          *ngIf=\"!formActive\"\n          cdkDropList\n          (cdkDropListDropped)=\"onButtonActionDrop($event)\"\n        >\n          <!-- Button actions -->\n          <shared-button-action\n            [buttonActions]=\"buttonActions\"\n            [dashboard]=\"dashboard\"\n            [canUpdate]=\"canUpdate\"\n          ></shared-button-action>\n\n          <!-- Fullscreen -->\n          <ui-button\n            variant=\"grey\"\n            [isIcon]=\"true\"\n            icon=\"{{ isFullScreen ? 'fullscreen_exit' : 'fullscreen' }}\"\n            (click)=\"isFullScreen = !isFullScreen\"\n            [uiTooltip]=\"\n              (isFullScreen ? 'common.exitFullscreen' : 'common.openFullScreen')\n                | translate\n            \"\n          >\n          </ui-button>\n          <!-- Context -->\n          <ui-button\n            variant=\"grey\"\n            [isIcon]=\"true\"\n            [icon]=\"dashboard.page?.context ? 'cached' : 'add'\"\n            (click)=\"selectContextDatasource()\"\n            [uiTooltip]=\"\n              (dashboard.page?.context\n                ? 'models.dashboard.context.datasource.update'\n                : 'models.dashboard.context.datasource.set'\n              ) | translate\n            \"\n          >\n          </ui-button>\n          <!-- More options -->\n          <ui-button\n            variant=\"grey\"\n            [isIcon]=\"true\"\n            icon=\"more_vert\"\n            [uiMenuTriggerFor]=\"menu\"\n            [uiTooltip]=\"'common.options' | translate\"\n          >\n          </ui-button>\n          <ui-menu #menu>\n            <button uiMenuItem (click)=\"onAddButtonAction()\">\n              <ui-icon icon=\"touch_app\" variant=\"grey\"></ui-icon>\n              {{ 'models.dashboard.buttonActions.add' | translate }}\n            </button>\n            <button uiMenuItem (click)=\"onShare()\">\n              <ui-icon icon=\"share\" variant=\"grey\"></ui-icon>\n              {{ 'models.dashboard.share' | translate }}\n            </button>\n          </ui-menu>\n        </div>\n      </div>\n      <ng-container *ngIf=\"dashboard.page?.context\">\n        <ui-alert *ngIf=\"!contextRecord\" class=\"mb-4\">{{\n          'models.dashboard.context.edition.template' | translate\n        }}</ui-alert>\n        <ui-alert *ngIf=\"contextRecord\" class=\"mb-4\">{{\n          'models.dashboard.context.edition.element' | translate\n        }}</ui-alert>\n      </ng-container>\n      <span>\n        <!-- Selection of record, to see dashboard per record -->\n        <div\n          uiFormFieldDirective\n          *ngIf=\"\n            dashboard.page &&\n            dashboard.page.context &&\n            $any(dashboard.page.context).resource &&\n            recordsQuery\n          \"\n        >\n          <label>{{ 'common.record.one' | translate }}</label>\n          <ui-graphql-select\n            [query]=\"recordsQuery\"\n            [formControl]=\"contextId\"\n            [filterable]=\"true\"\n            (searchChange)=\"onSearchChange($event)\"\n            path=\"records\"\n            valueField=\"id\"\n            textField=\"data.{{ dashboard.page.context.displayField }}\"\n            [selectedElements]=\"contextRecord ? [contextRecord] : []\"\n          >\n          </ui-graphql-select>\n        </div>\n        <!-- Selection of element from reference data -->\n        <div\n          uiFormFieldDirective\n          [outline]=\"false\"\n          *ngIf=\"\n            dashboard.page &&\n            dashboard.page.context &&\n            $any(dashboard.page.context).refData\n          \"\n        >\n          <label>{{\n            'models.dashboard.context.refData.element' | translate\n          }}</label>\n          <ui-select-menu [formControl]=\"contextId\" [filterable]=\"true\">\n            <ui-select-option\n              *ngFor=\"let element of refDataElements\"\n              [value]=\"element[refDataValueField]\"\n            >\n              {{ element[dashboard.page.context.displayField] }}\n            </ui-select-option>\n          </ui-select-menu>\n        </div>\n      </span>\n    </ng-container>\n  </ng-container>\n  <!-- Widgets -->\n  <shared-widget-grid\n    [loading]=\"loading\"\n    [widgets]=\"widgets\"\n    [options]=\"gridOptions\"\n    [canUpdate]=\"(canUpdate && editionActive) || false\"\n    (edit)=\"onEditTile($event)\"\n    (delete)=\"onDeleteTile($event)\"\n    (style)=\"onStyleTile($event)\"\n    (changeStep)=\"changeStep.emit($event)\"\n    (add)=\"onAdd($event)\"\n  ></shared-widget-grid>\n</div>\n"
        },
        {
            "name": "DashboardFilterSettingsComponent",
            "id": "component-DashboardFilterSettingsComponent-3c1868ddffdd53b964b9fbdd799ef47c83ecbcdcc8c018882e17e02e2469934cf93f82757d974c6207e1d4b77e4e02dcbcd30b6a92506d6ade75af12d2455265",
            "file": "apps/back-office/src/app/components/dashboard-filter-settings/dashboard-filter-settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard-filter-settings",
            "styleUrls": [
                "./dashboard-filter-settings.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard-filter-settings.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "dashboard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nCurrent dashboard",
                    "description": "<p>Current dashboard</p>\n",
                    "line": 56,
                    "type": "Dashboard",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "contextService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ContextService",
                    "optional": false,
                    "description": "Context service",
                    "line": 78,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Reactive Form</p>\n",
                    "line": 58,
                    "rawdescription": "\nReactive Form",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openEditStructure",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>On open edit filter modal, listen to structure changes</p>\n",
                    "line": 60,
                    "rawdescription": "\nOn open edit filter modal, listen to structure changes",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "positions",
                    "defaultValue": "['top', 'right', 'bottom', 'left']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Available positions</p>\n",
                    "line": 62,
                    "rawdescription": "\nAvailable positions",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createSettingsForm",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreate the settings form\n\n",
                    "description": "<p>Create the settings form</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 3040,
                                "end": 3047,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Form group</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggles the filter for the current dashboard.\n\n",
                    "description": "<p>Toggles the filter for the current dashboard.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3518,
                                "end": 3523,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3512,
                                "end": 3517,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Value to activate or deactivate the filter</p>\n"
                        }
                    ]
                },
                {
                    "name": "onEditStructure",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCall context service onEditFilter method.\n",
                    "description": "<p>Call context service onEditFilter method.</p>\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ToggleModule",
                    "type": "module"
                },
                {
                    "name": "DialogModule",
                    "type": "module"
                },
                {
                    "name": "FormWrapperModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "UiModule",
                    "type": "module"
                },
                {
                    "name": "TooltipModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "IconModule",
                    "type": "module"
                },
                {
                    "name": "SelectMenuModule",
                    "type": "module"
                }
            ],
            "description": "<p>Settings filter of dashboards</p>\n",
            "rawdescription": "\n\nSettings filter of dashboards\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Optional } from '@angular/core';\nimport {\n  ContextService,\n  Dashboard,\n  DashboardService,\n  EditDashboardMutationResponse,\n  UnsubscribeComponent,\n} from '@oort-front/shared';\nimport {\n  FormWrapperModule,\n  ToggleModule,\n  DialogModule,\n  TooltipModule,\n  ButtonModule,\n  IconModule,\n  SelectMenuModule,\n} from '@oort-front/ui';\nimport { EDIT_DASHBOARD } from '../../dashboard/pages/dashboard/graphql/mutations';\nimport { Apollo } from 'apollo-angular';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { FormBuilder } from '@angular/forms';\nimport { takeUntil } from 'rxjs';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '@oort-front/ui';\nimport get from 'lodash/get';\nimport { ViewSettingsModalComponent } from '../view-settings-modal/view-settings-modal.component';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Settings filter of dashboards\n */\n@Component({\n  selector: 'app-dashboard-filter-settings',\n  standalone: true,\n  templateUrl: './dashboard-filter-settings.component.html',\n  styleUrls: ['./dashboard-filter-settings.component.scss'],\n  imports: [\n    CommonModule,\n    ToggleModule,\n    DialogModule,\n    FormWrapperModule,\n    ReactiveFormsModule,\n    UiModule,\n    TooltipModule,\n    TranslateModule,\n    ButtonModule,\n    IconModule,\n    SelectMenuModule,\n  ],\n})\nexport class DashboardFilterSettingsComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  /** Current dashboard */\n  @Input() dashboard!: Dashboard;\n  /** Reactive Form */\n  public formGroup!: ReturnType<typeof this.createSettingsForm>;\n  /** On open edit filter modal, listen to structure changes */\n  public openEditStructure = false;\n  /** Available positions */\n  public positions = ['top', 'right', 'bottom', 'left'];\n\n  /**\n   *  Settings filter of dashboards\n   *\n   * @param parentComponent Parent view settings modal component\n   * @param apollo Apollo service\n   * @param dashboardService Dashboard service\n   * @param contextService Context service\n   * @param translate Translate service\n   * @param fb Form builder\n   */\n  constructor(\n    @Optional() private parentComponent: ViewSettingsModalComponent,\n    private apollo: Apollo,\n    private dashboardService: DashboardService,\n    public contextService: ContextService,\n    private translate: TranslateService,\n    private fb: FormBuilder\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    // erase the option to show the filter in the top menu\n    this.formGroup = this.createSettingsForm();\n\n    this.formGroup.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => {\n        this.onEdit(value);\n      });\n\n    this.contextService.filterStructure$.subscribe((value) => {\n      this.formGroup.controls.structure.setValue(value, { emitEvent: false });\n    });\n  }\n\n  /**\n   * Call context service onEditFilter method.\n   */\n  public onEditStructure() {\n    this.contextService.onEditFilter();\n  }\n\n  /**\n   * Create the settings form\n   *\n   * @returns Form group\n   */\n  private createSettingsForm() {\n    return this.fb.group({\n      show: get(this.dashboard, 'filter.show', false),\n      variant: get(this.dashboard, 'filter.variant', 'modern'),\n      closable: get(this.dashboard, 'filter.closable', false),\n      structure: get(this.dashboard, 'filter.structure'),\n      position: get(this.dashboard, 'filter.position', 'bottom'),\n    });\n  }\n\n  /**\n   * Toggles the filter for the current dashboard.\n   *\n   * @param value Value to activate or deactivate the filter\n   */\n  onEdit(value: any): void {\n    this.apollo\n      .mutate<EditDashboardMutationResponse>({\n        mutation: EDIT_DASHBOARD,\n        variables: {\n          id: this.dashboard.id,\n          filter: {\n            ...this.dashboard.filter,\n            ...value,\n          },\n        },\n      })\n      .subscribe({\n        next: ({ errors }) => {\n          this.dashboardService.handleEditionMutationResponse(\n            errors,\n            this.translate.instant('common.dashboard.one')\n          );\n          if (!errors) {\n            const filter = value;\n            this.dashboard = {\n              ...this.dashboard,\n              filter,\n            };\n            // Updates parent component\n            const updates = { filter };\n            this.parentComponent.onUpdate.emit(updates);\n          }\n        },\n        complete: () => {\n          this.contextService.isFilterEnabled.next(value.show);\n        },\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dashboard-filter-settings.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p> Settings filter of dashboards</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parentComponent",
                        "type": "ViewSettingsModalComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dashboardService",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "contextService",
                        "type": "ContextService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 62,
                "rawdescription": "\n\n Settings filter of dashboards\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1889,
                            "end": 1904,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "parentComponent"
                        },
                        "type": "ViewSettingsModalComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1883,
                            "end": 1888,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Parent view settings modal component</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1954,
                            "end": 1960,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1948,
                            "end": 1953,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1988,
                            "end": 2004,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dashboardService"
                        },
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1982,
                            "end": 1987,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dashboard service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2035,
                            "end": 2049,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "contextService"
                        },
                        "type": "ContextService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2029,
                            "end": 2034,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Context service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2078,
                            "end": 2087,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2072,
                            "end": 2077,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2118,
                            "end": 2120,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2112,
                            "end": 2117,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Form builder</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"formGroup\" class=\"flex gap-4 flex-col\">\n  <!-- Filter Variant -->\n  <div uiFormFieldDirective [outline]=\"false\">\n    <label>{{ 'models.dashboard.filterVariant.title' | translate }}</label>\n    <ui-select-menu\n      formControlName=\"variant\"\n      [placeholder]=\"\n        'models.dashboard.filterVariant.variantsOptions.selectOrigin'\n          | translate\n      \"\n    >\n      <ui-select-option value=\"modern\">\n        {{\n          'models.dashboard.filterVariant.variantsOptions.variant_modern'\n            | translate\n        }}\n      </ui-select-option>\n      <ui-select-option value=\"default\">\n        {{\n          'models.dashboard.filterVariant.variantsOptions.variant_default'\n            | translate\n        }}\n      </ui-select-option>\n    </ui-select-menu>\n  </div>\n  <!-- Filter structure (survey) -->\n  <ui-button class=\"!contents\" variant=\"default\" (click)=\"onEditStructure()\">\n    {{ 'components.application.dashboard.editFilter' | translate }}\n  </ui-button>\n  <!-- Activate filtering -->\n  <ui-toggle formControlName=\"show\">\n    <ng-container ngProjectAs=\"label\">{{\n      'models.dashboard.activateFiltering' | translate\n    }}</ng-container>\n  </ui-toggle>\n  <!-- Closable status -->\n  <ui-toggle formControlName=\"closable\">\n    <ng-container ngProjectAs=\"label\"\n      >{{ 'models.dashboard.closable' | translate\n      }}<ui-icon\n        class=\"ml-1 cursor-help self-center\"\n        variant=\"grey\"\n        [size]=\"18\"\n        icon=\"info_outline\"\n        [uiTooltip]=\"'models.dashboard.tooltip.filter.closable' | translate\"\n      ></ui-icon\n    ></ng-container>\n  </ui-toggle>\n  <div uiFormFieldDirective>\n    <ui-select-menu\n      formControlName=\"position\"\n      [customTemplate]=\"{\n        template: positionTmpl,\n        context: { $implicit: formGroup.get('position')!.value }\n      }\"\n    >\n      <ui-select-option *ngFor=\"let position of positions\" [value]=\"position\">\n        <ng-container\n          *ngTemplateOutlet=\"positionTmpl; context: { $implicit: position }\"\n        ></ng-container>\n      </ui-select-option>\n    </ui-select-menu>\n    <ui-icon\n      class=\"cursor-help\"\n      uiSuffix\n      [uiTooltip]=\"'models.dashboard.tooltip.filter.position' | translate\"\n      variant=\"grey\"\n      [size]=\"18\"\n      icon=\"info_outline\"\n    ></ui-icon>\n  </div>\n</form>\n\n<ng-template #positionTmpl let-position>\n  <div class=\"flex items-center gap-1\">\n    <ui-icon [icon]=\"position + '_panel_open'\" [isOutlined]=\"true\"></ui-icon\n    >{{\n      'components.application.dashboard.filter.filterPosition.' + position\n        | translate\n    }}\n  </div>\n</ng-template>\n"
        },
        {
            "name": "DataPresentationListComponent",
            "id": "component-DataPresentationListComponent-ff084d0bedb335e39bad2119c9639f849b1551ac6981307be6bc7210ad5b89eed429b2c49aad5ca53c27d2ceb338e7ef2ba110460698c5d4b566c7284c37df61",
            "file": "apps/back-office/src/app/dashboard/pages/resource/components/data-presentation-list/data-presentation-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-data-presentation-list",
            "styleUrls": [
                "./data-presentation-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./data-presentation-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "addNewItemButtonMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMessage for the add new item button\n",
                    "description": "<p>Message for the add new item button</p>\n",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "canUpdate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCan update state\n",
                    "description": "<p>Can update state</p>\n",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "dataSource",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAggregation or layout data source\n",
                    "description": "<p>Aggregation or layout data source</p>\n",
                    "line": 62,
                    "type": "Array<Aggregation | Layout>",
                    "decorators": []
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nColumns to display\n",
                    "description": "<p>Columns to display</p>\n",
                    "line": 66,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "emptyDataListMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMessage for the empty data list\n",
                    "description": "<p>Message for the empty data list</p>\n",
                    "line": 50,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLoading state\n",
                    "description": "<p>Loading state</p>\n",
                    "line": 54,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "itemAction",
                    "defaultValue": "new EventEmitter<{\n    type: 'add' | 'edit' | 'delete';\n    item: Aggregation | Layout | null | undefined;\n  }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter for the item action\n",
                    "description": "<p>Event emitter for the item action</p>\n",
                    "line": 71,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "triggerAction",
                    "args": [
                        {
                            "name": "type",
                            "type": "\"add\" | \"edit\" | \"delete\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "Aggregation | Layout | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTrigger action for the current items\n\n",
                    "description": "<p>Trigger action for the current items</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1971,
                                "end": 1975,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "type"
                            },
                            "type": "\"add\" | \"edit\" | \"delete\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1965,
                                "end": 1970,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>type of action, add, edit, delete</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2022,
                                "end": 2026,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "item"
                            },
                            "type": "Aggregation | Layout | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 2016,
                                "end": 2021,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>aggregation item for the given action type</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "IconModule",
                    "type": "module"
                },
                {
                    "name": "DividerModule",
                    "type": "module"
                },
                {
                    "name": "TableModule",
                    "type": "module"
                },
                {
                    "name": "EmptyModule",
                    "type": "module"
                },
                {
                    "name": "MenuModule",
                    "type": "module"
                },
                {
                    "name": "SkeletonTableModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "TooltipModule",
                    "type": "module"
                },
                {
                    "name": "DateModule",
                    "type": "module"
                }
            ],
            "description": "<p>Data presentation list component to display resource layout and aggregation tables</p>\n",
            "rawdescription": "\n\nData presentation list component to display resource layout and aggregation tables\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  Aggregation,\n  DateModule,\n  EmptyModule,\n  Layout,\n  SkeletonTableModule,\n} from '@oort-front/shared';\nimport {\n  ButtonModule,\n  DividerModule,\n  IconModule,\n  MenuModule,\n  TableModule,\n  TooltipModule,\n} from '@oort-front/ui';\n\n/**\n * Data presentation list component to display resource layout and aggregation tables\n */\n@Component({\n  selector: 'app-data-presentation-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    IconModule,\n    DividerModule,\n    TableModule,\n    EmptyModule,\n    MenuModule,\n    SkeletonTableModule,\n    TranslateModule,\n    TooltipModule,\n    DateModule,\n  ],\n  templateUrl: './data-presentation-list.component.html',\n  styleUrls: ['./data-presentation-list.component.scss'],\n})\nexport class DataPresentationListComponent {\n  /**\n   * Message for the add new item button\n   */\n  @Input() addNewItemButtonMessage = '';\n  /**\n   * Message for the empty data list\n   */\n  @Input() emptyDataListMessage = '';\n  /**\n   * Loading state\n   */\n  @Input() loading = true;\n  /**\n   * Can update state\n   */\n  @Input() canUpdate = false;\n  /**\n   * Aggregation or layout data source\n   */\n  @Input() dataSource: Array<Aggregation | Layout> = [];\n  /**\n   * Columns to display\n   */\n  @Input() displayedColumns: string[] = [];\n\n  /**\n   * Event emitter for the item action\n   */\n  @Output() itemAction: EventEmitter<{\n    type: 'add' | 'edit' | 'delete';\n    item: Aggregation | Layout | null | undefined;\n  }> = new EventEmitter<{\n    type: 'add' | 'edit' | 'delete';\n    item: Aggregation | Layout | null | undefined;\n  }>();\n\n  /** @returns True if the dataSource tab is empty */\n  get empty(): boolean {\n    return !this.loading && this.dataSource.length === 0;\n  }\n\n  /**\n   * Trigger action for the current items\n   *\n   * @param type type of action, add, edit, delete\n   * @param item aggregation item for the given action type\n   */\n  triggerAction(\n    type: 'add' | 'edit' | 'delete',\n    item?: Aggregation | Layout | null | undefined\n  ) {\n    this.itemAction.emit({ type, item });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding-top: 16px;\n}\n",
                    "styleUrl": "./data-presentation-list.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "empty": {
                    "name": "empty",
                    "getSignature": {
                        "name": "empty",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 80,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 1770,
                                "end": 1815,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 1771,
                                    "end": 1778,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>True if the dataSource tab is empty</p>\n"
                            }
                        ]
                    }
                }
            },
            "templateData": "<ng-container *ngIf=\"!loading; else loadingTmpl\">\n  <ng-container *ngIf=\"!empty\">\n    <ng-container *ngTemplateOutlet=\"newData\"> </ng-container>\n  </ng-container>\n  <ng-template #newData>\n    <div class=\"self-end\">\n      <ui-button\n        variant=\"primary\"\n        category=\"secondary\"\n        (click)=\"triggerAction('add')\"\n      >\n        {{ addNewItemButtonMessage | translate }}</ui-button\n      >\n    </div>\n  </ng-template>\n  <ng-container *ngIf=\"!empty; else emptyTmpl\">\n    <!-- Table container -->\n    <div class=\"overflow-x-hidden shadow-2lg\">\n      <!-- Table scroll container -->\n      <div class=\"overflow-x-auto\">\n        <table cdk-table uiTableWrapper [dataSource]=\"dataSource\">\n          <ng-container cdkColumnDef=\"name\">\n            <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n              {{ 'common.name' | translate }}\n            </th>\n            <td\n              uiCell\n              *cdkCellDef=\"let element\"\n              class=\"!text-gray-900 !font-medium max-w-[30vw]\"\n            >\n              {{ element.name }}\n            </td>\n          </ng-container>\n\n          <ng-container cdkColumnDef=\"createdAt\">\n            <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n              {{ 'common.createdOn' | translate }}\n            </th>\n            <td uiCell *cdkCellDef=\"let element\">\n              {{ element.createdAt | sharedDate }}\n            </td>\n          </ng-container>\n\n          <ng-container cdkColumnDef=\"_actions\" [stickyEnd]=\"true\">\n            <th uiCellHeader *cdkHeaderCellDef scope=\"col\" class=\"w-16\"></th>\n            <td uiCell *cdkCellDef=\"let element\">\n              <ui-button\n                [isIcon]=\"true\"\n                icon=\"more_vert\"\n                [uiMenuTriggerFor]=\"resMenu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"!canUpdate\"\n                [uiTooltip]=\"'common.actions' | translate\"\n              >\n              </ui-button>\n              <ui-menu #resMenu>\n                <button uiMenuItem (click)=\"triggerAction('edit', element)\">\n                  <ui-icon icon=\"edit\" variant=\"grey\"></ui-icon>\n                  {{ 'common.edit' | translate }}\n                </button>\n                <ui-divider class=\"py-1\"></ui-divider>\n                <button uiMenuItem (click)=\"triggerAction('delete', element)\">\n                  <ui-icon icon=\"delete\" variant=\"danger\"></ui-icon>\n                  {{ 'common.delete' | translate }}\n                </button>\n              </ui-menu>\n            </td>\n          </ng-container>\n\n          <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n          <tr cdk-row *cdkRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n      </div>\n    </div>\n    <!-- Pagination -->\n    <ng-content select=\"pagination\"></ng-content>\n  </ng-container>\n  <ng-template #emptyTmpl>\n    <!-- Empty indicator -->\n    <shared-empty\n      [title]=\"emptyDataListMessage | translate\"\n      [footerTemplate]=\"newData\"\n    ></shared-empty>\n  </ng-template>\n</ng-container>\n<ng-template #loadingTmpl>\n  <shared-skeleton-table\n    [columns]=\"['common.name', 'common.createdOn']\"\n    [actions]=\"true\"\n  >\n  </shared-skeleton-table>\n</ng-template>\n"
        },
        {
            "name": "DuplicateApplicationModalComponent",
            "id": "component-DuplicateApplicationModalComponent-70712791f009b714237f47afc6ee781834b004efbd38f8e6dbb9186742acb39dd0ca27cd50191cdedaba7652a11ccb54a166b346f6c9268dd49a970dc0d98273",
            "file": "apps/back-office/src/app/components/duplicate-application-modal/duplicate-application-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-duplicate-application-modal",
            "styleUrls": [
                "./duplicate-application-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./duplicate-application-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentApp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Application",
                    "optional": false,
                    "description": "<p>Application to duplicate</p>\n",
                    "line": 42,
                    "rawdescription": "\nApplication to duplicate",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "Injected dialog data",
                    "line": 66,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogRef<DuplicateApplicationModalComponent>",
                    "optional": false,
                    "description": "Dialog ref",
                    "line": 64,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "duplicateForm",
                    "defaultValue": "this.fb.group({\n    name: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Duplication form group</p>\n",
                    "line": 44,
                    "rawdescription": "\nDuplication form group",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading indicator</p>\n",
                    "line": 48,
                    "rawdescription": "\nLoading indicator",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onDuplicate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit duplicate application form.\nSend mutation.\n",
                    "description": "<p>Submit duplicate application form.\nSend mutation.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "FormWrapperModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "DialogModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "<p>Duplicate application component (modal)</p>\n",
            "rawdescription": "\n\nDuplicate application component (modal)\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Component, Inject } from '@angular/core';\nimport { DUPLICATE_APPLICATION } from './graphql/mutations';\nimport {\n  Application,\n  DuplicateApplicationMutationResponse,\n  SnackbarSpinnerComponent,\n} from '@oort-front/shared';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DialogRef, DIALOG_DATA } from '@angular/cdk/dialog';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DialogModule } from '@oort-front/ui';\nimport {\n  ButtonModule,\n  SnackbarService,\n  FormWrapperModule,\n} from '@oort-front/ui';\n\n/**\n * Duplicate application component (modal)\n */\n@Component({\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    FormWrapperModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    DialogModule,\n    ButtonModule,\n  ],\n  selector: 'app-duplicate-application-modal',\n  templateUrl: './duplicate-application-modal.component.html',\n  styleUrls: ['./duplicate-application-modal.component.scss'],\n})\nexport class DuplicateApplicationModalComponent {\n  /** Application to duplicate */\n  public currentApp: Application;\n  /** Duplication form group */\n  public duplicateForm = this.fb.group({\n    name: ['', Validators.required],\n  });\n  /** Loading indicator */\n  public loading = false;\n\n  /**\n   * Duplicate application component.\n   *\n   * @param snackBar Shared snackbar service\n   * @param fb Angular form builder\n   * @param apollo Apollo service\n   * @param dialogRef Dialog ref\n   * @param translateService Angular translate service\n   * @param data Injected dialog data\n   */\n  constructor(\n    private snackBar: SnackbarService,\n    private fb: FormBuilder,\n    private apollo: Apollo,\n    public dialogRef: DialogRef<DuplicateApplicationModalComponent>,\n    private translateService: TranslateService,\n    @Inject(DIALOG_DATA) public data: any\n  ) {\n    this.currentApp = data;\n  }\n\n  /**\n   * Submit duplicate application form.\n   * Send mutation.\n   */\n  onDuplicate(): void {\n    this.loading = true;\n    const snackBarRef = this.snackBar.openComponentSnackBar(\n      SnackbarSpinnerComponent,\n      {\n        duration: 0,\n        data: {\n          message: 'Duplicating',\n          loading: true,\n        },\n      }\n    );\n    const snackBarSpinner = snackBarRef.instance.nestedComponent;\n    this.apollo\n      .mutate<DuplicateApplicationMutationResponse>({\n        mutation: DUPLICATE_APPLICATION,\n        variables: {\n          name: this.duplicateForm.value.name,\n          application: this.currentApp.id,\n        },\n      })\n      .subscribe({\n        next: ({ errors, data }) => {\n          if (errors) {\n            snackBarSpinner.instance.message = this.translateService.instant(\n              'common.notifications.objectNotDuplicated',\n              {\n                type: this.translateService\n                  .instant('common.application.one')\n                  .toLowerCase(),\n                error: errors ? errors[0].message : '',\n              }\n            );\n            snackBarSpinner.instance.error = true;\n          } else {\n            snackBarSpinner.instance.message = this.translateService.instant(\n              'common.notifications.objectDuplicated',\n              {\n                type: this.translateService\n                  .instant('common.application.one')\n                  .toLowerCase(),\n                value: this.currentApp.name,\n              }\n            );\n          }\n          snackBarSpinner.instance.loading = false;\n          this.dialogRef.close(data?.duplicateApplication as any);\n        },\n        error: (err) => {\n          snackBarSpinner.instance.message = err.message;\n          snackBarSpinner.instance.loading = false;\n          snackBarSpinner.instance.error = true;\n        },\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./duplicate-application-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Duplicate application component.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "DialogRef<DuplicateApplicationModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "rawdescription": "\n\nDuplicate application component.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1525,
                            "end": 1533,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1519,
                            "end": 1524,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1570,
                            "end": 1572,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1564,
                            "end": 1569,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1606,
                            "end": 1612,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1600,
                            "end": 1605,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1640,
                            "end": 1649,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialogRef"
                        },
                        "type": "DialogRef<DuplicateApplicationModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1634,
                            "end": 1639,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog ref</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1673,
                            "end": 1689,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translateService"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1667,
                            "end": 1672,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1728,
                            "end": 1732,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "data"
                        },
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1722,
                            "end": 1727,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Injected dialog data</p>\n"
                    }
                ]
            },
            "templateData": "<ui-dialog>\n  <ng-container ngProjectAs=\"header\">\n    <h3 class=\"font-semibold\">\n      <!-- todo: translate -->\n      Duplicating <i>{{ currentApp.name }}</i>\n    </h3>\n  </ng-container>\n  <ng-container ngProjectAs=\"content\">\n    <form [formGroup]=\"duplicateForm\">\n      <div class=\"flex flex-col\">\n        <h4>\n          {{ 'components.application.duplicate.name.description' | translate }}\n        </h4>\n        <div uiFormFieldDirective>\n          <label>\n            {{ 'common.name' | translate }}\n          </label>\n          <input\n            type=\"text\"\n            formControlName=\"name\"\n            [placeholder]=\"'common.placeholder.name' | translate\"\n          />\n        </div>\n      </div>\n    </form>\n  </ng-container>\n  <ng-container ngProjectAs=\"actions\">\n    <ui-button [uiDialogClose] variant=\"default\">{{\n      'common.close' | translate\n    }}</ui-button>\n    <ui-button\n      [disabled]=\"loading\"\n      category=\"secondary\"\n      variant=\"primary\"\n      (click)=\"onDuplicate()\"\n      cdkFocusInitial\n      [disabled]=\"!duplicateForm.valid\"\n    >\n      {{ 'common.duplicate' | translate }}\n    </ui-button>\n  </ng-container>\n</ui-dialog>\n"
        },
        {
            "name": "EditButtonActionComponent",
            "id": "component-EditButtonActionComponent-1f324e3a2e0293e1b6ca9219106719c890b72947d68771700526de175ac2212f88a01281045a20a2df71df5f16391f9e7812ccda862bbabc4643e5d6c1caf93e",
            "file": "apps/back-office/src/app/dashboard/pages/dashboard/components/edit-button-action/edit-button-action.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-button-action",
            "styleUrls": [
                "./edit-button-action.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-button-action.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "categories",
                    "defaultValue": "ButtonCategories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Categories</p>\n",
                    "line": 78,
                    "rawdescription": "\nCategories",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogRef<ButtonActionT>",
                    "optional": false,
                    "description": "dialog reference",
                    "line": 96,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Form group</p>\n",
                    "line": 73,
                    "rawdescription": "\nForm group",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hrefEditor",
                    "defaultValue": "INLINE_EDITOR_CONFIG",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RawEditorSettings",
                    "optional": false,
                    "description": "<p>tinymce href editor</p>\n",
                    "line": 84,
                    "rawdescription": "\ntinymce href editor",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isNew",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Is the action new</p>\n",
                    "line": 81,
                    "rawdescription": "\nIs the action new",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "variants",
                    "defaultValue": "ButtonVariants",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Variants</p>\n",
                    "line": 76,
                    "rawdescription": "\nVariants",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOn click on the save button close the dialog with the form value",
                    "description": "<p>On click on the save button close the dialog with the form value</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "preview",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOn click on the preview button open the href",
                    "description": "<p>On click on the preview button open the href</p>\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "DialogModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "FormWrapperModule",
                    "type": "module"
                },
                {
                    "name": "SelectMenuModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "ToggleModule",
                    "type": "module"
                },
                {
                    "name": "EditorModule",
                    "type": "module"
                },
                {
                    "name": "EditorControlComponent",
                    "type": "component"
                },
                {
                    "name": "DividerModule",
                    "type": "module"
                }
            ],
            "description": "<p>Component for editing a dashboard button action</p>\n",
            "rawdescription": "\nComponent for editing a dashboard button action",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  DialogModule,\n  variants as ButtonVariants,\n  categories as ButtonCategories,\n  FormWrapperModule,\n  SelectMenuModule,\n  ButtonModule,\n  ToggleModule,\n  DividerModule,\n} from '@oort-front/ui';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DialogRef, DIALOG_DATA } from '@angular/cdk/dialog';\nimport { get } from 'lodash';\nimport { RawEditorSettings } from 'tinymce';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport {\n  EditorService,\n  EditorControlComponent,\n  DataTemplateService,\n  INLINE_EDITOR_CONFIG,\n  ButtonActionT,\n} from '@oort-front/shared';\nimport { Router } from '@angular/router';\n\n/**\n * Create a form group for the button action\n *\n * @param data Data to initialize the form\n * @returns the form group\n */\nconst createButtonActionForm = (data?: ButtonActionT) => {\n  return new FormGroup({\n    text: new FormControl(get(data, 'text', ''), Validators.required),\n    href: new FormControl(get(data, 'href', ''), Validators.required),\n    variant: new FormControl(get(data, 'variant', 'primary')),\n    category: new FormControl(get(data, 'category', 'secondary')),\n    openInNewTab: new FormControl(get(data, 'openInNewTab', true)),\n  });\n};\n\n/** Component for editing a dashboard button action */\n@Component({\n  selector: 'app-edit-button-action',\n  standalone: true,\n  imports: [\n    CommonModule,\n    DialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    FormWrapperModule,\n    SelectMenuModule,\n    ButtonModule,\n    ToggleModule,\n    EditorModule,\n    EditorControlComponent,\n    DividerModule,\n  ],\n  templateUrl: './edit-button-action.component.html',\n  styleUrls: ['./edit-button-action.component.scss'],\n})\nexport class EditButtonActionComponent implements OnInit {\n  /** Form group */\n  public form: ReturnType<typeof createButtonActionForm>;\n\n  /** Variants */\n  public variants = ButtonVariants;\n  /** Categories */\n  public categories = ButtonCategories;\n\n  /** Is the action new */\n  public isNew: boolean;\n\n  /** tinymce href editor */\n  public hrefEditor: RawEditorSettings = INLINE_EDITOR_CONFIG;\n\n  /**\n   * Component for editing a dashboard button action\n   *\n   * @param dialogRef dialog reference\n   * @param data initial button action\n   * @param editorService editor service used to get main URL and current language\n   * @param dataTemplateService Shared data template service\n   * @param router Router service\n   */\n  constructor(\n    public dialogRef: DialogRef<ButtonActionT>,\n    @Inject(DIALOG_DATA) private data: ButtonActionT,\n    private editorService: EditorService,\n    private dataTemplateService: DataTemplateService,\n    private router: Router\n  ) {\n    this.form = createButtonActionForm(data);\n    this.isNew = !data;\n\n    // Set the editor base url based on the environment file\n    this.hrefEditor.base_url = editorService.url;\n    // Set the editor language\n    this.hrefEditor.language = editorService.language;\n  }\n\n  ngOnInit(): void {\n    this.editorService.addCalcAndKeysAutoCompleter(\n      this.hrefEditor,\n      this.dataTemplateService.getAutoCompleterPageKeys()\n    );\n  }\n\n  /** On click on the preview button open the href */\n  public preview(): void {\n    let href = this.form.get('href')?.value;\n    if (href) {\n      //regex to verify if it's a page id key\n      const regex = /{{page\\((.*?)\\)}}/;\n      const match = href.match(regex);\n      if (match) {\n        href = this.dataTemplateService.getButtonLink(match[1]);\n      }\n      const isNewTab = this.form.get('openInNewTab')?.value ?? true;\n      if (isNewTab) window.open(href, '_blank');\n      else this.router.navigate([href]);\n    }\n  }\n\n  /** On click on the save button close the dialog with the form value */\n  public onSubmit(): void {\n    this.dialogRef.close(this.form.value as any);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./edit-button-action.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Component for editing a dashboard button action</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "DialogRef<ButtonActionT>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "ButtonActionT",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "editorService",
                        "type": "EditorService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dataTemplateService",
                        "type": "DataTemplateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 84,
                "rawdescription": "\n\nComponent for editing a dashboard button action\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2397,
                            "end": 2406,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialogRef"
                        },
                        "type": "DialogRef<ButtonActionT>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2391,
                            "end": 2396,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>dialog reference</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2436,
                            "end": 2440,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "data"
                        },
                        "type": "ButtonActionT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2430,
                            "end": 2435,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>initial button action</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2475,
                            "end": 2488,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "editorService"
                        },
                        "type": "EditorService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2469,
                            "end": 2474,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>editor service used to get main URL and current language</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2558,
                            "end": 2577,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dataTemplateService"
                        },
                        "type": "DataTemplateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2552,
                            "end": 2557,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared data template service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2619,
                            "end": 2625,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2613,
                            "end": 2618,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Router service</p>\n"
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ui-dialog size=\"medium\" [closable]=\"true\">\n  <ng-container ngProjectAs=\"header\">\n    <h3 class=\"font-semibold\">\n      {{\n        (isNew\n          ? 'models.dashboard.buttonActions.add'\n          : 'models.dashboard.buttonActions.edit'\n        ) | translate\n      }}\n    </h3>\n  </ng-container>\n\n  <ng-container ngProjectAs=\"content\">\n    <form [formGroup]=\"form\" class=\"flex justify-between w-full flex-col py-2\">\n      <!-- Title -->\n      <div uiFormFieldDirective>\n        <label>{{ 'models.dashboard.buttonActions.text' | translate }}</label>\n        <input formControlName=\"text\" type=\"string\" />\n      </div>\n\n      <!-- href -->\n      <div uiFormFieldDirective>\n        <label>{{ 'models.dashboard.buttonActions.href' | translate }}</label>\n        <shared-editor-control\n          formControlName=\"href\"\n          [editorConfig]=\"hrefEditor\"\n        ></shared-editor-control>\n      </div>\n\n      <div class=\"flex gap-2 mb-2\">\n        <!-- Category  -->\n        <div uiFormFieldDirective [outline]=\"false\" class=\"grow\">\n          <label>{{\n            'models.dashboard.buttonActions.category' | translate\n          }}</label>\n          <ui-select-menu formControlName=\"category\">\n            <ui-select-option\n              *ngFor=\"let category of categories\"\n              [value]=\"category\"\n            >\n              {{ category }}\n            </ui-select-option>\n          </ui-select-menu>\n        </div>\n\n        <!-- Variant -->\n        <div uiFormFieldDirective [outline]=\"false\" class=\"grow\">\n          <label>{{\n            'models.dashboard.buttonActions.variant' | translate\n          }}</label>\n          <ui-select-menu formControlName=\"variant\">\n            <ui-select-option\n              *ngFor=\"let variant of variants\"\n              [value]=\"variant\"\n            >\n              {{ variant }}\n            </ui-select-option>\n          </ui-select-menu>\n        </div>\n      </div>\n\n      <!-- New tab toggle -->\n      <ui-toggle formControlName=\"openInNewTab\">\n        <ng-container ngProjectAs=\"label\">\n          {{\n            'models.dashboard.buttonActions.openInNewTab' | translate\n          }}</ng-container\n        >\n      </ui-toggle>\n\n      <ui-divider class=\"my-4\"></ui-divider>\n      <h3 class=\"font-semibold\">{{ 'common.preview' | translate }}</h3>\n      <div>\n        <!-- Button preview -->\n        <ui-button\n          *ngIf=\"form.get('text')?.value\"\n          class=\"w-fit mx-auto mt-3\"\n          [category]=\"form.get('category')?.value || 'secondary'\"\n          [variant]=\"form.get('variant')?.value || 'primary'\"\n          (click)=\"preview()\"\n        >\n          {{ form.get('text')?.value }}\n        </ui-button>\n      </div>\n    </form>\n  </ng-container>\n\n  <ng-container ngProjectAs=\"actions\">\n    <ui-button\n      category=\"secondary\"\n      variant=\"primary\"\n      (click)=\"onSubmit()\"\n      cdkFocusInitial\n      [disabled]=\"!form.valid\"\n    >\n      {{ 'common.save' | translate }}\n    </ui-button>\n  </ng-container>\n</ui-dialog>\n"
        },
        {
            "name": "EditPullJobModalComponent",
            "id": "component-EditPullJobModalComponent-57652a2ccd6350ba413a51a82e5f7b2637b438ddde52e17e3bd581357c3d8eb22b3590fd95d1993f577369baa72da735817f07ee6b64f189f33e5cab6c482f89",
            "file": "apps/back-office/src/app/dashboard/pages/pull-jobs/components/edit-pull-job-modal/edit-pull-job-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-pull-job-modal",
            "styleUrls": [
                "./edit-pull-job-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-pull-job-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apiConfigurations",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApiConfiguration[]",
                    "optional": false,
                    "description": "<p>Api configurations</p>\n",
                    "line": 151,
                    "rawdescription": "\nApi configurations",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "apiConfigurationsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<ApiConfigurationsQueryResponse>",
                    "optional": false,
                    "description": "<p>Api configurations query</p>\n",
                    "line": 153,
                    "rawdescription": "\nApi configurations query",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "applications",
                    "defaultValue": "new BehaviorSubject<Application[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Applications</p>\n",
                    "line": 136,
                    "rawdescription": "\nApplications",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "applications$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Application[]>",
                    "optional": false,
                    "description": "<p>Applications observable</p>\n",
                    "line": 138,
                    "rawdescription": "\nApplications observable",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "applicationsLoading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Applications loading state</p>\n",
                    "line": 134,
                    "rawdescription": "\nApplications loading state",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "applicationsPageInfo",
                    "defaultValue": "{\n    endCursor: '',\n    hasNextPage: true,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Applications pagination info</p>\n",
                    "line": 144,
                    "rawdescription": "\nApplications pagination info",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "applicationsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<ApplicationsApplicationNodesQueryResponse>",
                    "optional": false,
                    "description": "<p>Applications query</p>\n",
                    "line": 142,
                    "rawdescription": "\nApplications query",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "cachedApplications",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Application[]",
                    "optional": false,
                    "description": "<p>Cached applications</p>\n",
                    "line": 140,
                    "rawdescription": "\nCached applications",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "Modal injected data",
                    "line": 211,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogRef<EditPullJobModalComponent>",
                    "optional": false,
                    "description": "Dialog ref",
                    "line": 207,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "editorOptions",
                    "defaultValue": "{\n    theme: 'vs-dark',\n    language: 'json',\n    fixedOverflowWidgets: true,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Monaco editor configuration, for raw edition</p>\n",
                    "line": 188,
                    "rawdescription": "\nMonaco editor configuration, for raw edition",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "fields",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "<p>Fields array</p>\n",
                    "line": 159,
                    "rawdescription": "\nFields array",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "fieldsSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": true,
                    "description": "<p>Forms subscription</p>\n",
                    "line": 161,
                    "rawdescription": "\nForms subscription",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "formGroup",
                    "defaultValue": "this.fb.group({\n    name: [get(this.data, 'pullJob.name', ''), Validators.required],\n    status: [get(this.data, 'pullJob.status', ''), Validators.required],\n    apiConfiguration: [\n      get(this.data, 'pullJob.apiConfiguration.id', ''),\n      Validators.required,\n    ],\n    url: [get(this.data, 'pullJob.url', '')],\n    path: [get(this.data, 'pullJob.path', '')],\n    schedule: [\n      get(this.data, 'pullJob.schedule', ''),\n      [Validators.required, cronValidator()],\n    ],\n    convertTo: [get(this.data, 'pullJob.convertTo.id', '')],\n    channel: [get(this.data, 'pullJob.channel.id', '')],\n    mapping: this.fb.array(\n      this.data.pullJob && this.data.pullJob.mapping\n        ? Object.keys(this.data.pullJob.mapping).map((x: any) =>\n            this.fb.group({\n              name: [x, Validators.required],\n              value: [this.data.pullJob?.mapping[x], Validators.required],\n            })\n          )\n        : []\n    ),\n    rawMapping: [\n      this.data.pullJob && this.data.pullJob.mapping\n        ? JSON.stringify(this.data.pullJob?.mapping, null, 2)\n        : '',\n    ],\n    uniqueIdentifiers: [get(this.data, 'pullJob.uniqueIdentifiers', [])],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Reactive form</p>\n",
                    "line": 93,
                    "rawdescription": "\nReactive form",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<FormsQueryResponse>",
                    "optional": false,
                    "description": "<p>Forms query</p>\n",
                    "line": 130,
                    "rawdescription": "\nForms query",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isHardcoded",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Is hardcoded</p>\n",
                    "line": 126,
                    "rawdescription": "\nIs hardcoded"
                },
                {
                    "name": "openRawJSON",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Open raw JSON</p>\n",
                    "line": 165,
                    "rawdescription": "\nOpen raw JSON",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "statusChoices",
                    "defaultValue": "Object.values(status)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Status choices</p>\n",
                    "line": 157,
                    "rawdescription": "\nStatus choices",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "filteredFields",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 338,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFilters fields so we cannot add a multiple mapping for the same one.\n\n",
                    "description": "<p>Filters fields so we cannot add a multiple mapping for the same one.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9481,
                                "end": 9485,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9475,
                                "end": 9480,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Field name.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 9504,
                                "end": 9511,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Filtered fields.</p>\n"
                        }
                    ]
                },
                {
                    "name": "getFields",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 311,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet fields from form id.\n\n",
                    "description": "<p>Get fields from form id.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8786,
                                "end": 8788,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8780,
                                "end": 8785,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Id of selected form.</p>\n"
                        }
                    ]
                },
                {
                    "name": "loadOnScrollApplication",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 417,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFetches more channels on scroll.\n\n",
                    "description": "<p>Fetches more channels on scroll.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 11350,
                                "end": 11351,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 11344,
                                "end": 11349,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>scroll event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAddElement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 358,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdds new element to the mapping.\n",
                    "description": "<p>Adds new element to the mapping.</p>\n"
                },
                {
                    "name": "onDeleteElement",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 351,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemoves element from the mapping\n\n",
                    "description": "<p>Removes element from the mapping</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9813,
                                "end": 9818,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "index"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9807,
                                "end": 9812,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>mapping element index.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onFormSearchChange",
                    "args": [
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 450,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChanges the query according to search text\n\n",
                    "description": "<p>Changes the query according to search text</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 12328,
                                "end": 12334,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "search"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 12322,
                                "end": 12327,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Search text from the graphql select</p>\n"
                        }
                    ]
                },
                {
                    "name": "onOpenApplicationSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 405,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdds scroll listener to channels select.\n",
                    "description": "<p>Adds scroll listener to channels select.</p>\n"
                },
                {
                    "name": "returnFormValue",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 397,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSynchronizes mapping values on update button click.\n\n",
                    "description": "<p>Synchronizes mapping values on update button click.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 10894,
                                "end": 10901,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Return form value.</p>\n"
                        }
                    ]
                },
                {
                    "name": "synchronizeFormValueData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 378,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSynchronize mapping of the form value to the raw mapping if user don't want to open raw JSON\n",
                    "description": "<p>Synchronize mapping of the form value to the raw mapping if user don&#39;t want to open raw JSON</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "toggleRawJSON",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 370,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggles the edit mode and update form values accordingly.\n",
                    "description": "<p>Toggles the edit mode and update form values accordingly.</p>\n"
                },
                {
                    "name": "updateValues",
                    "args": [
                        {
                            "name": "data",
                            "type": "ApplicationsApplicationNodesQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 473,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate application data value\n\n",
                    "description": "<p>Update application data value</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 12789,
                                "end": 12793,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "ApplicationsApplicationNodesQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 12783,
                                "end": 12788,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>query response data</p>\n"
                        },
                        {
                            "name": {
                                "pos": 12826,
                                "end": 12833,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "loading"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 12820,
                                "end": 12825,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>loading status</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "DialogModule",
                    "type": "module"
                },
                {
                    "name": "GraphQLSelectModule",
                    "type": "module"
                },
                {
                    "name": "ReadableCronModule",
                    "type": "module"
                },
                {
                    "name": "TooltipModule",
                    "type": "module"
                },
                {
                    "name": "ExpansionPanelModule",
                    "type": "module"
                },
                {
                    "name": "CronExpressionControlModule",
                    "type": "module"
                },
                {
                    "name": "IconModule",
                    "type": "module"
                },
                {
                    "name": "TextareaModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "SelectMenuModule",
                    "type": "module"
                },
                {
                    "name": "FormWrapperModule",
                    "type": "module"
                },
                {
                    "name": "StatusOptionsComponent",
                    "type": "component"
                },
                {
                    "name": "MonacoEditorModule",
                    "type": "module"
                }
            ],
            "description": "<p>Pull job modal component</p>\n",
            "rawdescription": "\nPull job modal component",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, UntypedFormArray, Validators } from '@angular/forms';\nimport { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport {\n  ApiConfiguration,\n  Application,\n  Channel,\n  Form,\n  PullJob,\n  status,\n  authType,\n  cronValidator,\n  ApplicationsApplicationNodesQueryResponse,\n  ApiConfigurationsQueryResponse,\n  FormQueryResponse,\n  FormsQueryResponse,\n  StatusOptionsComponent,\n} from '@oort-front/shared';\nimport { Apollo, QueryRef } from 'apollo-angular';\nimport {\n  GET_API_CONFIGURATIONS,\n  GET_SHORT_FORM_BY_ID,\n  GET_FORM_NAMES,\n  GET_ROUTING_KEYS,\n} from '../../graphql/queries';\nimport {\n  BehaviorSubject,\n  Observable,\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n} from 'rxjs';\nimport get from 'lodash/get';\nimport {\n  getCachedValues,\n  updateQueryUniqueValues,\n} from '../../../../../utils/update-queries';\nimport { CommonModule, DOCUMENT } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  ReadableCronModule,\n  CronExpressionControlModule,\n} from '@oort-front/shared';\nimport {\n  TooltipModule,\n  ButtonModule,\n  ExpansionPanelModule,\n  SelectMenuModule,\n  FormWrapperModule,\n  TextareaModule,\n  GraphQLSelectModule,\n  IconModule,\n} from '@oort-front/ui';\nimport { DialogModule } from '@oort-front/ui';\nimport { MonacoEditorModule } from 'ngx-monaco-editor-v2';\n\n/** Items per page for pagination */\nconst ITEMS_PER_PAGE = 10;\n\n/** Default fields */\nconst DEFAULT_FIELDS = ['createdBy'];\n\n/** Pull job modal component */\n@Component({\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    DialogModule,\n    GraphQLSelectModule,\n    ReadableCronModule,\n    TooltipModule,\n    ExpansionPanelModule,\n    CronExpressionControlModule,\n    IconModule,\n    TextareaModule,\n    ButtonModule,\n    SelectMenuModule,\n    FormWrapperModule,\n    StatusOptionsComponent,\n    MonacoEditorModule,\n  ],\n  selector: 'app-edit-pull-job-modal',\n  templateUrl: './edit-pull-job-modal.component.html',\n  styleUrls: ['./edit-pull-job-modal.component.scss'],\n})\nexport class EditPullJobModalComponent implements OnInit {\n  // === REACTIVE FORM ===\n  /** Reactive form */\n  public formGroup = this.fb.group({\n    name: [get(this.data, 'pullJob.name', ''), Validators.required],\n    status: [get(this.data, 'pullJob.status', ''), Validators.required],\n    apiConfiguration: [\n      get(this.data, 'pullJob.apiConfiguration.id', ''),\n      Validators.required,\n    ],\n    url: [get(this.data, 'pullJob.url', '')],\n    path: [get(this.data, 'pullJob.path', '')],\n    schedule: [\n      get(this.data, 'pullJob.schedule', ''),\n      [Validators.required, cronValidator()],\n    ],\n    convertTo: [get(this.data, 'pullJob.convertTo.id', '')],\n    channel: [get(this.data, 'pullJob.channel.id', '')],\n    mapping: this.fb.array(\n      this.data.pullJob && this.data.pullJob.mapping\n        ? Object.keys(this.data.pullJob.mapping).map((x: any) =>\n            this.fb.group({\n              name: [x, Validators.required],\n              value: [this.data.pullJob?.mapping[x], Validators.required],\n            })\n          )\n        : []\n    ),\n    rawMapping: [\n      this.data.pullJob && this.data.pullJob.mapping\n        ? JSON.stringify(this.data.pullJob?.mapping, null, 2)\n        : '',\n    ],\n    uniqueIdentifiers: [get(this.data, 'pullJob.uniqueIdentifiers', [])],\n  });\n  /** Is hardcoded */\n  isHardcoded = true;\n\n  // === FORMS ===\n  /** Forms query */\n  public formsQuery!: QueryRef<FormsQueryResponse>;\n\n  // === CHANNELS ===\n  /** Applications loading state */\n  private applicationsLoading = true;\n  /** Applications */\n  public applications = new BehaviorSubject<Application[]>([]);\n  /** Applications observable */\n  public applications$!: Observable<Application[]>;\n  /** Cached applications */\n  private cachedApplications: Application[] = [];\n  /** Applications query */\n  private applicationsQuery!: QueryRef<ApplicationsApplicationNodesQueryResponse>;\n  /** Applications pagination info */\n  private applicationsPageInfo = {\n    endCursor: '',\n    hasNextPage: true,\n  };\n\n  // === API ===\n  /** Api configurations */\n  public apiConfigurations: ApiConfiguration[] = [];\n  /** Api configurations query */\n  public apiConfigurationsQuery!: QueryRef<ApiConfigurationsQueryResponse>;\n\n  // === DATA ===\n  /** Status choices */\n  public statusChoices = Object.values(status);\n  /** Fields array */\n  public fields: any[] = [];\n  /** Forms subscription */\n  private fieldsSubscription?: Subscription;\n\n  // === RAW JSON UTILITY ===\n  /** Open raw JSON */\n  public openRawJSON = false;\n\n  /** @returns pull job mapping as form array */\n  get mappingArray(): UntypedFormArray {\n    return this.formGroup.get('mapping') as UntypedFormArray;\n  }\n\n  /** @returns default API configuration */\n  get defaultApiConfiguration(): ApiConfiguration | null {\n    return this.data.pullJob?.apiConfiguration || null;\n  }\n\n  /** @returns default convert to form */\n  get defaultForm(): Form | null {\n    return this.data.pullJob?.convertTo || null;\n  }\n\n  /** @returns default channel */\n  get defaultChannel(): Channel | null {\n    return this.data.pullJob?.channel || null;\n  }\n\n  /** Monaco editor configuration, for raw edition */\n  public editorOptions = {\n    theme: 'vs-dark',\n    language: 'json',\n    fixedOverflowWidgets: true,\n  };\n\n  /**\n   * Pull job modal component\n   *\n   * @param fb Angular form builder\n   * @param dialogRef Dialog ref\n   * @param apollo Apollo service\n   * @param document Document\n   * @param data Modal injected data\n   * @param data.channels list of available channels\n   * @param data.pullJob pull job\n   */\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: DialogRef<EditPullJobModalComponent>,\n    private apollo: Apollo,\n    @Inject(DOCUMENT) private document: Document,\n    @Inject(DIALOG_DATA)\n    public data: {\n      channels: Channel[];\n      pullJob?: PullJob;\n    }\n  ) {}\n\n  ngOnInit(): void {\n    this.formsQuery = this.apollo.watchQuery<FormsQueryResponse>({\n      query: GET_FORM_NAMES,\n      variables: {\n        first: ITEMS_PER_PAGE,\n        sortField: 'name',\n      },\n    });\n\n    this.apiConfigurationsQuery =\n      this.apollo.watchQuery<ApiConfigurationsQueryResponse>({\n        query: GET_API_CONFIGURATIONS,\n        variables: {\n          first: ITEMS_PER_PAGE,\n        },\n      });\n    this.apiConfigurationsQuery.valueChanges.subscribe(\n      ({ data }) =>\n        (this.apiConfigurations = data.apiConfigurations.edges.map(\n          (x) => x.node\n        ))\n    );\n\n    // Fetch form fields if any for mapping\n    if (this.data.pullJob?.convertTo?.id) {\n      this.getFields(this.data.pullJob?.convertTo.id);\n    }\n    this.formGroup.get('convertTo')?.valueChanges.subscribe((res) => {\n      if (res) {\n        this.getFields(res);\n      }\n    });\n\n    // Fetch the applications to get the channels\n    this.applicationsQuery =\n      this.apollo.watchQuery<ApplicationsApplicationNodesQueryResponse>({\n        query: GET_ROUTING_KEYS,\n        variables: {\n          first: ITEMS_PER_PAGE,\n          afterCursor: this.applicationsPageInfo.endCursor,\n        },\n      });\n\n    // this.applications$ = this.applications.asObservable();\n    this.applicationsQuery.valueChanges.subscribe(({ data, loading }) => {\n      this.updateValues(data, loading);\n    });\n\n    // Set boolean to allow additional fields if it's not isHardcoded\n    this.isHardcoded = !(\n      this.data.pullJob &&\n      this.data.pullJob.apiConfiguration &&\n      this.data.pullJob.apiConfiguration.authType &&\n      this.data.pullJob.apiConfiguration.authType === authType.public\n    );\n    this.formGroup\n      .get('apiConfiguration')\n      ?.valueChanges.subscribe((apiConfiguration: string | null) => {\n        if (apiConfiguration) {\n          const api = this.apiConfigurations.find(\n            (x) => x.id === apiConfiguration\n          );\n          this.isHardcoded = !(\n            api &&\n            api.authType &&\n            api.authType === authType.public\n          );\n        }\n      });\n\n    this.formGroup\n      .get('rawMapping')\n      ?.valueChanges.pipe(debounceTime(500), distinctUntilChanged())\n      .subscribe((value: any) => {\n        const mapping = JSON.parse(value || '{}');\n        this.formGroup.setControl(\n          'mapping',\n          this.fb.array(\n            Object.keys(mapping).map((x: any) =>\n              this.fb.group({\n                name: [x, Validators.required],\n                value: [mapping[x], Validators.required],\n              })\n            )\n          )\n        );\n      });\n  }\n\n  /**\n   * Get fields from form id.\n   *\n   * @param id Id of selected form.\n   */\n  private getFields(id: string): void {\n    if (this.fieldsSubscription) {\n      this.fieldsSubscription.unsubscribe();\n    }\n    this.fieldsSubscription = this.apollo\n      .watchQuery<FormQueryResponse>({\n        query: GET_SHORT_FORM_BY_ID,\n        variables: {\n          id,\n        },\n      })\n      .valueChanges.subscribe((resForm) => {\n        if (resForm.data.form) {\n          this.fields = resForm.data.form.fields || [];\n          this.fields = this.fields.concat(\n            DEFAULT_FIELDS.map((x) => ({ name: x }))\n          );\n        }\n      });\n  }\n\n  /**\n   * Filters fields so we cannot add a multiple mapping for the same one.\n   *\n   * @param name Field name.\n   * @returns Filtered fields.\n   */\n  public filteredFields(name: string): any[] {\n    return this.fields.filter(\n      (field) =>\n        field.name === name ||\n        !this.formGroup.value.mapping?.some((x: any) => x.name === field.name)\n    );\n  }\n\n  /**\n   * Removes element from the mapping\n   *\n   * @param index mapping element index.\n   */\n  onDeleteElement(index: number): void {\n    this.mappingArray.removeAt(index);\n  }\n\n  /**\n   * Adds new element to the mapping.\n   */\n  onAddElement(): void {\n    this.mappingArray.push(\n      this.fb.group({\n        name: ['', Validators.required],\n        value: ['', Validators.required],\n      })\n    );\n  }\n\n  /**\n   * Toggles the edit mode and update form values accordingly.\n   */\n  toggleRawJSON(): void {\n    this.synchronizeFormValueData();\n    this.openRawJSON = !this.openRawJSON;\n  }\n\n  /**\n   * Synchronize mapping of the form value to the raw mapping if user don't want to open raw JSON\n   */\n  private synchronizeFormValueData() {\n    if (!this.openRawJSON) {\n      const mapping = this.formGroup\n        .get('mapping')\n        ?.value.reduce(\n          (o: any, field: any) => ({ ...o, [field.name]: field.value }),\n          {}\n        );\n      this.formGroup\n        .get('rawMapping')\n        ?.setValue(JSON.stringify(mapping, null, 2));\n    }\n  }\n\n  /**\n   * Synchronizes mapping values on update button click.\n   *\n   * @returns Return form value.\n   */\n  returnFormValue(): any {\n    this.synchronizeFormValueData();\n    return this.formGroup.value;\n  }\n\n  /**\n   * Adds scroll listener to channels select.\n   */\n  onOpenApplicationSelect(): void {\n    const panel = this.document.getElementById('optionList');\n    if (panel) {\n      panel.onscroll = (event: any) => this.loadOnScrollApplication(event);\n    }\n  }\n\n  /**\n   * Fetches more channels on scroll.\n   *\n   * @param e scroll event.\n   */\n  private loadOnScrollApplication(e: any): void {\n    if (\n      e.target.scrollHeight - (e.target.clientHeight + e.target.scrollTop) <\n      50\n    ) {\n      if (!this.applicationsLoading && this.applicationsPageInfo.hasNextPage) {\n        this.applicationsLoading = true;\n        const variables = {\n          first: ITEMS_PER_PAGE,\n          afterCursor: this.applicationsPageInfo.endCursor,\n        };\n        const cachedValues: ApplicationsApplicationNodesQueryResponse =\n          getCachedValues(this.apollo.client, GET_ROUTING_KEYS, variables);\n        if (cachedValues) {\n          this.updateValues(cachedValues, false);\n        } else {\n          this.applicationsQuery\n            .fetchMore({\n              variables,\n            })\n            .then((results) =>\n              this.updateValues(results.data, results.loading)\n            );\n        }\n      }\n    }\n  }\n\n  /**\n   * Changes the query according to search text\n   *\n   * @param search Search text from the graphql select\n   */\n  public onFormSearchChange(search: string): void {\n    const variables = this.formsQuery.variables;\n    this.formsQuery.refetch({\n      ...variables,\n      filter: {\n        logic: 'and',\n        filters: [\n          {\n            field: 'name',\n            operator: 'contains',\n            value: search,\n          },\n        ],\n      },\n    });\n  }\n\n  /**\n   * Update application data value\n   *\n   * @param data query response data\n   * @param loading loading status\n   */\n  private updateValues(\n    data: ApplicationsApplicationNodesQueryResponse,\n    loading: boolean\n  ) {\n    const nodes = data.applications.edges\n      .map((x) => x.node)\n      .filter((x) => (x.channels ? x.channels.length > 0 : false));\n    this.cachedApplications = updateQueryUniqueValues(\n      this.cachedApplications,\n      nodes\n    );\n    this.applications.next(this.cachedApplications);\n    this.applicationsPageInfo = data.applications.pageInfo;\n    this.applicationsLoading = loading;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./edit-pull-job-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Pull job modal component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "DialogRef<EditPullJobModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 192,
                "rawdescription": "\n\nPull job modal component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 5539,
                            "end": 5541,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5533,
                            "end": 5538,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5575,
                            "end": 5584,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialogRef"
                        },
                        "type": "DialogRef<EditPullJobModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5569,
                            "end": 5574,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog ref</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5608,
                            "end": 5614,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5602,
                            "end": 5607,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5642,
                            "end": 5650,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "document"
                        },
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5636,
                            "end": 5641,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Document</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5672,
                            "end": 5676,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "data"
                        },
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5666,
                            "end": 5671,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Modal injected data</p>\n"
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "mappingArray": {
                    "name": "mappingArray",
                    "getSignature": {
                        "name": "mappingArray",
                        "type": "",
                        "returnType": "UntypedFormArray",
                        "line": 168,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 4750,
                                "end": 4790,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 4751,
                                    "end": 4758,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>pull job mapping as form array</p>\n"
                            }
                        ]
                    }
                },
                "defaultApiConfiguration": {
                    "name": "defaultApiConfiguration",
                    "getSignature": {
                        "name": "defaultApiConfiguration",
                        "type": "",
                        "returnType": "ApiConfiguration | null",
                        "line": 173,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 4907,
                                "end": 4942,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 4908,
                                    "end": 4915,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>default API configuration</p>\n"
                            }
                        ]
                    }
                },
                "defaultForm": {
                    "name": "defaultForm",
                    "getSignature": {
                        "name": "defaultForm",
                        "type": "",
                        "returnType": "Form | null",
                        "line": 178,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 5071,
                                "end": 5104,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 5072,
                                    "end": 5079,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>default convert to form</p>\n"
                            }
                        ]
                    }
                },
                "defaultChannel": {
                    "name": "defaultChannel",
                    "getSignature": {
                        "name": "defaultChannel",
                        "type": "",
                        "returnType": "Channel | null",
                        "line": 183,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 5202,
                                "end": 5227,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 5203,
                                    "end": 5210,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>default channel</p>\n"
                            }
                        ]
                    }
                }
            },
            "templateData": "<ui-dialog size=\"medium\">\n  <!-- Modal header -->\n  <ng-container ngProjectAs=\"header\">\n    <h3 class=\"font-semibold\">\n      {{\n        data.pullJob\n          ? ('models.pullJob.edit' | translate)\n          : ('models.pullJob.new' | translate)\n      }}\n    </h3>\n  </ng-container>\n\n  <!-- Modal content -->\n  <ng-container ngProjectAs=\"content\">\n    <form [formGroup]=\"formGroup\">\n      <div class=\"flex flex-col pb-1\">\n        <div class=\"flex gap-x-2 flex-wrap\">\n          <!-- Title -->\n          <div uiFormFieldDirective class=\"flex-1 max-w-[50%]\">\n            <label>{{ 'common.name' | translate }}</label>\n            <input\n              type=\"text\"\n              [placeholder]=\"'common.placeholder.name' | translate\"\n              formControlName=\"name\"\n            />\n          </div>\n          <!-- Status -->\n\n          <div uiFormFieldDirective class=\"flex-1 max-w-[50%]\">\n            <label>{{ 'common.status' | translate }}</label>\n            <ui-select-menu\n              formControlName=\"status\"\n              [customTemplate]=\"{\n                template: statusTemplate,\n                context: { $implicit: formGroup.value.status }\n              }\"\n            >\n              <ui-select-option\n                *ngFor=\"let status of statusChoices\"\n                [value]=\"status\"\n              >\n                <ng-container\n                  *ngTemplateOutlet=\"\n                    statusTemplate;\n                    context: { $implicit: status }\n                  \"\n                ></ng-container>\n              </ui-select-option>\n            </ui-select-menu>\n          </div>\n        </div>\n        <!-- Schedule -->\n        <shared-cron-expression-control\n          class=\"flex\"\n          formControlName=\"schedule\"\n        ></shared-cron-expression-control>\n        <!-- API to use -->\n        <div uiFormFieldDirective class=\"flex-1\">\n          <label>{{ 'common.apiConfiguration.one' | translate }}</label>\n          <ui-graphql-select\n            valueField=\"id\"\n            textField=\"name\"\n            [required]=\"true\"\n            [query]=\"apiConfigurationsQuery\"\n            formControlName=\"apiConfiguration\"\n            [selectedElements]=\"[defaultApiConfiguration]\"\n          >\n          </ui-graphql-select>\n        </div>\n        <div class=\"flex gap-x-2 flex-wrap\" *ngIf=\"!isHardcoded\">\n          <!-- Url to pull -->\n          <div uiFormFieldDirective class=\"flex-1 max-w-[50%]\">\n            <label>{{ 'models.pullJob.url' | translate }}</label>\n            <input\n              type=\"text\"\n              [placeholder]=\"\n                'components.pullJob.modal.placeholder.url' | translate\n              \"\n              formControlName=\"url\"\n            />\n            <ui-icon\n              icon=\"info\"\n              class=\"cursor-pointer\"\n              variant=\"grey\"\n              uiSuffix\n              [uiTooltip]=\"'components.pullJob.modal.hint.url' | translate\"\n            ></ui-icon>\n          </div>\n          <!-- Path to pull -->\n          <div uiFormFieldDirective class=\"flex-1 max-w-[50%]\">\n            <label>{{ 'models.pullJob.path' | translate }}</label>\n            <input\n              type=\"text\"\n              [placeholder]=\"\n                'components.pullJob.modal.placeholder.path' | translate\n              \"\n              formControlName=\"path\"\n            />\n            <ui-icon\n              icon=\"info\"\n              class=\"cursor-pointer\"\n              variant=\"grey\"\n              uiSuffix\n              [uiTooltip]=\"'components.pullJob.modal.hint.path' | translate\"\n            ></ui-icon>\n          </div>\n        </div>\n        <div class=\"flex gap-x-2 flex-wrap\">\n          <!-- Resource to use for conversion -->\n          <div uiFormFieldDirective class=\"flex-1 max-w-[50%]\">\n            <label>{{ 'components.record.convert.select' | translate }}</label>\n            <ui-graphql-select\n              valueField=\"id\"\n              textField=\"name\"\n              [query]=\"formsQuery\"\n              formControlName=\"convertTo\"\n              [selectedElements]=\"[defaultForm]\"\n              (searchChange)=\"onFormSearchChange($event)\"\n              [filterable]=\"true\"\n            >\n            </ui-graphql-select>\n          </div>\n          <!-- Channel to notify on -->\n\n          <div uiFormFieldDirective class=\"flex-1 max-w-[50%]\">\n            <label>{{\n              'components.channel.dropdown.select' | translate\n            }}</label>\n            <ui-select-menu\n              formControlName=\"channel\"\n              (opened)=\"onOpenApplicationSelect()\"\n            >\n              <ui-select-option\n                *ngFor=\"let application of applications | async\"\n                [isGroup]=\"true\"\n              >\n                {{ application.name }}\n                <ui-select-option\n                  *ngFor=\"let channel of application.channels\"\n                  [value]=\"channel.id\"\n                >\n                  {{ channel.title }}\n                </ui-select-option>\n              </ui-select-option>\n            </ui-select-menu>\n          </div>\n        </div>\n        <!-- Mapping -->\n        <ui-expansion-panel\n          [expanded]=\"false\"\n          [disabled]=\"!formGroup.value.convertTo\"\n        >\n          <ng-container ngProjectAs=\"title\">\n            {{ 'components.pullJob.modal.mapping' | translate }}\n          </ng-container>\n          <div class=\"flex flex-col gap-4\">\n            <div class=\"flex justify-end\">\n              <!-- Switch edition mode (raw / ui) -->\n              <ui-button\n                icon=\"edit_note\"\n                category=\"secondary\"\n                variant=\"primary\"\n                (click)=\"toggleRawJSON()\"\n              >\n                {{ 'components.pullJob.modal.switch' | translate }}\n              </ui-button>\n            </div>\n            <!-- Raw edition mode (json) -->\n            <ng-container *ngIf=\"openRawJSON\">\n              <div class=\"grow h-[300px]\">\n                <ngx-monaco-editor\n                  class=\"!h-full\"\n                  formControlName=\"rawMapping\"\n                  [options]=\"editorOptions\"\n                ></ngx-monaco-editor>\n              </div>\n              <!-- <div uiFormFieldDirective>\n                <label>{{ 'common.input.rawJson' | translate }}</label>\n                <ui-textarea\n                  formControlName=\"rawMapping\"\n                  placeholder=\"Please enter a JSON for the data mapping between the API and the Form.\"\n                  [minRows]=\"2\"\n                >\n                </ui-textarea>\n              </div> -->\n            </ng-container>\n            <!-- UI edition mode -->\n            <ng-container *ngIf=\"!openRawJSON\">\n              <div class=\"flex flex-col gap-2 overflow-x-auto\">\n                <form\n                  [formGroup]=\"$any(element)\"\n                  *ngFor=\"let element of mappingArray.controls; index as i\"\n                  class=\"flex gap-x-2 items-end\"\n                >\n                  <div\n                    uiFormFieldDirective\n                    [defaultMargin]=\"false\"\n                    class=\"flex-1\"\n                  >\n                    <label>{{ 'common.field.one' | translate }}</label>\n                    <ui-select-menu formControlName=\"name\">\n                      <ui-select-option\n                        *ngFor=\"let field of filteredFields(element.value.name)\"\n                        [value]=\"field.name\"\n                      >\n                        {{ field.name }}\n                      </ui-select-option>\n                    </ui-select-menu>\n                  </div>\n                  <div\n                    *ngIf=\"element.value.name\"\n                    uiFormFieldDirective\n                    [defaultMargin]=\"false\"\n                    class=\"flex-1\"\n                  >\n                    <label>{{ 'common.value.one' | translate }}</label>\n                    <input formControlName=\"value\" type=\"string\" />\n                  </div>\n                  <ui-button\n                    [isIcon]=\"true\"\n                    icon=\"remove_circle_outline\"\n                    variant=\"danger\"\n                    (click)=\"onDeleteElement(i)\"\n                    [uiTooltip]=\"'common.delete' | translate\"\n                  >\n                  </ui-button>\n                </form>\n                <ui-button\n                  *ngIf=\"filteredFields('').length > 0\"\n                  icon=\"add_circle_outline\"\n                  variant=\"primary\"\n                  (click)=\"onAddElement()\"\n                >\n                  {{ 'components.pullJob.modal.addMappingField' | translate }}\n                </ui-button>\n              </div>\n            </ng-container>\n          </div>\n        </ui-expansion-panel>\n        <!-- Unique identifiers -->\n        <div\n          *ngIf=\"mappingArray.controls.length > 0\"\n          uiFormFieldDirective\n          [outline]=\"false\"\n          class=\"mt-4\"\n        >\n          <label>{{ 'components.pullJob.modal.identifier' | translate }}</label>\n          <ui-select-menu\n            formControlName=\"uniqueIdentifiers\"\n            [multiselect]=\"true\"\n          >\n            <ui-select-option\n              *ngFor=\"let element of mappingArray.value\"\n              [value]=\"element.value\"\n            >\n              {{ element.value }}\n            </ui-select-option>\n          </ui-select-menu>\n        </div>\n      </div>\n    </form>\n  </ng-container>\n  <!-- Modal actions -->\n  <ng-container ngProjectAs=\"actions\">\n    <ui-button [uiDialogClose] variant=\"default\">{{\n      'common.close' | translate\n    }}</ui-button>\n    <ui-button\n      category=\"secondary\"\n      variant=\"primary\"\n      [uiDialogClose]=\"returnFormValue()\"\n      cdkFocusInitial\n      [disabled]=\"!formGroup.valid\"\n      (click)=\"toggleRawJSON()\"\n    >\n      {{ (data.pullJob ? 'common.update' : 'common.create') | translate }}\n    </ui-button>\n  </ng-container>\n</ui-dialog>\n\n<!-- Template to display status -->\n<ng-template #statusTemplate let-status>\n  <shared-status-options [status]=\"status\"></shared-status-options>\n</ng-template>\n"
        },
        {
            "name": "FilterComponent",
            "id": "component-FilterComponent-30294248205fed36377bb24d1ad62ab47e7a928621480ccb3519461b85553b77e02f3e239eb4f819d3fd627391606893b36c839ceda29385f1374266f79ca999",
            "file": "apps/back-office/src/app/dashboard/pages/api-configurations/filter/filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-api-configuration-filter",
            "styleUrls": [
                "./filter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLoading state",
                    "description": "<p>Loading state</p>\n",
                    "line": 41,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "filter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nRoles list",
                    "description": "<p>Roles list</p>\n",
                    "line": 43,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "expandedFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "<p>Reference to expanded filter template</p>\n",
                    "line": 46,
                    "rawdescription": "\nReference to expanded filter template",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'expandedFilter'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "form",
                    "defaultValue": "this.fb.group({\n    status: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Form</p>\n",
                    "line": 49,
                    "rawdescription": "\nForm",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Show expanded filter</p>\n",
                    "line": 53,
                    "rawdescription": "\nShow expanded filter",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClears form.\n",
                    "description": "<p>Clears form.</p>\n"
                },
                {
                    "name": "emitFilter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits the filter value, so the main component can get it.\n\n",
                    "description": "<p>Emits the filter value, so the main component can get it.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1841,
                                "end": 1846,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1835,
                                "end": 1840,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Value to be emitted.</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "ListFilterComponent",
                    "type": "component"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "SelectMenuModule",
                    "type": "module"
                },
                {
                    "name": "FormWrapperModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                }
            ],
            "description": "<p>Filter used by the resources component</p>\n",
            "rawdescription": "\n\nFilter used by the resources component\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  TemplateRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UnsubscribeComponent, ListFilterComponent } from '@oort-front/shared';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { FormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport {\n  ButtonModule,\n  SelectMenuModule,\n  FormWrapperModule,\n} from '@oort-front/ui';\nimport { TranslateModule } from '@ngx-translate/core';\n\n/**\n * Filter used by the resources component\n */\n@Component({\n  selector: 'app-api-configuration-filter',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    ListFilterComponent,\n    ButtonModule,\n    SelectMenuModule,\n    FormWrapperModule,\n    TranslateModule,\n  ],\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n})\nexport class FilterComponent extends UnsubscribeComponent implements OnInit {\n  /** Loading state */\n  @Input() loading = false;\n  /** Roles list */\n  @Output() filter = new EventEmitter<any>();\n  /** Reference to expanded filter template */\n  @ViewChild('expandedFilter')\n  expandedFilter!: TemplateRef<any>;\n\n  /** Form */\n  public form = this.fb.group({\n    status: [''],\n  });\n  /** Show expanded filter */\n  public show = false;\n\n  /**\n   * FilterComponent constructor.\n   *\n   * @param fb Used to create reactive forms.\n   */\n  constructor(private fb: FormBuilder) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.form.valueChanges\n      .pipe(\n        debounceTime(1000),\n        distinctUntilChanged(),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((value) => {\n        this.emitFilter(value);\n      });\n  }\n\n  /**\n   * Emits the filter value, so the main component can get it.\n   *\n   * @param value Value to be emitted.\n   */\n  private emitFilter(value: any): void {\n    const filters: any[] = [];\n    if (value.search) {\n      filters.push({\n        field: 'name',\n        operator: 'contains',\n        value: value.search,\n      });\n    }\n    if (value.status) {\n      filters.push({ field: 'status', operator: 'eq', value: value.status });\n    }\n    const filter = {\n      logic: 'and',\n      filters,\n    };\n    this.filter.emit(filter);\n  }\n\n  /**\n   * Clears form.\n   */\n  clear(): void {\n    this.form.reset();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./filter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>FilterComponent constructor.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 53,
                "rawdescription": "\n\nFilterComponent constructor.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1417,
                            "end": 1419,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1411,
                            "end": 1416,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Used to create reactive forms.</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [formGroup]=\"form\" class=\"flex flex-col gap-x-4\">\n  <!-- Default filter -->\n  <shared-list-filter\n    [hasSiblingFilters]=\"true\"\n    [loading]=\"loading\"\n    (showFilters)=\"show = $event\"\n  ></shared-list-filter>\n  <!-- Advanced filters -->\n  <ng-template #expandedFilter>\n    <div *ngIf=\"show\" class=\"flex flex-wrap gap-2 items-end\">\n      <!-- Status filter -->\n      <div\n        uiFormFieldDirective\n        [outline]=\"false\"\n        class=\"w-44\"\n        [defaultMargin]=\"false\"\n      >\n        <label>{{ 'common.status' | translate }}</label>\n        <ui-select-menu\n          formControlName=\"status\"\n          [placeholder]=\"'common.selectStatus' | translate\"\n        >\n          <ui-select-option>-</ui-select-option>\n          <ui-select-option value=\"active\">\n            {{ 'common.status_active' | translate }}\n          </ui-select-option>\n          <ui-select-option value=\"pending\">\n            {{ 'common.status_pending' | translate }}\n          </ui-select-option>\n          <ui-select-option value=\"archived\">\n            {{ 'common.status_archived' | translate }}\n          </ui-select-option>\n        </ui-select-menu>\n      </div>\n      <!-- Clear filters -->\n      <ui-button variant=\"danger\" (click)=\"clear()\" class=\"max-sm:!w-auto\">\n        {{ 'common.filter.clear' | translate }}\n      </ui-button>\n    </div>\n  </ng-template>\n</div>\n"
        },
        {
            "name": "FilterComponent",
            "id": "component-FilterComponent-d7ca4eeed5a544dad85b96c95b1bce6500cdef7f8f3da2a4e51e3105823af54e4489fd78170a241c422f7c4402af460b7c0b61d94f85bb463650953d86415886-1",
            "file": "apps/back-office/src/app/dashboard/pages/reference-datas/filter/filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reference-data-filter",
            "styleUrls": [],
            "styles": [],
            "template": "<form [formGroup]=\"form\">\n  <shared-list-filter\n    [hasSiblingFilters]=\"false\"\n    [loading]=\"loading\"\n  ></shared-list-filter>\n</form>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLoading state\n",
                    "description": "<p>Loading state</p>\n",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "filter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitter to emit the filter value\n",
                    "description": "<p>Event emitter to emit the filter value</p>\n",
                    "line": 31,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "this.fb.group({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Form group</p>\n",
                    "line": 36,
                    "rawdescription": "\n\nForm group\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClears form.\n",
                    "description": "<p>Clears form.</p>\n"
                },
                {
                    "name": "emitFilter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits the filter value, so the main component can get it.\n\n",
                    "description": "<p>Emits the filter value, so the main component can get it.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1517,
                                "end": 1522,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1511,
                                "end": 1516,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>filter value</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "ListFilterComponent",
                    "type": "component"
                }
            ],
            "description": "<p>Filter used by the reference data component</p>\n",
            "rawdescription": "\n\nFilter used by the reference data component\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { ListFilterComponent, UnsubscribeComponent } from '@oort-front/shared';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs';\n\n/**\n * Filter used by the reference data component\n */\n@Component({\n  selector: 'app-reference-data-filter',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, ListFilterComponent],\n  template: `\n    <form [formGroup]=\"form\">\n      <shared-list-filter\n        [hasSiblingFilters]=\"false\"\n        [loading]=\"loading\"\n      ></shared-list-filter>\n    </form>\n  `,\n})\nexport class FilterComponent extends UnsubscribeComponent implements OnInit {\n  /**\n   * Loading state\n   */\n  @Input() loading = false;\n  /**\n   * Event emitter to emit the filter value\n   */\n  @Output() filter = new EventEmitter<any>();\n\n  /**\n   * Form group\n   */\n  public form = this.fb.group({});\n\n  /**\n   * FilterComponent constructor.\n   *\n   * @param fb Used to create reactive forms.\n   */\n  constructor(private fb: FormBuilder) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.form.valueChanges\n      .pipe(\n        debounceTime(1000),\n        distinctUntilChanged(),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((value: any) => {\n        this.emitFilter(value);\n      });\n  }\n\n  /**\n   * Emits the filter value, so the main component can get it.\n   *\n   * @param value filter value\n   */\n  private emitFilter(value: any): void {\n    const filters: any[] = [];\n    if (value?.search) {\n      filters.push({\n        field: 'name',\n        operator: 'contains',\n        value: value.search,\n      });\n    }\n    const filter = {\n      logic: 'and',\n      filters,\n    };\n    this.filter.emit(filter);\n  }\n\n  /**\n   * Clears form.\n   */\n  clear(): void {\n    this.form.reset();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>FilterComponent constructor.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "rawdescription": "\n\nFilterComponent constructor.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1088,
                            "end": 1090,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1082,
                            "end": 1087,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Used to create reactive forms.</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "FilterComponent-1"
        },
        {
            "name": "FilterComponent",
            "id": "component-FilterComponent-594c426f1e1a126d09581cc2489652758614c673afd0b3ce21a460f35d696a350572abf58b99ecc09a0be20a4721134f2fadc6bea5d84e26f67956ba8a3163ad-2",
            "file": "apps/back-office/src/app/dashboard/pages/resources/filter/filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-resources-filter",
            "styleUrls": [
                "./filter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLoading state\n",
                    "description": "<p>Loading state</p>\n",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "filter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFilter loading state\n",
                    "description": "<p>Filter loading state</p>\n",
                    "line": 30,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "expandedFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "<p>Reference to expanded filter template</p>\n",
                    "line": 33,
                    "rawdescription": "\nReference to expanded filter template",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'expandedFilter'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "form",
                    "defaultValue": "this.fb.group({\n    startDate: [null],\n    endDate: [null],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Form group</p>\n",
                    "line": 38,
                    "rawdescription": "\n\nForm group\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Show filter</p>\n",
                    "line": 45,
                    "rawdescription": "\n\nShow filter\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClears form.\n",
                    "description": "<p>Clears form.</p>\n"
                },
                {
                    "name": "clearDateFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClears date range.\n",
                    "description": "<p>Clears date range.</p>\n"
                },
                {
                    "name": "emitFilter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits the filter value, so the main component can get it.\n\n",
                    "description": "<p>Emits the filter value, so the main component can get it.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1472,
                                "end": 1477,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1466,
                                "end": 1471,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Value to be emitted.</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Filter used by the resources component</p>\n",
            "rawdescription": "\n\nFilter used by the resources component\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  TemplateRef,\n} from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { UnsubscribeComponent } from '@oort-front/shared';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n/**\n * Filter used by the resources component\n */\n@Component({\n  selector: 'app-resources-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n})\nexport class FilterComponent extends UnsubscribeComponent implements OnInit {\n  /**\n   * Loading state\n   */\n  @Input() loading = false;\n  /**\n   * Filter loading state\n   */\n  @Output() filter = new EventEmitter<any>();\n  /** Reference to expanded filter template */\n  @ViewChild('expandedFilter')\n  expandedFilter!: TemplateRef<any>;\n\n  /**\n   * Form group\n   */\n  public form = this.fb.group({\n    startDate: [null],\n    endDate: [null],\n  });\n  /**\n   * Show filter\n   */\n  public show = false;\n\n  /**\n   * FilterComponent constructor.\n   *\n   * @param fb Used to create reactive forms.\n   */\n  constructor(private fb: FormBuilder) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.form.valueChanges\n      .pipe(\n        debounceTime(1000),\n        distinctUntilChanged(),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((value) => {\n        this.emitFilter(value);\n      });\n  }\n\n  /**\n   * Emits the filter value, so the main component can get it.\n   *\n   * @param value Value to be emitted.\n   */\n  private emitFilter(value: any): void {\n    const filters: any[] = [];\n    if (value.search) {\n      filters.push({\n        field: 'name',\n        operator: 'contains',\n        value: value.search,\n      });\n    }\n    if (value.startDate) {\n      filters.push({\n        field: 'createdAt',\n        operator: 'gte',\n        value: value.startDate,\n      });\n    }\n    if (value.endDate) {\n      filters.push({\n        field: 'createdAt',\n        operator: 'lte',\n        value: value.endDate,\n      });\n    }\n    const filter = {\n      logic: 'and',\n      filters,\n    };\n    this.filter.emit(filter);\n  }\n\n  /**\n   * Clears form.\n   */\n  clear(): void {\n    this.form.reset();\n  }\n\n  /**\n   * Clears date range.\n   */\n  clearDateFilter(): void {\n    this.form.setValue({\n      ...this.form.getRawValue(),\n      startDate: null,\n      endDate: null,\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./filter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>FilterComponent constructor.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "rawdescription": "\n\nFilterComponent constructor.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1048,
                            "end": 1050,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1042,
                            "end": 1047,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Used to create reactive forms.</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "FilterComponent-2",
            "templateData": "<div [formGroup]=\"form\" class=\"flex flex-col gap-x-4\">\n  <!-- Default filter -->\n  <shared-list-filter\n    [hasSiblingFilters]=\"true\"\n    [loading]=\"loading\"\n    (showFilters)=\"show = $event\"\n  ></shared-list-filter>\n  <!-- Advanced filters -->\n  <ng-template #expandedFilter>\n    <div *ngIf=\"show\" class=\"flex flex-wrap gap-2 self-start items-end\">\n      <!-- Date range filter -->\n      <div uiFormFieldDirective [defaultMargin]=\"false\">\n        <label>{{ 'common.input.dateRange' | translate }}</label>\n        <div [formGroup]=\"form\" [uiDateWrapper]=\"calendar\">\n          <input\n            [uiDatePicker]\n            formControlName=\"startDate\"\n            [label]=\"'kendo.datepicker.startLabel' | translate\"\n          />\n          <input\n            [uiDatePicker]\n            formControlName=\"endDate\"\n            [label]=\"'kendo.datepicker.endLabel' | translate\"\n          />\n          <ui-date-range #calendar> </ui-date-range>\n        </div>\n      </div>\n      <!-- Clear filters -->\n      <ui-button class=\"max-sm:!w-auto\" variant=\"danger\" (click)=\"clear()\">\n        {{ 'common.filter.clear' | translate }}\n      </ui-button>\n    </div>\n  </ng-template>\n</div>\n"
        },
        {
            "name": "FilterComponent",
            "id": "component-FilterComponent-32893410b75c015f94f5beabb7fcddb93cb241cbe01208dacc073bdc0262e20dc20304c4a543306f2c4940831390e8bba1b1c9cfb7ac05e1249ac1cfe12c922d-3",
            "file": "apps/back-office/src/app/dashboard/pages/applications/components/filter/filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-applications-filter",
            "styleUrls": [
                "./filter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLoading indicator",
                    "description": "<p>Loading indicator</p>\n",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "filter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nFilter update event",
                    "description": "<p>Filter update event</p>\n",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "expanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Should expand filter</p>\n",
                    "line": 34,
                    "rawdescription": "\nShould expand filter",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "expandedFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "<p>Reference to expanded filter template</p>\n",
                    "line": 37,
                    "rawdescription": "\nReference to expanded filter template",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'expandedFilter'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "form",
                    "defaultValue": "this.fb.group({\n    startDate: [null],\n    endDate: [null],\n    status: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Filter form group</p>\n",
                    "line": 28,
                    "rawdescription": "\nFilter form group",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClears form.\n",
                    "description": "<p>Clears form.</p>\n"
                },
                {
                    "name": "clearDateFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClears date range.\n",
                    "description": "<p>Clears date range.</p>\n"
                },
                {
                    "name": "emitFilter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits the filter value, so the main component can get it.\n\n",
                    "description": "<p>Emits the filter value, so the main component can get it.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1483,
                                "end": 1488,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1477,
                                "end": 1482,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>filter value</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Filter component of applications page.</p>\n",
            "rawdescription": "\n\nFilter component of applications page.\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { UnsubscribeComponent } from '@oort-front/shared';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n/**\n * Filter component of applications page.\n */\n@Component({\n  selector: 'app-applications-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n})\nexport class FilterComponent extends UnsubscribeComponent implements OnInit {\n  /** Loading indicator */\n  @Input() loading = false;\n  /** Filter update event */\n  @Output() filter = new EventEmitter<any>();\n  /** Filter form group */\n  public form = this.fb.group({\n    startDate: [null],\n    endDate: [null],\n    status: [''],\n  });\n  /** Should expand filter */\n  public expanded = false;\n  /** Reference to expanded filter template */\n  @ViewChild('expandedFilter')\n  expandedFilter!: TemplateRef<any>;\n\n  /**\n   * Filter component of applications page.\n   *\n   * @param fb Angular form builder\n   */\n  constructor(private fb: FormBuilder) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.form.valueChanges\n      .pipe(\n        debounceTime(1000),\n        distinctUntilChanged(),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((value) => {\n        this.emitFilter(value);\n      });\n  }\n\n  /**\n   * Emits the filter value, so the main component can get it.\n   *\n   * @param value filter value\n   */\n  private emitFilter(value: any): void {\n    const filters: any[] = [];\n    if (value.search) {\n      filters.push({\n        field: 'name',\n        operator: 'contains',\n        value: value.search,\n      });\n    }\n    if (value.status) {\n      filters.push({ field: 'status', operator: 'eq', value: value.status });\n    }\n    if (value.startDate) {\n      filters.push({\n        field: 'createdAt',\n        operator: 'gte',\n        value: value.startDate,\n      });\n    }\n    if (value.endDate) {\n      filters.push({\n        field: 'createdAt',\n        operator: 'lte',\n        value: value.endDate,\n      });\n    }\n    const filter = {\n      logic: 'and',\n      filters,\n    };\n    this.filter.emit(filter);\n  }\n\n  /**\n   * Clears form.\n   */\n  clear(): void {\n    this.form.reset();\n  }\n\n  /**\n   * Clears date range.\n   */\n  clearDateFilter(): void {\n    this.form.setValue({\n      ...this.form.getRawValue(),\n      startDate: null,\n      endDate: null,\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./filter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Filter component of applications page.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "rawdescription": "\n\nFilter component of applications page.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1069,
                            "end": 1071,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1063,
                            "end": 1068,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "FilterComponent-3",
            "templateData": "<div [formGroup]=\"form\" class=\"flex flex-col gap-x-4\">\n  <!-- Default filter -->\n  <shared-list-filter\n    [hasSiblingFilters]=\"true\"\n    [loading]=\"loading\"\n    (showFilters)=\"expanded = $event\"\n  ></shared-list-filter>\n  <!-- Advanced filters -->\n  <ng-template #expandedFilter>\n    <div *ngIf=\"expanded\" class=\"flex flex-wrap gap-2 self-end items-end\">\n      <!-- Date range filter -->\n      <div uiFormFieldDirective [defaultMargin]=\"false\">\n        <label>{{ 'common.input.dateRange' | translate }}</label>\n        <div [formGroup]=\"form\" [uiDateWrapper]=\"calendar\">\n          <input\n            [uiDatePicker]\n            formControlName=\"startDate\"\n            [label]=\"'kendo.datepicker.startLabel' | translate\"\n          />\n          <input\n            [uiDatePicker]\n            formControlName=\"endDate\"\n            [label]=\"'kendo.datepicker.endLabel' | translate\"\n          />\n          <ui-date-range #calendar> </ui-date-range>\n        </div>\n      </div>\n      <!-- Status filter -->\n      <div uiFormFieldDirective [defaultMargin]=\"false\" class=\"p-0 w-44\">\n        <label>{{ 'common.status' | translate }}</label>\n        <ui-select-menu\n          formControlName=\"status\"\n          [placeholder]=\"'common.selectStatus' | translate\"\n        >\n          <ui-select-option>-</ui-select-option>\n          <ui-select-option value=\"active\">\n            {{ 'common.status_active' | translate }}\n          </ui-select-option>\n          <ui-select-option value=\"pending\">\n            {{ 'common.status_pending' | translate }}\n          </ui-select-option>\n          <ui-select-option value=\"archived\">\n            {{ 'common.status_archived' | translate }}\n          </ui-select-option>\n        </ui-select-menu>\n      </div>\n      <ui-button variant=\"danger\" (click)=\"clear()\" class=\"max-sm:!w-auto\">{{\n        'common.filter.clear' | translate\n      }}</ui-button>\n    </div>\n  </ng-template>\n</div>\n"
        },
        {
            "name": "FilterComponent",
            "id": "component-FilterComponent-a970ee52479ef1c2693313899925223ee34954f00cd335b5edf2975f94415a458db3ae022db6abbaf6288834c2f19ad5115e3e7ca9674111cd757f5082654d5b-4",
            "file": "apps/back-office/src/app/dashboard/pages/forms/components/filter/filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-forms-filter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nInput decorator for Loading state",
                    "description": "<p>Input decorator for Loading state</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "filter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOutput decorator for Event emitter to emit the filter value",
                    "description": "<p>Output decorator for Event emitter to emit the filter value</p>\n",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "expandedFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "<p>Reference to expanded filter template</p>\n",
                    "line": 28,
                    "rawdescription": "\nReference to expanded filter template",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'expandedFilter'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "form",
                    "defaultValue": "this.fb.group({\n    startDate: [null],\n    endDate: [null],\n    status: [''],\n    core: [null],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Form group</p>\n",
                    "line": 31,
                    "rawdescription": "\nForm group",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Show filter</p>\n",
                    "line": 38,
                    "rawdescription": "\nShow filter",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClears form.\n",
                    "description": "<p>Clears form.</p>\n"
                },
                {
                    "name": "clearDateFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClears date range.\n",
                    "description": "<p>Clears date range.</p>\n"
                },
                {
                    "name": "emitFilter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmit the filter value, so the main component can get it.\n\n",
                    "description": "<p>Emit the filter value, so the main component can get it.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1481,
                                "end": 1486,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1475,
                                "end": 1480,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>new filter value</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Filter component of Forms page.</p>\n",
            "rawdescription": "\n\nFilter component of Forms page.\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  OnInit,\n  Output,\n  Input,\n  ViewChild,\n  TemplateRef,\n} from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { UnsubscribeComponent } from '@oort-front/shared';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n/**\n * Filter component of Forms page.\n */\n@Component({\n  selector: 'app-forms-filter',\n  templateUrl: './filter.component.html',\n})\nexport class FilterComponent extends UnsubscribeComponent implements OnInit {\n  /** Input decorator for Loading state */\n  @Input() loading = false;\n  /** Output decorator for Event emitter to emit the filter value */\n  @Output() filter = new EventEmitter<any>();\n  /** Reference to expanded filter template */\n  @ViewChild('expandedFilter')\n  expandedFilter!: TemplateRef<any>;\n\n  /** Form group */\n  public form = this.fb.group({\n    startDate: [null],\n    endDate: [null],\n    status: [''],\n    core: [null],\n  });\n  /** Show filter */\n  public show = false;\n\n  /**\n   * Filter component of forms page\n   *\n   * @param fb Shared form builder service.\n   */\n  constructor(private fb: FormBuilder) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.form.valueChanges\n      .pipe(\n        debounceTime(1000),\n        distinctUntilChanged(),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((value) => {\n        this.emitFilter(value);\n      });\n  }\n\n  /**\n   * Emit the filter value, so the main component can get it.\n   *\n   * @param value new filter value\n   */\n  private emitFilter(value: any): void {\n    const filters: any[] = [];\n    if (value.search) {\n      filters.push({\n        field: 'name',\n        operator: 'contains',\n        value: value.search,\n      });\n    }\n    if (value.status) {\n      filters.push({ field: 'status', operator: 'eq', value: value.status });\n    }\n    if (value.startDate) {\n      filters.push({\n        field: 'createdAt',\n        operator: 'gte',\n        value: value.startDate,\n      });\n    }\n    if (value.endDate) {\n      filters.push({\n        field: 'createdAt',\n        operator: 'lte',\n        value: value.endDate,\n      });\n    }\n    if (value.core != null) {\n      if (value.core) {\n        filters.push({ field: 'core', operator: 'eq', value: true });\n      } else {\n        filters.push({ field: 'core', operator: 'neq', value: true });\n      }\n    }\n    const filter = {\n      logic: 'and',\n      filters,\n    };\n    this.filter.emit(filter);\n  }\n\n  /**\n   * Clears form.\n   */\n  clear(): void {\n    this.form.reset();\n  }\n\n  /**\n   * Clears date range.\n   */\n  clearDateFilter(): void {\n    this.form.setValue({\n      ...this.form.getRawValue(),\n      startDate: null,\n      endDate: null,\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Filter component of forms page</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "rawdescription": "\n\nFilter component of forms page\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1060,
                            "end": 1062,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1054,
                            "end": 1059,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared form builder service.</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "FilterComponent-4",
            "templateData": "<div [formGroup]=\"form\" class=\"flex flex-col gap-x-4\">\n  <!-- Default filter -->\n  <shared-list-filter\n    [hasSiblingFilters]=\"true\"\n    [loading]=\"loading\"\n    (showFilters)=\"show = $event\"\n  ></shared-list-filter>\n  <!-- Advanced filters -->\n  <ng-template #expandedFilter>\n    <div *ngIf=\"show\" class=\"flex flex-wrap gap-2 self-start items-end\">\n      <!-- Date range filter -->\n      <div uiFormFieldDirective [defaultMargin]=\"false\">\n        <label>{{ 'common.input.dateRange' | translate }}</label>\n        <div [formGroup]=\"form\" [uiDateWrapper]=\"calendar\">\n          <input\n            [uiDatePicker]\n            formControlName=\"startDate\"\n            [label]=\"'kendo.datepicker.startLabel' | translate\"\n          />\n          <input\n            [uiDatePicker]\n            formControlName=\"endDate\"\n            [label]=\"'kendo.datepicker.endLabel' | translate\"\n          />\n          <ui-date-range #calendar> </ui-date-range>\n        </div>\n      </div>\n      <!-- Status filter -->\n      <div uiFormFieldDirective [defaultMargin]=\"false\" class=\"p-0 w-44\">\n        <label>{{ 'common.status' | translate }}</label>\n        <ui-select-menu\n          formControlName=\"status\"\n          [placeholder]=\"'common.selectStatus' | translate\"\n        >\n          <ui-select-option value=\"active\">\n            {{ 'common.status_active' | translate }}\n          </ui-select-option>\n          <ui-select-option value=\"pending\">\n            {{ 'common.status_pending' | translate }}\n          </ui-select-option>\n          <ui-select-option value=\"archived\">\n            {{ 'common.status_archived' | translate }}\n          </ui-select-option>\n        </ui-select-menu>\n      </div>\n      <!-- Core filter -->\n      <div uiFormFieldDirective [defaultMargin]=\"false\" class=\"p-0 w-32\">\n        <label>{{ 'components.forms.isCore' | translate }}</label>\n        <ui-select-menu formControlName=\"core\">\n          <ui-select-option>-</ui-select-option>\n          <ui-select-option [value]=\"true\">\n            {{ 'common.true' | translate }}\n          </ui-select-option>\n          <ui-select-option [value]=\"false\">\n            {{ 'common.false' | translate }}\n          </ui-select-option>\n        </ui-select-menu>\n      </div>\n      <!-- Clear filters -->\n      <ui-button class=\"max-sm:!w-auto\" variant=\"danger\" (click)=\"clear()\">{{\n        'common.filter.clear' | translate\n      }}</ui-button>\n    </div>\n  </ng-template>\n</div>\n"
        },
        {
            "name": "FormAnswerComponent",
            "id": "component-FormAnswerComponent-d3f066f551eaeb56b926797e80c2c552895999f31a2e1c7b848f69e31a05934a846ca28a48cc5ca7c863b39fee83e10502478ae6aee80f53b7deb4fc684b7be2",
            "file": "apps/back-office/src/app/dashboard/pages/form-answer/form-answer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-answer",
            "styleUrls": [
                "./form-answer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-answer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "completed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Is form completed</p>\n",
                    "line": 31,
                    "rawdescription": "\nIs form completed",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Form",
                    "optional": true,
                    "description": "<p>Current form</p>\n",
                    "line": 29,
                    "rawdescription": "\nCurrent form",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormComponent",
                    "optional": true,
                    "description": "<p>Reference to shared form component</p>\n",
                    "line": 23,
                    "rawdescription": "\nReference to shared form component",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FormComponent"
                        }
                    ],
                    "modifierKind": [
                        167,
                        121
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Current form id</p>\n",
                    "line": 27,
                    "rawdescription": "\nCurrent form id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading indicator</p>\n",
                    "line": 25,
                    "rawdescription": "\nLoading indicator",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clearForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset the form, removing answers.\n",
                    "description": "<p>Reset the form, removing answers.</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onComplete",
                    "args": [
                        {
                            "name": "e",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle completion of form\n\n",
                    "description": "<p>Handle completion of form</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1962,
                                "end": 1963,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1956,
                                "end": 1961,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>completion event</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Form answer page component.</p>\n",
            "rawdescription": "\n\nForm answer page component.\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  Form,\n  FormQueryResponse,\n  BreadcrumbService,\n  FormComponent,\n} from '@oort-front/shared';\nimport { GET_SHORT_FORM_BY_ID } from './graphql/queries';\n\n/**\n * Form answer page component.\n */\n@Component({\n  selector: 'app-form-answer',\n  templateUrl: './form-answer.component.html',\n  styleUrls: ['./form-answer.component.scss'],\n})\nexport class FormAnswerComponent implements OnInit {\n  /** Reference to shared form component */\n  @ViewChild(FormComponent)\n  private formComponent?: FormComponent;\n  /** Loading indicator */\n  public loading = true;\n  /** Current form id */\n  public id = '';\n  /** Current form */\n  public form?: Form;\n  /** Is form completed */\n  public completed = false;\n\n  /**\n   * Form answer page component.\n   *\n   * @param apollo Apollo service\n   * @param route Angular activated route\n   * @param breadcrumbService Shared breadcrumb service\n   */\n  constructor(\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private breadcrumbService: BreadcrumbService\n  ) {}\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id') || '';\n    if (this.id !== null) {\n      this.apollo\n        .watchQuery<FormQueryResponse>({\n          query: GET_SHORT_FORM_BY_ID,\n          variables: {\n            id: this.id,\n          },\n        })\n        .valueChanges.subscribe(({ data, loading }) => {\n          this.loading = loading;\n          this.form = data.form;\n          this.breadcrumbService.setBreadcrumb(\n            '@form',\n            this.form.name as string\n          );\n          this.breadcrumbService.setBreadcrumb(\n            '@resource',\n            this.form.resource?.name as string\n          );\n          // this.breadcrumbService.setResourceName();\n        });\n    }\n  }\n\n  /**\n   * Handle completion of form\n   *\n   * @param e completion event\n   * @param e.completed completion status\n   * @param e.hideNewRecord does 'new record' appear ?\n   */\n  onComplete(e: { completed: boolean; hideNewRecord?: boolean }): void {\n    this.completed = e.completed;\n  }\n\n  /**\n   * Reset the form, removing answers.\n   */\n  clearForm(): void {\n    this.formComponent?.reset();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-answer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Form answer page component.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breadcrumbService",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "rawdescription": "\n\nForm answer page component.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 914,
                            "end": 920,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 908,
                            "end": 913,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 948,
                            "end": 953,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 942,
                            "end": 947,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular activated route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 990,
                            "end": 1007,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "breadcrumbService"
                        },
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 984,
                            "end": 989,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared breadcrumb service</p>\n"
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!loading && form\">\n  <!-- Form -->\n  <shared-form [form]=\"form\" (save)=\"onComplete($event)\"></shared-form>\n  <!-- Form actions -->\n  <div class=\"mt-6 flex justify-center\" *ngIf=\"completed && !form.uniqueRecord\">\n    <!-- New record -->\n    <ui-button\n      [isBlock]=\"true\"\n      class=\"flex-1 max-w-xs\"\n      variant=\"primary\"\n      category=\"secondary\"\n      (click)=\"clearForm()\"\n      >{{ 'models.record.new' | translate }}</ui-button\n    >\n  </div>\n</ng-container>\n"
        },
        {
            "name": "FormBuilderComponent",
            "id": "component-FormBuilderComponent-ec37c99417dff92a709c715c478a2b011d3ce4bee00eb0ca7b9e9fce36887d8acb633df78d6fc1a921fe4dca1ab533b8c85edb7f73ae392896b0a0911278163e",
            "file": "apps/back-office/src/app/dashboard/pages/form-builder/form-builder.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-builder",
            "styleUrls": [
                "./form-builder.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-builder.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeVersion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Form active version</p>\n",
                    "line": 60,
                    "rawdescription": "\nForm active version",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "activeVersions",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Form versions</p>\n",
                    "line": 58,
                    "rawdescription": "\nForm versions",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "canEditName",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Can edit name</p>\n",
                    "line": 70,
                    "rawdescription": "\nCan edit name",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "deactivating",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Prevent form builder to display multiple modals when exiting.</p>\n",
                    "line": 78,
                    "rawdescription": "\nPrevent form builder to display multiple modals when exiting.",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 99,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Form",
                    "optional": true,
                    "description": "<p>Form</p>\n",
                    "line": 54,
                    "rawdescription": "\nForm",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Form active</p>\n",
                    "line": 72,
                    "rawdescription": "\nForm active",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hasChanges",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Has changes</p>\n",
                    "line": 74,
                    "rawdescription": "\nHas changes",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Form id</p>\n",
                    "line": 52,
                    "rawdescription": "\nForm id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isStep",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Is step</p>\n",
                    "line": 76,
                    "rawdescription": "\nIs step",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 50,
                    "rawdescription": "\nLoading state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "statusChoices",
                    "defaultValue": "Object.values(status)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Status choices</p>\n",
                    "line": 66,
                    "rawdescription": "\nStatus choices",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "statusControl",
                    "defaultValue": "new FormControl<string | undefined>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Status control</p>\n",
                    "line": 64,
                    "rawdescription": "\nStatus control",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "structure",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Form structure</p>\n",
                    "line": 56,
                    "rawdescription": "\nForm structure",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "canDeactivate",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable | boolean",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nShow modal confirmation before leave the page if has changes on form\n\n",
                    "description": "<p>Show modal confirmation before leave the page if has changes on form</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 3177,
                                "end": 3184,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>boolean of observable of boolean</p>\n"
                        }
                    ]
                },
                {
                    "name": "createLoadingOverlay",
                    "args": [],
                    "optional": false,
                    "returnType": "OverlayRef",
                    "typeParameters": [],
                    "line": 249,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreate a loading overlay that covers the whole viewport using cdk overlay\n\n",
                    "description": "<p>Create a loading overlay that covers the whole viewport using cdk overlay</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 7525,
                                "end": 7532,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Overlay reference</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "formStructureChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 530,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalled when form structure is updated\n\n",
                    "description": "<p>Called when form structure is updated</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 16112,
                                "end": 16117,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 16106,
                                "end": 16111,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>update event</p>\n"
                        }
                    ]
                },
                {
                    "name": "handleFormMutationResponse",
                    "args": [
                        {
                            "name": "data",
                            "type": "EditFormMutationResponse | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "errors",
                            "type": " | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "formName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 361,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles form mutations response\n\n",
                    "description": "<p>Handles form mutations response</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 10857,
                                "end": 10861,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "EditFormMutationResponse | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 10824,
                                "end": 10829,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>data retrieved from the graphql mutation</p>\n",
                            "typeExpression": {
                                "pos": 10830,
                                "end": 10856,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 10831,
                                    "end": 10855,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 180,
                                    "typeName": {
                                        "pos": 10831,
                                        "end": 10855,
                                        "flags": 8388608,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 79,
                                        "escapedText": "EditFormMutationResponse"
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 10932,
                                "end": 10938,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "errors"
                            },
                            "type": " | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 10909,
                                "end": 10914,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>errors from the graphql mutation if any</p>\n",
                            "typeExpression": {
                                "pos": 10915,
                                "end": 10931,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 10916,
                                    "end": 10930,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 185,
                                    "elementType": {
                                        "pos": 10916,
                                        "end": 10928,
                                        "flags": 8388608,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 180,
                                        "typeName": {
                                            "pos": 10916,
                                            "end": 10928,
                                            "flags": 8388608,
                                            "modifierFlagsCache": 0,
                                            "transformFlags": 0,
                                            "kind": 79,
                                            "escapedText": "GraphQLError"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 11000,
                                "end": 11008,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "formName"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 10985,
                                "end": 10990,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>new form name if any</p>\n",
                            "typeExpression": {
                                "pos": 10991,
                                "end": 10999,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 10992,
                                    "end": 10998,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 152
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOpenVersion",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 421,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAvailable in previous version to change the version.\n\n",
                    "description": "<p>Available in previous version to change the version.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 12805,
                                "end": 12806,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 12799,
                                "end": 12804,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>new version</p>\n"
                        }
                    ]
                },
                {
                    "name": "onSave",
                    "args": [
                        {
                            "name": "structure",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSave form structure\n\n",
                    "description": "<p>Save form structure</p>\n",
                    "modifierKind": [
                        123,
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7967,
                                "end": 7976,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "structure"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7961,
                                "end": 7966,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>form structure</p>\n"
                        }
                    ]
                },
                {
                    "name": "resetActiveVersion",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 431,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAvailable in previous version to change the version.\n",
                    "description": "<p>Available in previous version to change the version.</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "saveAccess",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 479,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdit the permissions layer.\n\n",
                    "description": "<p>Edit the permissions layer.</p>\n",
                    "modifierKind": [
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 14428,
                                "end": 14429,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 14422,
                                "end": 14427,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>new permissions</p>\n"
                        }
                    ]
                },
                {
                    "name": "saveName",
                    "args": [
                        {
                            "name": "formName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 443,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdit the form name.\n\n",
                    "description": "<p>Edit the form name.</p>\n",
                    "modifierKind": [
                        123,
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 13408,
                                "end": 13416,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "formName"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 13393,
                                "end": 13398,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>new form name</p>\n",
                            "typeExpression": {
                                "pos": 13399,
                                "end": 13407,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 13400,
                                    "end": 13406,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 152
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "setTemplate",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 403,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAvailable in previous version to change the template.\n\n",
                    "description": "<p>Available in previous version to change the template.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 12413,
                                "end": 12415,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 12407,
                                "end": 12412,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>id of version</p>\n"
                        }
                    ]
                },
                {
                    "name": "snackBarMessageInit",
                    "args": [
                        {
                            "name": "translationKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'common.loading'"
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 226,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet up needed headers and response information for the file download action\n\n",
                    "description": "<p>Set up needed headers and response information for the file download action</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6785,
                                "end": 6799,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "translationKey"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'common.loading'",
                            "tagName": {
                                "pos": 6770,
                                "end": 6775,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Translation key for the file download snackbar message</p>\n",
                            "typeExpression": {
                                "pos": 6776,
                                "end": 6784,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 6777,
                                    "end": 6783,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 152
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 6876,
                                "end": 6884,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "duration"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0",
                            "tagName": {
                                "pos": 6861,
                                "end": 6866,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Time duration of the opened snackbar element</p>\n",
                            "typeExpression": {
                                "pos": 6867,
                                "end": 6875,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 6868,
                                    "end": 6874,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 148
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 6936,
                                "end": 6943,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>snackbar reference and header for the file download request</p>\n"
                        }
                    ]
                },
                {
                    "name": "toggleFormActive",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 213,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nActivate or deactivate form\n",
                    "description": "<p>Activate or deactivate form</p>\n"
                },
                {
                    "name": "updateStatus",
                    "args": [
                        {
                            "name": "status",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 324,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate the status of the form.\n\n",
                    "description": "<p>Update the status of the form.</p>\n",
                    "modifierKind": [
                        121,
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9857,
                                "end": 9863,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "status"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9851,
                                "end": 9856,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>new status</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Form builder page</p>\n",
            "rawdescription": "\n\nForm builder page\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  EDIT_FORM_NAME,\n  EDIT_FORM_PERMISSIONS,\n  EDIT_FORM_STATUS,\n  EDIT_FORM_STRUCTURE,\n} from './graphql/mutations';\nimport { GET_SHORT_FORM_BY_ID } from './graphql/queries';\nimport { Dialog } from '@angular/cdk/dialog';\nimport {\n  AuthService,\n  Form,\n  ConfirmService,\n  BreadcrumbService,\n  status,\n  FormQueryResponse,\n  EditFormMutationResponse,\n  SnackbarSpinnerComponent,\n} from '@oort-front/shared';\nimport { SpinnerComponent } from '@oort-front/ui';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SnackbarService } from '@oort-front/ui';\nimport { FormControl } from '@angular/forms';\nimport { isEqual } from 'lodash';\nimport { GraphQLError } from 'graphql';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\n\n/** Default snackbar config for after request complete  */\nconst REQUEST_SNACKBAR_CONF = {\n  error: false,\n  duration: 2000,\n  data: { loading: false },\n};\n\n/**\n * Form builder page\n */\n@Component({\n  selector: 'app-form-builder',\n  templateUrl: './form-builder.component.html',\n  styleUrls: ['./form-builder.component.scss'],\n})\nexport class FormBuilderComponent implements OnInit {\n  /** Loading state */\n  public loading = true;\n  /** Form id */\n  public id = '';\n  /** Form */\n  public form?: Form;\n  /** Form structure */\n  public structure: any;\n  /** Form versions */\n  public activeVersions = false;\n  /** Form active version */\n  public activeVersion: any;\n\n  // === ENUM OF FORM STATUSES ===\n  /** Status control */\n  public statusControl = new FormControl<string | undefined>('');\n  /** Status choices */\n  public statusChoices = Object.values(status);\n\n  // === FORM EDITION ===\n  /** Can edit name */\n  public canEditName = false;\n  /** Form active */\n  public formActive = false;\n  /** Has changes */\n  public hasChanges = false;\n  /** Is step */\n  private isStep = false;\n  /** Prevent form builder to display multiple modals when exiting. */\n  private deactivating = false;\n\n  /**\n   * Form builder page\n   *\n   * @param apollo Apollo service\n   * @param route Angular activated route\n   * @param router Angular router\n   * @param snackBar Shared snackbar service\n   * @param dialog Dialog service\n   * @param authService Shared authentication service\n   * @param confirmService Shared confirm service\n   * @param translate Angular translate service\n   * @param breadcrumbService Shared breadcrumb service\n   * @param overlay Angular overlay service\n   */\n  constructor(\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private router: Router,\n    private snackBar: SnackbarService,\n    public dialog: Dialog,\n    private authService: AuthService,\n    private confirmService: ConfirmService,\n    private translate: TranslateService,\n    private breadcrumbService: BreadcrumbService,\n    private overlay: Overlay\n  ) {}\n\n  /**\n   * Show modal confirmation before leave the page if has changes on form\n   *\n   * @returns boolean of observable of boolean\n   */\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.hasChanges && !this.deactivating) {\n      this.deactivating = true;\n      const dialogRef = this.confirmService.openConfirmModal({\n        title: this.translate.instant('components.form.update.exit'),\n        content: this.translate.instant('components.form.update.exitMessage'),\n        confirmText: this.translate.instant('components.confirmModal.confirm'),\n        confirmVariant: 'primary',\n      });\n      return dialogRef.closed.pipe(\n        map((value) => {\n          this.deactivating = false;\n          if (value) {\n            this.authService.canLogout.next(true);\n            window.localStorage.removeItem(`form:${this.id}`);\n            return true;\n          }\n          return false;\n        })\n      );\n    }\n    return true;\n  }\n\n  ngOnInit(): void {\n    this.formActive = false;\n    this.statusControl.valueChanges.subscribe((status) => {\n      if (status) {\n        this.updateStatus(status);\n      }\n    });\n    this.id = this.route.snapshot.paramMap.get('id') || '';\n    if (this.id !== null) {\n      this.apollo\n        .watchQuery<FormQueryResponse>({\n          query: GET_SHORT_FORM_BY_ID,\n          variables: {\n            id: this.id,\n          },\n        })\n        .valueChanges.subscribe({\n          next: ({ data, loading }) => {\n            if (data.form) {\n              this.loading = loading;\n              this.form = data.form;\n              this.statusControl.setValue(this.form.status, {\n                emitEvent: false,\n              });\n              this.breadcrumbService.setBreadcrumb(\n                '@form',\n                this.form.name as string\n              );\n              this.breadcrumbService.setBreadcrumb(\n                '@resource',\n                this.form.resource?.name as string\n              );\n              // this.breadcrumbService.setResourceName();\n              this.canEditName = this.form?.canUpdate || false;\n              const storedStructure = window.localStorage.getItem(\n                `form:${this.id}`\n              );\n              this.structure = storedStructure\n                ? storedStructure\n                : this.form.structure;\n              if (this.structure !== this.form.structure) {\n                this.hasChanges = true;\n                this.authService.canLogout.next(!this.hasChanges);\n              }\n            } else {\n              this.snackBar.openSnackBar(\n                this.translate.instant(\n                  'common.notifications.accessNotProvided',\n                  {\n                    type: this.translate\n                      .instant('common.form.one')\n                      .toLowerCase(),\n                    error: '',\n                  }\n                ),\n                { error: true }\n              );\n              // redirect to default screen if error\n              this.router.navigate(['/forms']);\n            }\n          },\n          error: (err) => {\n            this.snackBar.openSnackBar(err.message, { error: true });\n            // redirect to default screen if error\n            this.router.navigate(['/forms']);\n          },\n        });\n    } else {\n      this.loading = false;\n      // redirect to default screen if error\n      this.router.navigate(['/forms']);\n    }\n  }\n\n  /**\n   * Activate or deactivate form\n   */\n  toggleFormActive(): void {\n    if (this.form?.canUpdate) {\n      this.formActive = !this.formActive;\n    }\n  }\n\n  /**\n   * Set up needed headers and response information for the file download action\n   *\n   * @param {string} translationKey Translation key for the file download snackbar message\n   * @param {number} duration Time duration of the opened snackbar element\n   * @returns snackbar reference and header for the file download request\n   */\n  private snackBarMessageInit(\n    translationKey: string = 'common.loading',\n    duration: number = 0\n  ) {\n    // Opens a loader in a snackbar\n    const snackBarRef = this.snackBar.openComponentSnackBar(\n      SnackbarSpinnerComponent,\n      {\n        duration,\n        data: {\n          message: this.translate.instant(translationKey),\n          loading: true,\n        },\n      }\n    );\n    return snackBarRef;\n  }\n\n  /**\n   * Create a loading overlay that covers the whole viewport using cdk overlay\n   *\n   * @returns {OverlayRef} Overlay reference\n   */\n  private createLoadingOverlay(): OverlayRef {\n    const overlayRef = this.overlay.create({\n      positionStrategy: this.overlay\n        .position()\n        .global()\n        .centerHorizontally()\n        .centerVertically(),\n      hasBackdrop: true,\n    });\n    overlayRef.attach(new ComponentPortal(SpinnerComponent));\n    return overlayRef;\n  }\n\n  /**\n   * Save form structure\n   *\n   * @param structure form structure\n   */\n  public async onSave(structure: any): Promise<void> {\n    const loadingSnackbarRef = this.snackBarMessageInit();\n    const overlayRef = this.createLoadingOverlay();\n    if (!this.form?.id) {\n      alert('not valid');\n    } else {\n      this.apollo\n        .mutate<EditFormMutationResponse>({\n          mutation: EDIT_FORM_STRUCTURE,\n          variables: {\n            id: this.form.id,\n            structure,\n          },\n        })\n        .subscribe({\n          next: ({ errors, data }) => {\n            // Dismiss the loading snackbar\n            loadingSnackbarRef.instance.dismiss();\n            // Open new snackbar with the request error or success message\n            const message = errors\n              ? errors[0].message\n              : this.translate.instant('common.notifications.objectUpdated', {\n                  type: this.translate.instant('common.form.one').toLowerCase(),\n                  value: '',\n                });\n            const snackbarConfig = {\n              ...REQUEST_SNACKBAR_CONF,\n              error: errors ? true : false,\n            };\n            this.snackBar.openSnackBar(message, snackbarConfig);\n\n            if (!errors) {\n              this.form = { ...data?.editForm, structure };\n              this.structure = structure;\n              localStorage.removeItem(`form:${this.id}`);\n              this.hasChanges = false;\n              this.authService.canLogout.next(true);\n            }\n          },\n          error: (err) => {\n            // Dismiss the loading snackbar\n            loadingSnackbarRef.instance.dismiss();\n            this.snackBar.openSnackBar(err.message, { error: true });\n          },\n          complete: () => {\n            // Detach the current set overlay\n            overlayRef.detach();\n          },\n        });\n    }\n  }\n\n  /**\n   * Update the status of the form.\n   *\n   * @param status new status\n   */\n  private async updateStatus(status: string): Promise<void> {\n    const loadingSnackbarRef = this.snackBarMessageInit();\n    const overlayRef = this.createLoadingOverlay();\n\n    this.apollo\n      .mutate<EditFormMutationResponse>({\n        mutation: EDIT_FORM_STATUS,\n        variables: {\n          id: this.id,\n          status,\n        },\n      })\n      .subscribe({\n        next: ({ errors, data }) => {\n          // Dismiss the loading snackbar\n          loadingSnackbarRef.instance.dismiss();\n          this.handleFormMutationResponse(data, errors);\n        },\n        error: (err) => {\n          // Dismiss the loading snackbar\n          loadingSnackbarRef.instance.dismiss();\n          this.snackBar.openSnackBar(err.message, { error: true });\n        },\n        complete: () => {\n          // Detach the current set overlay\n          overlayRef.detach();\n        },\n      });\n  }\n\n  /**\n   * Handles form mutations response\n   *\n   * @param {EditFormMutationResponse} data data retrieved from the graphql mutation\n   * @param {GraphQLError[]} errors errors from the graphql mutation if any\n   * @param {string} formName new form name if any\n   */\n  private handleFormMutationResponse(\n    data: EditFormMutationResponse | null | undefined,\n    errors: readonly GraphQLError[] | undefined,\n    formName?: string\n  ) {\n    if (errors) {\n      this.snackBar.openSnackBar(\n        this.translate.instant('common.notifications.objectNotUpdated', {\n          type: this.translate.instant(\n            formName ? 'common.form.one' : 'common.status'\n          ),\n          error: errors ? errors[0].message : '',\n        }),\n        { error: true }\n      );\n    } else {\n      const successMessage = formName\n        ? this.translate.instant('common.notifications.objectUpdated', {\n            type: this.translate.instant('common.form.one').toLowerCase(),\n            value: formName,\n          })\n        : this.translate.instant('common.notifications.statusUpdated', {\n            value: data?.editForm.status,\n          });\n      this.snackBar.openSnackBar(successMessage);\n      if (formName) {\n        this.form = { ...this.form, name: data?.editForm.name };\n        this.breadcrumbService.setBreadcrumb('@form', this.form.name as string);\n      } else {\n        this.form = { ...this.form, status: data?.editForm.status };\n        this.statusControl.setValue(data?.editForm.status, {\n          emitEvent: false,\n        });\n      }\n    }\n  }\n\n  /**\n   * Available in previous version to change the template.\n   *\n   * @param id id of version\n   */\n  setTemplate(id: string): void {\n    this.apollo\n      .watchQuery<FormQueryResponse>({\n        query: GET_SHORT_FORM_BY_ID,\n        variables: {\n          id,\n        },\n      })\n      .valueChanges.subscribe(({ data }) => {\n        this.structure = data.form.structure;\n      });\n  }\n\n  /**\n   * Available in previous version to change the version.\n   *\n   * @param e new version\n   */\n  public onOpenVersion(e: any): void {\n    this.activeVersion = e;\n    this.structure = this.activeVersion.data;\n    // this.surveyCreator.makeNewViewActive('test');\n    // this.surveyCreator.saveSurveyFunc = null;\n  }\n\n  /**\n   * Available in previous version to change the version.\n   */\n  public resetActiveVersion(): void {\n    this.activeVersion = null;\n    this.structure = this.form?.structure;\n    // this.surveyCreator.makeNewViewActive('designer');\n    // this.surveyCreator.saveSurveyFunc = this.saveMySurvey;\n  }\n\n  /**\n   * Edit the form name.\n   *\n   * @param {string} formName new form name\n   */\n  public async saveName(formName: string): Promise<void> {\n    const loadingSnackbarRef = this.snackBarMessageInit();\n    const overlayRef = this.createLoadingOverlay();\n\n    if (formName && formName !== this.form?.name) {\n      this.apollo\n        .mutate<EditFormMutationResponse>({\n          mutation: EDIT_FORM_NAME,\n          variables: {\n            id: this.id,\n            name: formName,\n          },\n        })\n        .subscribe({\n          next: ({ errors, data }) => {\n            // Dismiss the loading snackbar\n            loadingSnackbarRef.instance.dismiss();\n            this.handleFormMutationResponse(data, errors, formName);\n          },\n          error: () => {\n            // Dismiss the loading snackbar\n            loadingSnackbarRef.instance.dismiss();\n          },\n          complete: () => {\n            // Detach the current set overlay\n            overlayRef.detach();\n          },\n        });\n    }\n  }\n\n  /**\n   * Edit the permissions layer.\n   *\n   * @param e new permissions\n   */\n  async saveAccess(e: any): Promise<void> {\n    const loadingSnackbarRef = this.snackBarMessageInit();\n    const overlayRef = this.createLoadingOverlay();\n\n    this.apollo\n      .mutate<EditFormMutationResponse>({\n        mutation: EDIT_FORM_PERMISSIONS,\n        variables: {\n          id: this.id,\n          permissions: e,\n        },\n      })\n      .subscribe({\n        next: ({ errors, data }) => {\n          // Dismiss the loading snackbar\n          loadingSnackbarRef.instance.dismiss();\n          // Open new snackbar with the request error or success message\n          const message = errors\n            ? this.translate.instant('common.notifications.objectNotUpdated', {\n                type: this.translate.instant('common.access'),\n                error: errors ? errors[0].message : '',\n              })\n            : this.translate.instant('common.notifications.objectUpdated', {\n                type: this.translate.instant('common.access'),\n                value: '',\n              });\n          const snackbarConfig = {\n            ...REQUEST_SNACKBAR_CONF,\n            error: errors ? true : false,\n          };\n          this.snackBar.openSnackBar(message, snackbarConfig);\n          if (!errors) {\n            this.form = { ...data?.editForm, structure: this.structure };\n          }\n        },\n        error: (err) => {\n          loadingSnackbarRef.instance.dismiss();\n          this.snackBar.openSnackBar(err.message, { error: true });\n        },\n        complete: () => {\n          // Detach the current set overlay\n          overlayRef.detach();\n        },\n      });\n  }\n\n  /**\n   * Called when form structure is updated\n   *\n   * @param event update event\n   */\n  formStructureChange(event: any): void {\n    this.hasChanges = !isEqual(\n      JSON.parse(event),\n      JSON.parse(this.form?.structure || '{}')\n    );\n    localStorage.setItem(`form:${this.id}`, event);\n    this.authService.canLogout.next(!this.hasChanges);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-builder.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Form builder page</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breadcrumbService",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "overlay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 78,
                "rawdescription": "\n\nForm builder page\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2269,
                            "end": 2275,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2263,
                            "end": 2268,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2303,
                            "end": 2308,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2297,
                            "end": 2302,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular activated route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2345,
                            "end": 2351,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2339,
                            "end": 2344,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2379,
                            "end": 2387,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2373,
                            "end": 2378,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2424,
                            "end": 2430,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2418,
                            "end": 2423,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2458,
                            "end": 2469,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "authService"
                        },
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2452,
                            "end": 2457,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared authentication service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2512,
                            "end": 2526,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2506,
                            "end": 2511,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2562,
                            "end": 2571,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2556,
                            "end": 2561,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2610,
                            "end": 2627,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "breadcrumbService"
                        },
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2604,
                            "end": 2609,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared breadcrumb service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2666,
                            "end": 2673,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "overlay"
                        },
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2660,
                            "end": 2665,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular overlay service</p>\n"
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"form\">\n  <div class=\"flex flex-wrap items-center justify-between mb-6 gap-4\">\n    <div class=\"flex items-center overflow-hidden\">\n      <shared-editable-text\n        [text]=\"form.name\"\n        [canEdit]=\"canEditName\"\n        (onChange)=\"saveName($event)\"\n        (formActiveEvent)=\"formActive = $event\"\n      >\n        <h1 class=\"!m-0 overflow-hidden text-ellipsis\">\n          {{ form.name }} {{ activeVersion ? activeVersion.id : '' }}\n        </h1>\n      </shared-editable-text>\n\n      <shared-access\n        [access]=\"form.permissions\"\n        [objectTypeName]=\"'common.form.one' | translate\"\n        (save)=\"saveAccess($event)\"\n        *ngIf=\"form.canUpdate && !formActive\"\n      ></shared-access>\n    </div>\n    <div class=\"flex items-center\" *ngIf=\"!formActive\">\n      <div uiFormFieldDirective [outline]=\"false\" class=\"p-0\">\n        <label>{{ 'common.status' | translate }}</label>\n        <ui-select-menu\n          [formControl]=\"statusControl\"\n          [customTemplate]=\"{\n            template: statusTemplate,\n            context: { $implicit: statusControl.value }\n          }\"\n        >\n          <ui-select-option\n            *ngFor=\"let status of statusChoices\"\n            [value]=\"status\"\n          >\n            <ng-container\n              *ngTemplateOutlet=\"statusTemplate; context: { $implicit: status }\"\n            ></ng-container>\n          </ui-select-option>\n        </ui-select-menu>\n      </div>\n    </div>\n  </div>\n  <app-history\n    *ngIf=\"activeVersions\"\n    [dataSource]=\"form.versions || []\"\n    (open)=\"onOpenVersion($event)\"\n  ></app-history>\n  <shared-form-builder\n    [form]=\"form\"\n    (save)=\"onSave($event)\"\n    (formChange)=\"formStructureChange($event)\"\n  ></shared-form-builder>\n</ng-container>\n\n<!-- Template to display status -->\n<ng-template #statusTemplate let-status>\n  <shared-status-options [status]=\"status\"></shared-status-options>\n</ng-template>\n"
        },
        {
            "name": "FormComponent",
            "id": "component-FormComponent-9f9997d3b3fd791e8bc0f948aa1e625be7a6193451b132774c1aef5e1afa95942d1abee806cc97a75c6d4a373541ba77bf57f0821115a88571b100c03d6a2df1",
            "file": "apps/back-office/src/app/app-preview/pages/form/form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form",
            "styleUrls": [
                "./form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "completed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Is form completed</p>\n",
                    "line": 43,
                    "rawdescription": "\nIs form completed",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Form",
                    "optional": true,
                    "description": "<p>Form</p>\n",
                    "line": 41,
                    "rawdescription": "\nForm",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SharedFormComponent",
                    "optional": true,
                    "description": "<p>Form component</p>\n",
                    "line": 33,
                    "rawdescription": "\nForm component",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SharedFormComponent"
                        }
                    ],
                    "modifierKind": [
                        167,
                        121
                    ]
                },
                {
                    "name": "hideNewRecord",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Should possibility to add new records be hidden</p>\n",
                    "line": 45,
                    "rawdescription": "\nShould possibility to add new records be hidden",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Current form id</p>\n",
                    "line": 39,
                    "rawdescription": "\nCurrent form id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isStep",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Is this form part of step</p>\n",
                    "line": 55,
                    "rawdescription": "\nIs this form part of step",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 37,
                    "rawdescription": "\nLoading state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Page",
                    "optional": true,
                    "description": "<p>Current page</p>\n",
                    "line": 49,
                    "rawdescription": "\nCurrent page",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "step",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Step",
                    "optional": true,
                    "description": "<p>Current step</p>\n",
                    "line": 51,
                    "rawdescription": "\nCurrent step",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clearForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nResets the form component.\n",
                    "description": "<p>Resets the form component.</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets the form from the page parameters.\n",
                    "description": "<p>Gets the form from the page parameters.</p>\n"
                },
                {
                    "name": "onComplete",
                    "args": [
                        {
                            "name": "e",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles complete event.\n\n",
                    "description": "<p>Handles complete event.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3300,
                                "end": 3301,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3294,
                                "end": 3299,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>complete event</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Application preview form page component.</p>\n",
            "rawdescription": "\n\nApplication preview form page component.\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport {\n  Form,\n  Page,\n  Step,\n  FormComponent as SharedFormComponent,\n  UnsubscribeComponent,\n  StepQueryResponse,\n  FormQueryResponse,\n  PageQueryResponse,\n} from '@oort-front/shared';\nimport {\n  GET_SHORT_FORM_BY_ID,\n  GET_PAGE_BY_ID,\n  GET_STEP_BY_ID,\n} from './graphql/queries';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Application preview form page component.\n */\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n})\nexport class FormComponent extends UnsubscribeComponent implements OnInit {\n  /** Form component */\n  @ViewChild(SharedFormComponent)\n  private formComponent?: SharedFormComponent;\n\n  // === DATA ===\n  /** Loading state */\n  public loading = true;\n  /** Current form id */\n  public id = '';\n  /** Form */\n  public form?: Form;\n  /** Is form completed */\n  public completed = false;\n  /** Should possibility to add new records be hidden */\n  public hideNewRecord = false;\n\n  // === ROUTER ===\n  /** Current page */\n  public page?: Page;\n  /** Current step */\n  public step?: Step;\n\n  // === ROUTE ===\n  /** Is this form part of step */\n  public isStep = false;\n\n  /**\n   * Application preview form page component.\n   *\n   * @param apollo Apollo service\n   * @param route Angular current route\n   * @param router Angular router\n   */\n  constructor(\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    super();\n  }\n\n  /**\n   * Gets the form from the page parameters.\n   */\n  ngOnInit(): void {\n    this.route.params.pipe(takeUntil(this.destroy$)).subscribe((params) => {\n      this.loading = true;\n      this.id = params.id;\n      this.isStep = this.router.url.includes('/workflow/');\n      if (this.isStep) {\n        this.apollo\n          .query<StepQueryResponse>({\n            query: GET_STEP_BY_ID,\n            variables: {\n              id: this.id,\n            },\n          })\n          .subscribe((res) => {\n            this.step = res.data.step;\n            this.apollo\n              .query<FormQueryResponse>({\n                query: GET_SHORT_FORM_BY_ID,\n                variables: {\n                  id: this.step.content,\n                },\n              })\n              .subscribe(({ data, loading }) => {\n                this.form = data.form;\n                this.loading = loading;\n              });\n          });\n      } else {\n        this.apollo\n          .query<PageQueryResponse>({\n            query: GET_PAGE_BY_ID,\n            variables: {\n              id: this.id,\n            },\n          })\n          .subscribe((res) => {\n            this.page = res.data.page;\n            this.apollo\n              .query<FormQueryResponse>({\n                query: GET_SHORT_FORM_BY_ID,\n                variables: {\n                  id: this.page.content,\n                },\n              })\n              .subscribe(({ data, loading }) => {\n                if (data) {\n                  this.form = data.form;\n                }\n                this.loading = loading;\n              });\n          });\n      }\n    });\n  }\n\n  /**\n   * Handles complete event.\n   *\n   * @param e complete event\n   * @param e.completed is event completed\n   * @param e.hideNewRecord do we need to hide new record\n   */\n  onComplete(e: { completed: boolean; hideNewRecord?: boolean }): void {\n    this.completed = e.completed;\n    this.hideNewRecord = e.hideNewRecord || false;\n  }\n\n  /**\n   * Resets the form component.\n   */\n  clearForm(): void {\n    this.formComponent?.reset();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Application preview form page component.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 55,
                "rawdescription": "\n\nApplication preview form page component.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1395,
                            "end": 1401,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1389,
                            "end": 1394,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1429,
                            "end": 1434,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1423,
                            "end": 1428,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular current route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1469,
                            "end": 1475,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1463,
                            "end": 1468,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!loading && form\">\n  <shared-form [form]=\"form\" (save)=\"onComplete($event)\"></shared-form>\n  <ng-container *ngIf=\"completed && !form.uniqueRecord && !hideNewRecord\">\n    <ui-button category=\"secondary\" (click)=\"clearForm()\">{{\n      'models.record.new' | translate\n    }}</ui-button>\n  </ng-container>\n</ng-container>\n"
        },
        {
            "name": "FormComponent",
            "id": "component-FormComponent-ac65c0122324b707bb4498df3b27e8044f018f3b46f2025c9e7d3a9fa89adf06aea1b96b7c8ca03d2385b69e76d2cb4a3b28d84ae9101f35cedf33e2b8458319-1",
            "file": "apps/back-office/src/app/application/pages/form/form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form",
            "styleUrls": [
                "./form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "applicationId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Current application id</p>\n",
                    "line": 44,
                    "rawdescription": "\nCurrent application id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "canEditName",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Can name be edited</p>\n",
                    "line": 54,
                    "rawdescription": "\nCan name be edited",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "completed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Is form completed</p>\n",
                    "line": 48,
                    "rawdescription": "\nIs form completed",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Form",
                    "optional": true,
                    "description": "<p>Current form</p>\n",
                    "line": 46,
                    "rawdescription": "\nCurrent form",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Is name form active</p>\n",
                    "line": 56,
                    "rawdescription": "\nIs name form active",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SharedFormComponent",
                    "optional": true,
                    "description": "<p>Form component</p>\n",
                    "line": 37,
                    "rawdescription": "\nForm component",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SharedFormComponent"
                        }
                    ],
                    "modifierKind": [
                        167,
                        121
                    ]
                },
                {
                    "name": "hideNewRecord",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Should possibility to add new records be hidden</p>\n",
                    "line": 50,
                    "rawdescription": "\nShould possibility to add new records be hidden",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Current form id</p>\n",
                    "line": 42,
                    "rawdescription": "\nCurrent form id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isStep",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Is form part of workflow step</p>\n",
                    "line": 62,
                    "rawdescription": "\nIs form part of workflow step",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading indicator</p>\n",
                    "line": 40,
                    "rawdescription": "\nLoading indicator",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Page",
                    "optional": true,
                    "description": "<p>Application page form is part of ( if any )</p>\n",
                    "line": 58,
                    "rawdescription": "\nApplication page form is part of ( if any )",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "querySubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": true,
                    "description": "<p>Query subscription</p>\n",
                    "line": 52,
                    "rawdescription": "\nQuery subscription",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "step",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Step",
                    "optional": true,
                    "description": "<p>Application step form is part of ( if any )</p>\n",
                    "line": 60,
                    "rawdescription": "\nApplication step form is part of ( if any )",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clearForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 230,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClear status of the form.\n",
                    "description": "<p>Clear status of the form.</p>\n"
                },
                {
                    "name": "editForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 237,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdit form. Open form builder.\n",
                    "description": "<p>Edit form. Open form builder.</p>\n"
                },
                {
                    "name": "getFormQuery",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns query for the given id\n\n",
                    "description": "<p>Returns query for the given id</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3997,
                                "end": 3999,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3982,
                                "end": 3987,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>form id to query</p>\n",
                            "typeExpression": {
                                "pos": 3988,
                                "end": 3996,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 3989,
                                    "end": 3995,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 152
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 4023,
                                "end": 4030,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>form query for the given id</p>\n"
                        }
                    ]
                },
                {
                    "name": "handleFormQueryResponse",
                    "args": [
                        {
                            "name": "data",
                            "type": "FormQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "from",
                            "type": "\"step\" | \"page\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle response for the form query\n\n",
                    "description": "<p>Handle response for the form query</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4323,
                                "end": 4327,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "FormQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4297,
                                "end": 4302,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>form query response data</p>\n",
                            "typeExpression": {
                                "pos": 4303,
                                "end": 4322,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 4304,
                                    "end": 4321,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 180,
                                    "typeName": {
                                        "pos": 4304,
                                        "end": 4321,
                                        "flags": 8388608,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 79,
                                        "escapedText": "FormQueryResponse"
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 4365,
                                "end": 4369,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "from"
                            },
                            "type": "\"step\" | \"page\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4359,
                                "end": 4364,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>from where the form query is done</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onComplete",
                    "args": [
                        {
                            "name": "e",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 222,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nComplete form\n\n",
                    "description": "<p>Complete form</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5833,
                                "end": 5834,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5827,
                                "end": 5832,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>completion event</p>\n"
                        }
                    ]
                },
                {
                    "name": "onOpenSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 254,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpen settings modal.\n",
                    "description": "<p>Open settings modal.</p>\n",
                    "modifierKind": [
                        123,
                        132
                    ]
                },
                {
                    "name": "saveName",
                    "args": [
                        {
                            "name": "tabName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 184,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate the name of the tab.\n\n",
                    "description": "<p>Update the name of the tab.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4985,
                                "end": 4992,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "tabName"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4970,
                                "end": 4975,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>new tab name</p>\n",
                            "typeExpression": {
                                "pos": 4976,
                                "end": 4984,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 4977,
                                    "end": 4983,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 152
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "toggleFormActive",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggle activation of form.\n",
                    "description": "<p>Toggle activation of form.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Form page in application.</p>\n",
            "rawdescription": "\n\nForm page in application.\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport {\n  Form,\n  Page,\n  Step,\n  FormComponent as SharedFormComponent,\n  ApplicationService,\n  WorkflowService,\n  UnsubscribeComponent,\n  StepQueryResponse,\n  FormQueryResponse,\n  PageQueryResponse,\n} from '@oort-front/shared';\nimport {\n  GET_SHORT_FORM_BY_ID,\n  GET_PAGE_BY_ID,\n  GET_STEP_BY_ID,\n} from './graphql/queries';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Dialog } from '@angular/cdk/dialog';\n\n/**\n * Form page in application.\n */\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n})\nexport class FormComponent extends UnsubscribeComponent implements OnInit {\n  /** Form component */\n  @ViewChild(SharedFormComponent)\n  private formComponent?: SharedFormComponent;\n\n  /** Loading indicator */\n  public loading = true;\n  /** Current form id */\n  public id = '';\n  /** Current application id */\n  public applicationId = '';\n  /** Current form */\n  public form?: Form;\n  /** Is form completed */\n  public completed = false;\n  /** Should possibility to add new records be hidden */\n  public hideNewRecord = false;\n  /** Query subscription */\n  public querySubscription?: Subscription;\n  /** Can name be edited */\n  public canEditName = false;\n  /** Is name form active */\n  public formActive = false;\n  /** Application page form is part of ( if any ) */\n  public page?: Page;\n  /** Application step form is part of ( if any ) */\n  public step?: Step;\n  /** Is form part of workflow step */\n  public isStep = false;\n\n  /**\n   * Form page in application\n   *\n   * @param applicationService Shared application service\n   * @param workflowService Shared workflow service\n   * @param apollo Apollo service\n   * @param route Angular activated route\n   * @param router Angular router\n   * @param translate Angular translate service\n   * @param dialog CDK Dialog service\n   */\n  constructor(\n    private applicationService: ApplicationService,\n    private workflowService: WorkflowService,\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private router: Router,\n    private translate: TranslateService,\n    private dialog: Dialog\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.route.params.pipe(takeUntil(this.destroy$)).subscribe((params) => {\n      this.formActive = false;\n      this.loading = true;\n      this.id = params.id;\n      this.isStep = this.router.url.includes('/workflow/');\n      // If a query is already loading, cancel it\n      if (this.querySubscription) {\n        this.querySubscription.unsubscribe();\n      }\n      if (this.isStep) {\n        this.querySubscription = this.apollo\n          .query<StepQueryResponse>({\n            query: GET_STEP_BY_ID,\n            variables: {\n              id: this.id,\n            },\n          })\n          .pipe(\n            switchMap(({ data }) => {\n              this.step = data.step;\n              return this.getFormQuery(this.step.content ?? '');\n            })\n          )\n          .subscribe(({ data, loading }) => {\n            this.handleFormQueryResponse(data, 'step');\n            this.loading = loading;\n          });\n      } else {\n        this.querySubscription = this.apollo\n          .query<PageQueryResponse>({\n            query: GET_PAGE_BY_ID,\n            variables: {\n              id: this.id,\n            },\n          })\n          .pipe(\n            switchMap(({ data }) => {\n              this.page = data.page;\n              return this.getFormQuery(this.page.content ?? '');\n            })\n          )\n          .subscribe(({ data, loading }) => {\n            this.handleFormQueryResponse(data, 'page');\n            this.loading = loading;\n          });\n      }\n    });\n  }\n\n  /**\n   * Returns query for the given id\n   *\n   * @param {string} id form id to query\n   * @returns form query for the given id\n   */\n  private getFormQuery(id: string) {\n    return this.apollo.query<FormQueryResponse>({\n      query: GET_SHORT_FORM_BY_ID,\n      variables: {\n        id,\n      },\n    });\n  }\n\n  /**\n   * Handle response for the form query\n   *\n   * @param {FormQueryResponse} data form query response data\n   * @param from from where the form query is done\n   */\n  private handleFormQueryResponse(\n    data: FormQueryResponse,\n    from: 'step' | 'page'\n  ) {\n    this.form = data.form;\n    this.canEditName = this.form?.canUpdate ?? false;\n    this.applicationId =\n      (from === 'step'\n        ? this.step?.workflow?.page?.application?.id\n        : this.page?.application?.id) ?? '';\n  }\n\n  /**\n   * Toggle activation of form.\n   */\n  toggleFormActive(): void {\n    if (this.step?.canUpdate || this.page?.canUpdate) {\n      this.formActive = !this.formActive;\n    }\n  }\n\n  /**\n   * Update the name of the tab.\n   *\n   * @param {string} tabName new tab name\n   */\n  saveName(tabName: string): void {\n    const currentName = this.page ? this.page.name : this.step?.name;\n    if (tabName && tabName !== currentName) {\n      if (this.isStep) {\n        // If form is workflow step\n        const callback = () => {\n          this.step = { ...this.step, name: tabName };\n        };\n        this.workflowService.updateStepName(\n          {\n            id: this.id,\n            name: tabName,\n          },\n          callback\n        );\n      } else {\n        // If form is page\n        const callback = () => {\n          this.page = { ...this.page, name: tabName };\n        };\n        this.applicationService.updatePageName(\n          {\n            id: this.id,\n            name: tabName,\n          },\n          callback\n        );\n      }\n    }\n  }\n\n  /**\n   * Complete form\n   *\n   * @param e completion event\n   * @param e.completed is completed\n   * @param e.hideNewRecord do we show new record button\n   */\n  onComplete(e: { completed: boolean; hideNewRecord?: boolean }): void {\n    this.completed = e.completed;\n    this.hideNewRecord = e.hideNewRecord || false;\n  }\n\n  /**\n   * Clear status of the form.\n   */\n  clearForm(): void {\n    this.formComponent?.reset();\n  }\n\n  /**\n   * Edit form. Open form builder.\n   */\n  editForm(): void {\n    if (this.isStep && this.step) {\n      this.router.navigate([`./builder/${this.step.content}`], {\n        relativeTo: this.route,\n      });\n    } else {\n      if (this.page) {\n        this.router.navigate([`./builder/${this.page.content}`], {\n          relativeTo: this.route,\n        });\n      }\n    }\n  }\n\n  /**\n   * Open settings modal.\n   */\n  public async onOpenSettings(): Promise<void> {\n    const { ViewSettingsModalComponent } = await import(\n      '../../../components/view-settings-modal/view-settings-modal.component'\n    );\n    const dialogRef = this.dialog.open(ViewSettingsModalComponent, {\n      data: {\n        type: this.isStep ? 'step' : 'page',\n        applicationId: this.applicationId,\n        page: this.isStep ? undefined : this.page,\n        step: this.isStep ? this.step : undefined,\n        icon: this.isStep ? this.step?.icon : this.page?.icon,\n        visible: this.page?.visible,\n        accessData: {\n          access: this.page\n            ? this.page.permissions\n            : this.step\n            ? this.step.permissions\n            : null,\n          application: this.applicationId,\n          objectTypeName: this.translate.instant(\n            'common.' + this.isStep ? 'step' : 'page' + '.one'\n          ),\n        },\n        canUpdate:\n          !this.formActive &&\n          (this.page\n            ? this.page.canUpdate\n            : this.step\n            ? this.step.canUpdate\n            : false),\n      },\n    });\n    // Subscribes to settings updates\n    const subscription = dialogRef.componentInstance?.onUpdate\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((updates: any) => {\n        if (updates) {\n          if (this.isStep) {\n            this.step = { ...this.step, ...updates };\n          } else {\n            this.page = { ...this.page, ...updates };\n          }\n          if (updates.permissions) {\n            this.form = {\n              ...this.form,\n              ...updates,\n            };\n          }\n        }\n      });\n    // Unsubscribe to dialog onUpdate event\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      subscription?.unsubscribe();\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Form page in application</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "workflowService",
                        "type": "WorkflowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 62,
                "rawdescription": "\n\nForm page in application\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1821,
                            "end": 1839,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1815,
                            "end": 1820,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1879,
                            "end": 1894,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "workflowService"
                        },
                        "type": "WorkflowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1873,
                            "end": 1878,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared workflow service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1931,
                            "end": 1937,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1925,
                            "end": 1930,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1965,
                            "end": 1970,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1959,
                            "end": 1964,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular activated route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2007,
                            "end": 2013,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2001,
                            "end": 2006,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2041,
                            "end": 2050,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2035,
                            "end": 2040,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2089,
                            "end": 2095,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2083,
                            "end": 2088,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>CDK Dialog service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "FormComponent-1",
            "templateData": "<ui-spinner *ngIf=\"loading\"></ui-spinner>\n<ng-container *ngIf=\"!loading && form\">\n  <!-- Page header -->\n  <div class=\"flex flex-wrap items-center justify-between mb-6 gap-4\">\n    <div class=\"flex items-center overflow-hidden\">\n      <!-- Page name and name edition -->\n      <shared-editable-text\n        [text]=\"page ? page.name || '' : step ? step.name || '' : ''\"\n        [canEdit]=\"canEditName\"\n        (onChange)=\"saveName($event)\"\n        (formActiveEvent)=\"formActive = $event\"\n      >\n        <h1 class=\"!m-0 overflow-hidden text-ellipsis\">\n          {{ page ? page.name || '' : step ? step.name || '' : '' }}\n        </h1>\n      </shared-editable-text>\n      <!-- Page settings -->\n      <ui-button\n        *ngIf=\"!formActive\"\n        variant=\"grey\"\n        (click)=\"onOpenSettings()\"\n        [isIcon]=\"true\"\n        icon=\"settings\"\n        [uiTooltip]=\"'common.settings' | translate\"\n      ></ui-button>\n    </div>\n    <!-- Page actions -->\n    <div class=\"flex items-center\" *ngIf=\"!formActive\">\n      <!-- Edit name -->\n      <ui-button\n        icon=\"edit\"\n        category=\"secondary\"\n        variant=\"primary\"\n        (click)=\"editForm()\"\n        *ngIf=\"form.canUpdate\"\n      >\n        {{ 'models.form.edit' | translate }}\n      </ui-button>\n    </div>\n  </div>\n  <!-- Form -->\n  <shared-form [form]=\"form\" (save)=\"onComplete($event)\"></shared-form>\n  <!-- Form actions -->\n  <div\n    class=\"mt-6 flex justify-center\"\n    *ngIf=\"completed && !form.uniqueRecord && !hideNewRecord\"\n  >\n    <!-- New record -->\n    <ui-button\n      [isBlock]=\"true\"\n      class=\"flex-1 max-w-xs\"\n      variant=\"primary\"\n      category=\"secondary\"\n      (click)=\"clearForm()\"\n    >\n      {{ 'models.record.new' | translate }}\n    </ui-button>\n  </div>\n</ng-container>\n"
        },
        {
            "name": "FormRecordsComponent",
            "id": "component-FormRecordsComponent-2c928df7a113209bc1cd5ca33c318beb89977e39a0ccebdb446088188726bf0026860e4174d8b5fdb4babaa240ff77614c34bcee1d598b77c840dae3211aa683",
            "file": "apps/back-office/src/app/dashboard/pages/form-records/form-records.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-records",
            "styleUrls": [
                "./form-records.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-records.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cachedRecords",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record[]",
                    "optional": false,
                    "description": "<p>Cached records</p>\n",
                    "line": 77,
                    "rawdescription": "\nCached records",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dataSource",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "<p>Data source array</p>\n",
                    "line": 71,
                    "rawdescription": "\nData source array"
                },
                {
                    "name": "defaultColumns",
                    "defaultValue": "DEFAULT_COLUMNS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Default columns</p>\n",
                    "line": 79,
                    "rawdescription": "\nDefault columns",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 125,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "<p>Columns to display</p>\n",
                    "line": 69,
                    "rawdescription": "\nColumns to display"
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Form</p>\n",
                    "line": 67,
                    "rawdescription": "\nForm",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "historyId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>History id</p>\n",
                    "line": 75,
                    "rawdescription": "\nHistory id",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Form id</p>\n",
                    "line": 65,
                    "rawdescription": "\nForm id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 59,
                    "rawdescription": "\nLoading state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadingMore",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading more state</p>\n",
                    "line": 61,
                    "rawdescription": "\nLoading more state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageInfo",
                    "defaultValue": "{\n    pageIndex: 0,\n    pageSize: ITEMS_PER_PAGE,\n    length: 0,\n    endCursor: '',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Page info</p>\n",
                    "line": 88,
                    "rawdescription": "\nPage info",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "recordsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<FormRecordsQueryResponse>",
                    "optional": false,
                    "description": "<p>Records query</p>\n",
                    "line": 63,
                    "rawdescription": "\nRecords query",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "showDeletedRecords",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Show deleted records</p>\n",
                    "line": 85,
                    "rawdescription": "\nShow deleted records",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showSidenav",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Show sidenav</p>\n",
                    "line": 73,
                    "rawdescription": "\nShow sidenav",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showUpload",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Show upload option</p>\n",
                    "line": 105,
                    "rawdescription": "\nShow upload option",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "updating",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Updating status</p>\n",
                    "line": 81,
                    "rawdescription": "\nUpdating status",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "xlsxFile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>File input</p>\n",
                    "line": 103,
                    "rawdescription": "\n\nFile input\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'xlsxFile'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "confirmRevertDialog",
                    "args": [
                        {
                            "name": "record",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "version",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 357,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpen confirm modal to ask user for reversion of data\n\n",
                    "description": "<p>Open confirm modal to ask user for reversion of data</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9657,
                                "end": 9663,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "record"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9651,
                                "end": 9656,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>record to update</p>\n"
                        },
                        {
                            "name": {
                                "pos": 9693,
                                "end": 9700,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "version"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9687,
                                "end": 9692,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>version to apply</p>\n"
                        }
                    ]
                },
                {
                    "name": "deleteRecord",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 325,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSends mutation to delete record.\n\n",
                    "description": "<p>Sends mutation to delete record.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8876,
                                "end": 8878,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8870,
                                "end": 8875,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Id of record to delete.</p>\n"
                        }
                    ]
                },
                {
                    "name": "fetchRecordsData",
                    "args": [
                        {
                            "name": "refetch",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate Records datas query.\n\n",
                    "description": "<p>Update Records datas query.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4861,
                                "end": 4868,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "refetch"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 4855,
                                "end": 4860,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>erase previous query results</p>\n"
                        }
                    ]
                },
                {
                    "name": "getFormData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet form.\n",
                    "description": "<p>Get form.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "handleRecordMutationResponse",
                    "args": [
                        {
                            "name": "errors",
                            "type": " | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "messageKeys",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "recordId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 534,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle response from record mutation\n\n",
                    "description": "<p>Handle response from record mutation</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 14517,
                                "end": 14523,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "errors"
                            },
                            "type": " | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 14494,
                                "end": 14499,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>mutation errors if any</p>\n",
                            "typeExpression": {
                                "pos": 14500,
                                "end": 14516,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 14501,
                                    "end": 14515,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 185,
                                    "elementType": {
                                        "pos": 14501,
                                        "end": 14513,
                                        "flags": 8388608,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 180,
                                        "typeName": {
                                            "pos": 14501,
                                            "end": 14513,
                                            "flags": 8388608,
                                            "modifierFlagsCache": 0,
                                            "transformFlags": 0,
                                            "kind": 79,
                                            "escapedText": "GraphQLError"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 14559,
                                "end": 14570,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "messageKeys"
                            },
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 14553,
                                "end": 14558,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>containing keys for success and error response messages</p>\n"
                        },
                        {
                            "name": {
                                "pos": 14786,
                                "end": 14794,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "recordId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 14771,
                                "end": 14776,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>mutated record id</p>\n",
                            "typeExpression": {
                                "pos": 14777,
                                "end": 14785,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 14778,
                                    "end": 14784,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 152
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLoad the records, using the form id passed as a parameter.",
                    "description": "<p>Load the records, using the form id passed as a parameter.</p>\n"
                },
                {
                    "name": "onDeleteRecord",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 292,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDeletes a record if authorized, open a confirmation modal if it's a hard delete.\n\n",
                    "description": "<p>Deletes a record if authorized, open a confirmation modal if it&#39;s a hard delete.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7868,
                                "end": 7875,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "element"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7862,
                                "end": 7867,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element to delete</p>\n"
                        },
                        {
                            "name": {
                                "pos": 7906,
                                "end": 7907,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7900,
                                "end": 7905,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>click event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onDownload",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 429,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDownload records\n\n",
                    "description": "<p>Download records</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 11963,
                                "end": 11967,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "type"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 11957,
                                "end": 11962,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>type of file</p>\n"
                        }
                    ]
                },
                {
                    "name": "onDownloadTemplate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 443,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the records template, for upload.\n",
                    "description": "<p>Get the records template, for upload.</p>\n"
                },
                {
                    "name": "onPage",
                    "args": [
                        {
                            "name": "e",
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles page event.\n\n",
                    "description": "<p>Handles page event.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6926,
                                "end": 6927,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6920,
                                "end": 6925,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>page event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onRestoreRecord",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 499,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRestores an archived record.\n\n",
                    "description": "<p>Restores an archived record.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 13715,
                                "end": 13717,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 13709,
                                "end": 13714,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Id of record to restore.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 13755,
                                "end": 13756,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 13749,
                                "end": 13754,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>click event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onSwitchView",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 487,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggle archive / active view.\n\n",
                    "description": "<p>Toggle archive / active view.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 13487,
                                "end": 13488,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 13481,
                                "end": 13486,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>click event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onViewHistory",
                    "args": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 411,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpens the history of the record on the right side of the screen.\n\n",
                    "description": "<p>Opens the history of the record on the right side of the screen.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 11500,
                                "end": 11504,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "item"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 11494,
                                "end": 11499,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>item to get history of</p>\n"
                        }
                    ]
                },
                {
                    "name": "setDisplayedColumns",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 271,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nModifies the list of columns.\n",
                    "description": "<p>Modifies the list of columns.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateValues",
                    "args": [
                        {
                            "name": "data",
                            "type": "FormRecordsQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "setForm",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 225,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate records data value\n\n",
                    "description": "<p>Update records data value</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5957,
                                "end": 5961,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "FormRecordsQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5951,
                                "end": 5956,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>query response data</p>\n"
                        },
                        {
                            "name": {
                                "pos": 5994,
                                "end": 6001,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "loading"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5988,
                                "end": 5993,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>loading status</p>\n"
                        },
                        {
                            "name": {
                                "pos": 6029,
                                "end": 6036,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "setForm"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 6023,
                                "end": 6028,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>control if form should be set</p>\n"
                        }
                    ]
                },
                {
                    "name": "uploadFileData",
                    "args": [
                        {
                            "name": "file",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 461,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpload file and indicate status of request.\n\n",
                    "description": "<p>Upload file and indicate status of request.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 12793,
                                "end": 12797,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "file"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 12787,
                                "end": 12792,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>file to upload.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Forms records page component.</p>\n",
            "rawdescription": "\n\nForms records page component.\n",
            "type": "component",
            "sourceCode": "import { Apollo, QueryRef } from 'apollo-angular';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GET_FORM_RECORDS } from './graphql/queries';\nimport {\n  EDIT_RECORD,\n  DELETE_RECORD,\n  RESTORE_RECORD,\n} from './graphql/mutations';\nimport {\n  UnsubscribeComponent,\n  Record,\n  FormRecordsQueryResponse,\n  DeleteRecordMutationResponse,\n  EditRecordMutationResponse,\n  RestoreRecordMutationResponse,\n  BreadcrumbService,\n  ConfirmService,\n  DownloadService,\n} from '@oort-front/shared';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { TranslateService } from '@ngx-translate/core';\nimport get from 'lodash/get';\nimport { takeUntil } from 'rxjs/operators';\nimport { Metadata } from '@oort-front/shared';\nimport {\n  SnackbarService,\n  UIPageChangeEvent,\n  UILayoutService,\n  handleTablePageEvent,\n} from '@oort-front/ui';\nimport { GraphQLError } from 'graphql';\nimport {\n  getCachedValues,\n  updateQueryUniqueValues,\n} from '../../../utils/update-queries';\nimport { ApolloQueryResult } from '@apollo/client';\n\n/** Default items per query, for pagination */\nconst ITEMS_PER_PAGE = 10;\n\n/** Static columns ( appear whatever the form ) */\nconst DEFAULT_COLUMNS = ['_incrementalId', '_actions'];\n\n/**\n * Forms records page component.\n */\n@Component({\n  selector: 'app-form-records',\n  templateUrl: './form-records.component.html',\n  styleUrls: ['./form-records.component.scss'],\n})\nexport class FormRecordsComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  // === DATA ===\n  /** Loading state */\n  public loading = true;\n  /** Loading more state */\n  public loadingMore = false;\n  /** Records query */\n  private recordsQuery!: QueryRef<FormRecordsQueryResponse>;\n  /** Form id */\n  public id = '';\n  /** Form */\n  public form: any;\n  /** Columns to display */\n  displayedColumns: string[] = [];\n  /** Data source array */\n  dataSource: any[] = [];\n  /** Show sidenav */\n  public showSidenav = true;\n  /** History id */\n  private historyId = '';\n  /** Cached records */\n  public cachedRecords: Record[] = [];\n  /** Default columns */\n  public defaultColumns = DEFAULT_COLUMNS;\n  /** Updating status */\n  public updating = false;\n\n  // === DELETED RECORDS VIEW ===\n  /** Show deleted records */\n  public showDeletedRecords = false;\n\n  /** Page info */\n  public pageInfo = {\n    pageIndex: 0,\n    pageSize: ITEMS_PER_PAGE,\n    length: 0,\n    endCursor: '',\n  };\n\n  /** @returns True if the layouts tab is empty */\n  get empty(): boolean {\n    return !this.loading && this.dataSource.length === 0;\n  }\n\n  /**\n   * File input\n   */\n  @ViewChild('xlsxFile') xlsxFile: any;\n  /** Show upload option */\n  public showUpload = false;\n\n  /**\n   * Forms records page component\n   *\n   * @param apollo Apollo service\n   * @param route Angular activated route\n   * @param downloadService Shared download service\n   * @param layoutService UI layout service\n   * @param dialog Dialog service\n   * @param snackBar Shared snackbar service\n   * @param translate Angular translate service\n   * @param breadcrumbService Shared breadcrumb service\n   * @param confirmService Shared confirm service\n   */\n  constructor(\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private downloadService: DownloadService,\n    private layoutService: UILayoutService,\n    public dialog: Dialog,\n    private snackBar: SnackbarService,\n    private translate: TranslateService,\n    private breadcrumbService: BreadcrumbService,\n    private confirmService: ConfirmService\n  ) {\n    super();\n  }\n\n  /** Load the records, using the form id passed as a parameter. */\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id') || '';\n    if (this.id !== null) {\n      this.getFormData();\n    }\n  }\n\n  /**\n   * Get form.\n   */\n  private getFormData(): void {\n    this.loading = true;\n\n    // get the records linked to the form\n    this.recordsQuery = this.apollo.watchQuery<FormRecordsQueryResponse>({\n      query: GET_FORM_RECORDS,\n      variables: {\n        id: this.id,\n        first: ITEMS_PER_PAGE,\n        afterCursor: this.pageInfo.endCursor,\n        display: false,\n        showDeletedRecords: this.showDeletedRecords,\n      },\n    });\n\n    this.recordsQuery.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ errors, data, loading }) => {\n        this.updateValues(data, loading, true);\n\n        if (errors) {\n          // TO-DO: Check why it's not working as intended.\n          this.snackBar.openSnackBar(\n            this.translate.instant('common.notifications.accessNotProvided', {\n              type: this.translate.instant('common.record.one').toLowerCase(),\n              error: errors ? errors[0].message : '',\n            }),\n            { error: true }\n          );\n        }\n      });\n  }\n\n  /**\n   * Update Records datas query.\n   *\n   * @param refetch erase previous query results\n   */\n  private fetchRecordsData(refetch?: boolean): void {\n    this.loading = true;\n    this.updating = true;\n    const variables = {\n      id: this.id,\n      first: ITEMS_PER_PAGE,\n      afterCursor: refetch ? null : this.pageInfo.endCursor,\n      display: false,\n      showDeletedRecords: this.showDeletedRecords,\n    };\n    // get the records linked to the form\n    const cachedValues: FormRecordsQueryResponse = getCachedValues(\n      this.apollo.client,\n      GET_FORM_RECORDS,\n      variables\n    );\n    if (refetch) {\n      this.cachedRecords = [];\n      this.pageInfo.pageIndex = 0;\n    }\n    if (cachedValues) {\n      this.updateValues(cachedValues, false, refetch);\n    } else {\n      if (refetch) {\n        this.recordsQuery.refetch(variables);\n      } else {\n        this.recordsQuery\n          .fetchMore({ variables })\n          .then((results: ApolloQueryResult<FormRecordsQueryResponse>) => {\n            this.updateValues(results.data, results.loading);\n          });\n      }\n    }\n  }\n\n  /**\n   * Update records data value\n   *\n   * @param data query response data\n   * @param loading loading status\n   * @param setForm control if form should be set\n   */\n  private updateValues(\n    data: FormRecordsQueryResponse,\n    loading: boolean,\n    setForm?: boolean\n  ) {\n    const mappedValues = data.form.records.edges.map((x) => x.node);\n    this.cachedRecords = updateQueryUniqueValues(\n      this.cachedRecords,\n      mappedValues\n    );\n    this.pageInfo.length = data.form.records.totalCount;\n    this.pageInfo.endCursor = data.form.records.pageInfo.endCursor;\n    this.dataSource = this.cachedRecords.slice(\n      this.pageInfo.pageSize * this.pageInfo.pageIndex,\n      this.pageInfo.pageSize * (this.pageInfo.pageIndex + 1)\n    );\n    this.loading = loading;\n    this.updating = false;\n    if (setForm) {\n      this.form = data.form;\n      this.breadcrumbService.setBreadcrumb('@form', this.form.name as string);\n      this.setDisplayedColumns();\n    }\n  }\n\n  /**\n   * Handles page event.\n   *\n   * @param e page event.\n   */\n  onPage(e: UIPageChangeEvent): void {\n    const cachedData = handleTablePageEvent(\n      e,\n      this.pageInfo,\n      this.cachedRecords\n    );\n    if (cachedData && cachedData.length === this.pageInfo.pageSize) {\n      this.dataSource = cachedData;\n    } else {\n      this.fetchRecordsData();\n    }\n  }\n\n  /**\n   * Modifies the list of columns.\n   */\n  private setDisplayedColumns(): void {\n    let columns: any[] = [];\n    for (const field of this.form.fields) {\n      columns.push(field.name);\n    }\n    const metadata: Metadata[] = get(this.form, 'metadata', []);\n    columns = columns\n      .filter((x) => {\n        const fieldMeta = metadata.find((y: any) => y.name === x);\n        return get(fieldMeta, 'canSee', false);\n      })\n      .concat(DEFAULT_COLUMNS);\n    this.displayedColumns = columns;\n  }\n\n  /**\n   * Deletes a record if authorized, open a confirmation modal if it's a hard delete.\n   *\n   * @param element element to delete\n   * @param e click event.\n   */\n  public onDeleteRecord(element: any, e: any): void {\n    e.stopPropagation(); // avoid unwanted actions to occur\n    if (this.showDeletedRecords) {\n      const dialogRef = this.confirmService.openConfirmModal({\n        title: this.translate.instant('common.deleteObject', {\n          name: this.translate.instant('common.record.one'),\n        }),\n        content: this.translate.instant(\n          'components.record.delete.confirmationMessage',\n          {\n            name: element.name,\n          }\n        ),\n        confirmText: this.translate.instant('components.confirmModal.delete'),\n        confirmVariant: 'danger',\n      });\n      dialogRef.closed\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((value: any) => {\n          if (value) {\n            this.deleteRecord(element.id);\n          }\n        });\n    } else {\n      this.deleteRecord(element.id);\n    }\n  }\n\n  /**\n   * Sends mutation to delete record.\n   *\n   * @param id Id of record to delete.\n   */\n  private deleteRecord(id: string): void {\n    this.apollo\n      .mutate<DeleteRecordMutationResponse>({\n        mutation: DELETE_RECORD,\n        variables: {\n          id,\n          hardDelete: this.showDeletedRecords,\n        },\n      })\n      .subscribe({\n        next: ({ errors }) => {\n          this.handleRecordMutationResponse(\n            errors,\n            {\n              success: 'common.notifications.objectDeleted',\n              error: 'common.notifications.objectNotDeleted',\n            },\n            id\n          );\n        },\n        error: (err) => {\n          this.snackBar.openSnackBar(err.message, { error: true });\n        },\n      });\n  }\n\n  /**\n   * Open confirm modal to ask user for reversion of data\n   *\n   * @param record record to update\n   * @param version version to apply\n   */\n  private confirmRevertDialog(record: any, version: any): void {\n    // eslint-disable-next-line radix\n    const date = new Date(parseInt(version.createdAt, 0));\n    const formatDate = `${date.getDate()}/${\n      date.getMonth() + 1\n    }/${date.getFullYear()}`;\n    const dialogRef = this.confirmService.openConfirmModal({\n      title: this.translate.instant('components.record.recovery.title'),\n      content: this.translate.instant(\n        'components.record.recovery.confirmationMessage',\n        { date: formatDate }\n      ),\n      confirmText: this.translate.instant('components.confirmModal.confirm'),\n      confirmVariant: 'primary',\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.apollo\n          .mutate<EditRecordMutationResponse>({\n            mutation: EDIT_RECORD,\n            variables: {\n              id: record.id,\n              version: version.id,\n            },\n          })\n          .subscribe({\n            next: ({ errors }) => {\n              if (errors) {\n                this.snackBar.openSnackBar(\n                  this.translate.instant(\n                    'common.notifications.dataNotRecovered'\n                  ),\n                  { error: true }\n                );\n              } else {\n                this.layoutService.setRightSidenav(null);\n                this.snackBar.openSnackBar(\n                  this.translate.instant('common.notifications.dataRecovered')\n                );\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n\n  /**\n   * Opens the history of the record on the right side of the screen.\n   *\n   * @param item item to get history of\n   */\n  public onViewHistory(item: any): void {\n    import('@oort-front/shared').then(({ RecordHistoryComponent }) => {\n      this.historyId = item.id;\n      this.layoutService.setRightSidenav({\n        component: RecordHistoryComponent,\n        inputs: {\n          id: item.id,\n          revert: (version: any) => this.confirmRevertDialog(item, version),\n        },\n      });\n    });\n  }\n\n  /**\n   * Download records\n   *\n   * @param type type of file\n   */\n  onDownload(type: string): void {\n    const path = `download/form/records/${this.id}`;\n    const fileName = `${this.form.name}.${type}`;\n    const queryString = new URLSearchParams({ type }).toString();\n    this.downloadService.getFile(\n      `${path}?${queryString}`,\n      `text/${type};charset=utf-8;`,\n      fileName\n    );\n  }\n\n  /**\n   * Get the records template, for upload.\n   */\n  onDownloadTemplate(): void {\n    const path = `download/form/records/${this.id}`;\n    const queryString = new URLSearchParams({\n      type: 'xlsx',\n      template: 'true',\n    }).toString();\n    this.downloadService.getFile(\n      `${path}?${queryString}`,\n      `text/xlsx;charset=utf-8;`,\n      `${this.form.name}_template.xlsx`\n    );\n  }\n\n  /**\n   * Upload file and indicate status of request.\n   *\n   * @param file file to upload.\n   */\n  uploadFileData(file: any): void {\n    const path = `upload/form/records/${this.id}`;\n    this.downloadService.uploadFile(path, file).subscribe({\n      next: (res) => {\n        if (res.status === 'OK') {\n          this.snackBar.openSnackBar(\n            this.translate.instant(\n              'models.record.notifications.uploadSuccessful'\n            )\n          );\n          this.fetchRecordsData(true);\n          this.showUpload = false;\n        }\n      },\n      error: () => {\n        // The error message has already been handled in DownloadService\n        this.showUpload = false;\n      },\n    });\n  }\n\n  /**\n   * Toggle archive / active view.\n   *\n   * @param e click event.\n   */\n  onSwitchView(e: any): void {\n    e.stopPropagation();\n    this.showDeletedRecords = !this.showDeletedRecords;\n    this.fetchRecordsData(true);\n  }\n\n  /**\n   * Restores an archived record.\n   *\n   * @param id Id of record to restore.\n   * @param e click event.\n   */\n  public onRestoreRecord(id: string, e: any): void {\n    e.stopPropagation();\n    this.apollo\n      .mutate<RestoreRecordMutationResponse>({\n        mutation: RESTORE_RECORD,\n        variables: {\n          id,\n        },\n      })\n      .subscribe({\n        next: ({ errors }) => {\n          this.handleRecordMutationResponse(\n            errors,\n            {\n              success: 'common.notifications.objectRestored',\n              error: 'common.notifications.objectNotRestored',\n            },\n            id\n          );\n        },\n        error: (err) => {\n          this.snackBar.openSnackBar(err.message, { error: true });\n        },\n      });\n  }\n\n  /**\n   * Handle response from record mutation\n   *\n   * @param {GraphQLError[]} errors mutation errors if any\n   * @param messageKeys containing keys for success and error response messages\n   * @param {string} messageKeys.success success key response messages\n   * @param {string} messageKeys.error error key response messages\n   * @param {string} recordId mutated record id\n   */\n  private handleRecordMutationResponse(\n    errors: readonly GraphQLError[] | undefined,\n    messageKeys: { success: string; error: string },\n    recordId: string\n  ) {\n    if (errors) {\n      this.snackBar.openSnackBar(\n        this.translate.instant(messageKeys.error, {\n          value: this.translate.instant('common.record.one'),\n          error: errors ? errors[0].message : '',\n        }),\n        { error: true }\n      );\n    } else {\n      this.snackBar.openSnackBar(\n        this.translate.instant(messageKeys.success, {\n          value: this.translate.instant('common.record.one'),\n        })\n      );\n      this.dataSource = this.dataSource.filter((x) => x.id !== recordId);\n      if (recordId === this.historyId) {\n        this.layoutService.setRightSidenav(null);\n      }\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table {\n  div {\n    max-height: 48px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 240px;\n  }\n}\n",
                    "styleUrl": "./form-records.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Forms records page component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "downloadService",
                        "type": "DownloadService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "layoutService",
                        "type": "UILayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breadcrumbService",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 105,
                "rawdescription": "\n\nForms records page component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2769,
                            "end": 2775,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2763,
                            "end": 2768,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2803,
                            "end": 2808,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2797,
                            "end": 2802,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular activated route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2845,
                            "end": 2860,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "downloadService"
                        },
                        "type": "DownloadService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2839,
                            "end": 2844,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared download service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2897,
                            "end": 2910,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "layoutService"
                        },
                        "type": "UILayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2891,
                            "end": 2896,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>UI layout service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2941,
                            "end": 2947,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2935,
                            "end": 2940,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2975,
                            "end": 2983,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2969,
                            "end": 2974,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 3020,
                            "end": 3029,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3014,
                            "end": 3019,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 3068,
                            "end": 3085,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "breadcrumbService"
                        },
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3062,
                            "end": 3067,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared breadcrumb service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 3124,
                            "end": 3138,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3118,
                            "end": 3123,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirm service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "empty": {
                    "name": "empty",
                    "getSignature": {
                        "name": "empty",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 96,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 2453,
                                "end": 2495,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 2454,
                                    "end": 2461,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>True if the layouts tab is empty</p>\n"
                            }
                        ]
                    }
                }
            },
            "templateData": "<ng-container *ngIf=\"!loading; else loadingTmpl\">\n  <!-- Header -->\n  <div class=\"flex mb-6 justify-between gap-4\">\n    <!-- Title -->\n    <h1 class=\"!m-0\">\n      {{\n        (showDeletedRecords\n          ? 'components.records.archived'\n          : 'components.records.active'\n        ) | translate\n      }}\n    </h1>\n    <!-- Actions -->\n    <div class=\"flex gap-2 items-center flex-wrap justify-end\">\n      <ui-button\n        *ngIf=\"form.canUpdate && !showDeletedRecords\"\n        icon=\"search_off\"\n        category=\"primary\"\n        variant=\"danger\"\n        (click)=\"onSwitchView($event)\"\n      >\n        {{ 'components.records.showArchived' | translate }}\n      </ui-button>\n      <ui-button\n        *ngIf=\"form.canUpdate && showDeletedRecords\"\n        icon=\"restore_page\"\n        category=\"primary\"\n        variant=\"success\"\n        (click)=\"onSwitchView($event)\"\n      >\n        {{ 'components.records.showActive' | translate }}\n      </ui-button>\n      <ui-button\n        icon=\"file_download\"\n        category=\"secondary\"\n        variant=\"primary\"\n        [uiMenuTriggerFor]=\"menu\"\n      >\n        {{\n          'common.downloadObject'\n            | translate : { name: 'common.record.few' | translate }\n        }}\n      </ui-button>\n      <ui-menu #menu>\n        <button uiMenuItem (click)=\"onDownload('csv')\">.csv</button>\n        <button uiMenuItem (click)=\"onDownload('xlsx')\">.xlsx</button>\n      </ui-menu>\n      <ui-button\n        icon=\"file_upload\"\n        category=\"secondary\"\n        variant=\"primary\"\n        [uiTooltip]=\"'components.records.upload.hint' | translate\"\n        (click)=\"showUpload = !showUpload\"\n        cdkOverlayOrigin\n        #uploadTrigger=\"cdkOverlayOrigin\"\n      >\n        {{\n          'common.uploadObject'\n            | translate : { name: 'common.record.few' | translate }\n        }}\n      </ui-button>\n      <ng-template\n        cdkConnectedOverlay\n        [cdkConnectedOverlayOrigin]=\"uploadTrigger\"\n        [cdkConnectedOverlayOpen]=\"showUpload\"\n      >\n        <app-upload-menu\n          (close)=\"showUpload = false\"\n          (upload)=\"uploadFileData($event)\"\n          (download)=\"onDownloadTemplate()\"\n        ></app-upload-menu>\n      </ng-template>\n    </div>\n  </div>\n  <ng-container *ngIf=\"!empty; else emptyTmpl\">\n    <!-- Table container -->\n    <div class=\"overflow-x-hidden shadow-2lg\">\n      <!-- Table scroll container -->\n      <div class=\"overflow-x-auto\">\n        <!-- Records table -->\n        <table cdk-table uiTableWrapper [dataSource]=\"dataSource\">\n          <ng-container\n            *ngFor=\"let column of displayedColumns\"\n            [cdkColumnDef]=\"column\"\n            [stickyEnd]=\"column === '_actions'\"\n          >\n            <ng-container *ngIf=\"!defaultColumns.includes(column)\">\n              <th uiCellHeader *cdkHeaderCellDef>\n                <div>{{ column }}</div>\n              </th>\n              <td uiCell *cdkCellDef=\"let element\">\n                <div>{{ element.data[column] }}</div>\n              </td>\n            </ng-container>\n            <ng-container *ngIf=\"column === '_incrementalId'\">\n              <th uiCellHeader *cdkHeaderCellDef>\n                <div>ID</div>\n              </th>\n              <td uiCell *cdkCellDef=\"let element\">\n                <div>{{ element.incrementalId }}</div>\n              </td>\n            </ng-container>\n            <ng-container *ngIf=\"column === '_actions'\">\n              <th uiCellHeader *cdkHeaderCellDef></th>\n              <td uiCell *cdkCellDef=\"let element\">\n                <ui-button\n                  [isIcon]=\"true\"\n                  icon=\"more_vert\"\n                  [uiMenuTriggerFor]=\"menu\"\n                  (click)=\"$event.stopPropagation()\"\n                  [uiTooltip]=\"'common.actions' | translate\"\n                >\n                </ui-button>\n                <ui-menu #menu>\n                  <button\n                    uiMenuItem\n                    color=\"warn\"\n                    (click)=\"onViewHistory(element)\"\n                  >\n                    <ui-icon icon=\"library_books\" variant=\"grey\"></ui-icon>\n                    {{ 'common.history' | translate }}\n                  </button>\n                  <ui-divider class=\"py-1\"></ui-divider>\n                  <button\n                    *ngIf=\"!showDeletedRecords\"\n                    uiMenuItem\n                    (click)=\"onDeleteRecord(element, $event)\"\n                  >\n                    <ui-icon icon=\"delete\" variant=\"danger\"></ui-icon>\n                    {{ 'common.delete' | translate }}\n                  </button>\n                  <button\n                    *ngIf=\"showDeletedRecords\"\n                    uiMenuItem\n                    (click)=\"onDeleteRecord(element, $event)\"\n                  >\n                    <ui-icon icon=\"delete_forever\" variant=\"danger\"></ui-icon>\n                    {{ 'components.record.delete.permanently' | translate }}\n                  </button>\n                  <button\n                    *ngIf=\"showDeletedRecords\"\n                    uiMenuItem\n                    (click)=\"onRestoreRecord(element.id, $event)\"\n                  >\n                    <ui-icon icon=\"unarchive\" variant=\"success\"></ui-icon>\n                    {{ 'models.record.restore' | translate }}\n                  </button>\n                </ui-menu>\n              </td>\n            </ng-container>\n          </ng-container>\n          <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n          <tr\n            cdk-row\n            *cdkRowDef=\"let row; columns: displayedColumns\"\n            [routerLink]=\"['./update', row.id]\"\n          ></tr>\n        </table>\n      </div>\n    </div>\n    <ui-paginator\n      [disabled]=\"loadingMore || updating\"\n      [pageSize]=\"pageInfo.pageSize\"\n      [pageIndex]=\"pageInfo.pageIndex\"\n      [totalItems]=\"pageInfo.length\"\n      [ariaLabel]=\"'components.records.paginator.ariaLabel' | translate\"\n      (pageChange)=\"onPage($event)\"\n    >\n    </ui-paginator>\n  </ng-container>\n  <ng-template #emptyTmpl>\n    <shared-empty [title]=\"'kendo.grid.noRecords' | translate\"></shared-empty>\n  </ng-template>\n</ng-container>\n<ng-template #loadingTmpl>\n  <shared-skeleton-table [columns]=\"displayedColumns\" [actions]=\"true\">\n  </shared-skeleton-table>\n</ng-template>\n"
        },
        {
            "name": "FormsComponent",
            "id": "component-FormsComponent-4fba35cbce0e7e1a3402ce29375eb6e65ee0f1ce330f2eabc34a905ccc1b42afebf72abe1f3fcab41424d85c2131f43336673ac5378347a0b8a9e62fa14610ef",
            "file": "apps/back-office/src/app/dashboard/pages/forms/forms.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-forms",
            "styleUrls": [
                "./forms.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./forms.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cachedForms",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Form[]",
                    "optional": false,
                    "description": "<p>Cached forms</p>\n",
                    "line": 61,
                    "rawdescription": "\nCached forms",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 94,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\n    'name',\n    'createdAt',\n    'status',\n    'versionsCount',\n    'recordsCount',\n    'core',\n    'parentForm',\n    'actions',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns to display</p>\n",
                    "line": 48,
                    "rawdescription": "\nColumns to display",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filter",
                    "defaultValue": "{\n    filters: [],\n    logic: 'and',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Filter object</p>\n",
                    "line": 65,
                    "rawdescription": "\nFilter object",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "forms",
                    "defaultValue": "new Array<Form>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Forms</p>\n",
                    "line": 59,
                    "rawdescription": "\nForms",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<FormsQueryResponse>",
                    "optional": false,
                    "description": "<p>Forms query</p>\n",
                    "line": 46,
                    "rawdescription": "\nForms query",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 42,
                    "rawdescription": "\nLoading state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageInfo",
                    "defaultValue": "{\n    pageIndex: 0,\n    pageSize: DEFAULT_PAGE_SIZE,\n    length: 0,\n    endCursor: '',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Page info</p>\n",
                    "line": 74,
                    "rawdescription": "\nPage info",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sort",
                    "defaultValue": "{ active: '', sortDirection: '' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableSort",
                    "optional": false,
                    "description": "<p>Sort object</p>\n",
                    "line": 70,
                    "rawdescription": "\nSort object",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updating",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Updating state</p>\n",
                    "line": 44,
                    "rawdescription": "\nUpdating state",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchForms",
                    "args": [
                        {
                            "name": "refetch",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate forms query.\n\n",
                    "description": "<p>Update forms query.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3971,
                                "end": 3978,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "refetch"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 3965,
                                "end": 3970,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>erase previous query results</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates the form query, and subscribes to the query changes.\n",
                    "description": "<p>Creates the form query, and subscribes to the query changes.</p>\n"
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 269,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplays the AddForm modal.\nCreates a new form on closed if result.\n",
                    "description": "<p>Displays the AddForm modal.\nCreates a new form on closed if result.</p>\n",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "form",
                            "type": "Form",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemoves a form.\n\n",
                    "description": "<p>Removes a form.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5029,
                                "end": 5033,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "form"
                            },
                            "type": "Form",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5023,
                                "end": 5028,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Form to delete.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 5062,
                                "end": 5063,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5056,
                                "end": 5061,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>click event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onFilter",
                    "args": [
                        {
                            "name": "filter",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFilters forms and updates table.\n\n",
                    "description": "<p>Filters forms and updates table.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3645,
                                "end": 3651,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "filter"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3639,
                                "end": 3644,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>filter event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onPage",
                    "args": [
                        {
                            "name": "e",
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles page event.\n\n",
                    "description": "<p>Handles page event.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3294,
                                "end": 3295,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3288,
                                "end": 3293,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>page event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onSort",
                    "args": [
                        {
                            "name": "event",
                            "type": "TableSort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle sort change.\n\n",
                    "description": "<p>Handle sort change.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3810,
                                "end": 3815,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "TableSort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3804,
                                "end": 3809,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>sort event</p>\n"
                        }
                    ]
                },
                {
                    "name": "updateValues",
                    "args": [
                        {
                            "name": "data",
                            "type": "FormsQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 323,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdates local list with given data\n\n",
                    "description": "<p>Updates local list with given data</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8774,
                                "end": 8778,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "FormsQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8768,
                                "end": 8773,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>New values to update forms</p>\n"
                        },
                        {
                            "name": {
                                "pos": 8818,
                                "end": 8825,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "loading"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8812,
                                "end": 8817,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Loading state</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Forms page component</p>\n",
            "rawdescription": "\nForms page component",
            "type": "component",
            "sourceCode": "import { Apollo, QueryRef } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { Router } from '@angular/router';\nimport {\n  AuthService,\n  ConfirmService,\n  Form,\n  UnsubscribeComponent,\n  FormsQueryResponse,\n  DeleteFormMutationResponse,\n  AddFormMutationResponse,\n} from '@oort-front/shared';\nimport { GET_SHORT_FORMS } from './graphql/queries';\nimport { DELETE_FORM, ADD_FORM } from './graphql/mutations';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  getCachedValues,\n  updateQueryUniqueValues,\n} from '../../../utils/update-queries';\nimport { ApolloQueryResult } from '@apollo/client';\nimport { takeUntil } from 'rxjs';\nimport {\n  TableSort,\n  UIPageChangeEvent,\n  handleTablePageEvent,\n} from '@oort-front/ui';\nimport { SnackbarService } from '@oort-front/ui';\n\n/** Default number of items for pagination */\nconst DEFAULT_PAGE_SIZE = 10;\n\n/** Forms page component */\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.scss'],\n})\nexport class FormsComponent extends UnsubscribeComponent implements OnInit {\n  // === DATA ===\n  /** Loading state */\n  public loading = true;\n  /** Updating state */\n  public updating = false;\n  /** Forms query */\n  private formsQuery!: QueryRef<FormsQueryResponse>;\n  /** Columns to display */\n  public displayedColumns = [\n    'name',\n    'createdAt',\n    'status',\n    'versionsCount',\n    'recordsCount',\n    'core',\n    'parentForm',\n    'actions',\n  ];\n  /** Forms */\n  public forms = new Array<Form>();\n  /** Cached forms */\n  public cachedForms: Form[] = [];\n\n  // === FILTERING ===\n  /** Filter object */\n  public filter: any = {\n    filters: [],\n    logic: 'and',\n  };\n  /** Sort object */\n  private sort: TableSort = { active: '', sortDirection: '' };\n\n  // === PAGINATION ===\n  /** Page info */\n  public pageInfo = {\n    pageIndex: 0,\n    pageSize: DEFAULT_PAGE_SIZE,\n    length: 0,\n    endCursor: '',\n  };\n\n  /**\n   * Forms page component\n   *\n   * @param apollo Apollo service\n   * @param dialog Dialog service\n   * @param router Angular router\n   * @param snackBar Shared snackbar\n   * @param authService Shared authentication service\n   * @param confirmService Shared confirmation service\n   * @param translate Angular translate service\n   */\n  constructor(\n    private apollo: Apollo,\n    public dialog: Dialog,\n    private router: Router,\n    private snackBar: SnackbarService,\n    private authService: AuthService,\n    private confirmService: ConfirmService,\n    private translate: TranslateService\n  ) {\n    super();\n  }\n\n  /**\n   * Creates the form query, and subscribes to the query changes.\n   */\n  ngOnInit(): void {\n    this.formsQuery = this.apollo.watchQuery<FormsQueryResponse>({\n      query: GET_SHORT_FORMS,\n      variables: {\n        first: DEFAULT_PAGE_SIZE,\n        afterCursor: null,\n        filter: this.filter,\n        sortField: this.sort?.sortDirection && this.sort.active,\n        sortOrder: this.sort?.sortDirection,\n      },\n    });\n\n    this.formsQuery.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((results) => {\n        this.updateValues(results.data, results.loading);\n      });\n  }\n\n  /**\n   * Handles page event.\n   *\n   * @param e page event.\n   */\n  onPage(e: UIPageChangeEvent): void {\n    const cachedData = handleTablePageEvent(e, this.pageInfo, this.cachedForms);\n    if (cachedData && cachedData.length === this.pageInfo.pageSize) {\n      this.forms = cachedData;\n    } else {\n      this.fetchForms();\n    }\n  }\n\n  /**\n   * Filters forms and updates table.\n   *\n   * @param filter filter event.\n   */\n  onFilter(filter: any): void {\n    this.filter = filter;\n    this.fetchForms(true);\n  }\n\n  /**\n   * Handle sort change.\n   *\n   * @param event sort event\n   */\n  onSort(event: TableSort): void {\n    this.sort = event;\n    this.fetchForms(true);\n  }\n\n  /**\n   * Update forms query.\n   *\n   * @param refetch erase previous query results\n   */\n  private fetchForms(refetch?: boolean): void {\n    this.updating = true;\n    const variables = {\n      first: this.pageInfo.pageSize,\n      afterCursor: refetch ? null : this.pageInfo.endCursor,\n      filter: this.filter,\n      sortField: this.sort?.sortDirection && this.sort.active,\n      sortOrder: this.sort?.sortDirection,\n    };\n\n    const cachedValues: FormsQueryResponse = getCachedValues(\n      this.apollo.client,\n      GET_SHORT_FORMS,\n      variables\n    );\n    if (refetch) {\n      this.cachedForms = [];\n      this.pageInfo.pageIndex = 0;\n    }\n    if (cachedValues) {\n      this.updateValues(cachedValues, false);\n    } else {\n      if (refetch) {\n        this.formsQuery.refetch(variables);\n      } else {\n        this.formsQuery\n          .fetchMore({\n            variables,\n          })\n          .then((results: ApolloQueryResult<FormsQueryResponse>) => {\n            this.updateValues(results.data, results.loading);\n          });\n      }\n    }\n  }\n\n  /**\n   * Removes a form.\n   *\n   * @param form Form to delete.\n   * @param e click event.\n   */\n  onDelete(form: Form, e: any): void {\n    e.stopPropagation();\n    const dialogRef = this.confirmService.openConfirmModal({\n      title: this.translate.instant('common.deleteObject', {\n        name: this.translate.instant('common.form.one'),\n      }),\n      content: this.translate.instant(\n        'components.form.delete.confirmationMessage',\n        {\n          name: form.name,\n        }\n      ),\n      confirmText: this.translate.instant('components.confirmModal.delete'),\n      confirmVariant: 'danger',\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        const id = form.id;\n        this.apollo\n          .mutate<DeleteFormMutationResponse>({\n            mutation: DELETE_FORM,\n            variables: {\n              id,\n            },\n          })\n          .subscribe({\n            next: ({ errors }) => {\n              if (!errors) {\n                this.snackBar.openSnackBar(\n                  this.translate.instant('common.notifications.objectDeleted', {\n                    value: this.translate.instant('common.form.one'),\n                  })\n                );\n                this.forms = this.forms.filter(\n                  (x) =>\n                    x.id !== form.id && form.id !== x.resource?.coreForm?.id\n                );\n              } else {\n                this.snackBar.openSnackBar(\n                  this.translate.instant(\n                    'common.notifications.objectNotDeleted',\n                    {\n                      value: this.translate.instant('common.form.one'),\n                      error: errors ? errors[0].message : '',\n                    }\n                  ),\n                  { error: true }\n                );\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n\n  /**\n   * Displays the AddForm modal.\n   * Creates a new form on closed if result.\n   */\n  async onAdd(): Promise<void> {\n    const { AddFormModalComponent } = await import(\n      '../../../components/add-form-modal/add-form-modal.component'\n    );\n    const dialogRef = this.dialog.open(AddFormModalComponent);\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        const variablesData = { name: value.name };\n        Object.assign(\n          variablesData,\n          value.resource && { resource: value.resource },\n          value.template && { template: value.template }\n        );\n        this.apollo\n          .mutate<AddFormMutationResponse>({\n            mutation: ADD_FORM,\n            variables: variablesData,\n          })\n          .subscribe({\n            next: ({ errors, data }) => {\n              if (errors) {\n                this.snackBar.openSnackBar(\n                  this.translate.instant(\n                    'common.notifications.objectNotCreated',\n                    {\n                      type: this.translate\n                        .instant('common.form.one')\n                        .toLowerCase(),\n                      error: errors ? errors[0].message : '',\n                    }\n                  ),\n                  { error: true }\n                );\n              } else {\n                if (data) {\n                  const { id } = data.addForm;\n                  this.router.navigate(['/forms/' + id + '/builder']);\n                }\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n\n  /**\n   * Updates local list with given data\n   *\n   * @param data New values to update forms\n   * @param loading Loading state\n   */\n  private updateValues(data: FormsQueryResponse, loading: boolean): void {\n    const mappedValues = data.forms?.edges?.map((x) => x.node);\n    this.cachedForms = updateQueryUniqueValues(this.cachedForms, mappedValues);\n    this.pageInfo.length = data.forms.totalCount;\n    this.pageInfo.endCursor = data.forms.pageInfo.endCursor;\n    this.forms = this.cachedForms.slice(\n      this.pageInfo.pageSize * this.pageInfo.pageIndex,\n      this.pageInfo.pageSize * (this.pageInfo.pageIndex + 1)\n    );\n    this.loading = loading;\n    this.updating = loading;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./forms.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Forms page component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 79,
                "rawdescription": "\n\nForms page component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2064,
                            "end": 2070,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2058,
                            "end": 2063,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2098,
                            "end": 2104,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2092,
                            "end": 2097,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2132,
                            "end": 2138,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2126,
                            "end": 2131,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2166,
                            "end": 2174,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2160,
                            "end": 2165,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2203,
                            "end": 2214,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "authService"
                        },
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2197,
                            "end": 2202,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared authentication service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2257,
                            "end": 2271,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2251,
                            "end": 2256,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirmation service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2312,
                            "end": 2321,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2306,
                            "end": 2311,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"mb-8 flex flex-col gap-2\">\n  <div class=\"flex gap-8 justify-between flex-col sm:flex-row\">\n    <!-- FILTERING -->\n    <app-forms-filter\n      #filter\n      (filter)=\"onFilter($event)\"\n      [loading]=\"updating\"\n    ></app-forms-filter>\n    <!-- ACTIONS -->\n    <ui-button\n      icon=\"add\"\n      category=\"secondary\"\n      variant=\"primary\"\n      (click)=\"onAdd()\"\n      *ngIf=\"'create' | able : 'Form'\"\n    >\n      {{ 'models.form.create' | translate }}\n    </ui-button>\n  </div>\n  <ng-container *ngTemplateOutlet=\"filter.expandedFilter\"></ng-container>\n</div>\n<!-- Table container -->\n<div class=\"overflow-x-hidden shadow-2lg\">\n  <!-- Table scroll container -->\n  <div class=\"overflow-x-auto\">\n    <table\n      *ngIf=\"!loading\"\n      cdk-table\n      uiTableWrapper\n      (sortChange)=\"onSort($event)\"\n      [dataSource]=\"forms\"\n    >\n      <ng-container cdkColumnDef=\"name\">\n        <th uiCellHeader uiTableHeaderSort=\"name\" *cdkHeaderCellDef scope=\"col\">\n          <span class=\"headerTitle\">\n            {{ 'common.name' | translate }}\n          </span>\n        </th>\n        <td\n          uiCell\n          *cdkCellDef=\"let element\"\n          class=\"!text-gray-900 !font-medium max-w-[30vw]\"\n        >\n          {{ element.name }}\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"createdAt\">\n        <th\n          uiTableHeaderSort=\"createdAt\"\n          uiCellHeader\n          *cdkHeaderCellDef\n          scope=\"col\"\n        >\n          <span class=\"headerTitle\">\n            {{ 'common.createdOn' | translate }}\n          </span>\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">\n          {{ element.createdAt | sharedDate }}\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"status\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          <span class=\"headerTitle\">\n            {{ 'common.status' | translate }}\n          </span>\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">\n          <shared-status-options\n            [status]=\"element.status\"\n          ></shared-status-options>\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"versionsCount\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          <span class=\"headerTitle\">\n            {{ 'common.history' | translate }}\n          </span>\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">{{ element.versionsCount }}</td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"recordsCount\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          <span class=\"headerTitle\">\n            {{ 'common.record.few' | translate }}\n          </span>\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">{{ element.recordsCount }}</td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"core\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          <span class=\"headerTitle\">\n            {{ 'components.forms.isCore' | translate }}\n          </span>\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">\n          <div uiChipList *ngIf=\"element.core\">\n            <ui-chip class=\"!rounded-lg\" variant=\"primary\">{{\n              'models.form.core' | translate\n            }}</ui-chip>\n          </div>\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"parentForm\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          <span class=\"headerTitle\">\n            {{ 'components.forms.parent' | translate }}\n          </span>\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">\n          <ui-button\n            *ngIf=\"!element.core && element.resource?.coreForm?.name\"\n            [routerLink]=\"[element.resource.coreForm.id + '/builder']\"\n          >\n            {{ element.resource.coreForm.name }}\n          </ui-button>\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"actions\" [stickyEnd]=\"true\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\" class=\"w-16\"></th>\n        <td uiCell *cdkCellDef=\"let element\">\n          <ui-button\n            [isIcon]=\"true\"\n            icon=\"more_vert\"\n            [uiMenuTriggerFor]=\"menu\"\n            (click)=\"$event.stopPropagation()\"\n            [disabled]=\"\n              !(\n                element.canUpdate ||\n                element.canDelete ||\n                element.recordsCount > 0\n              )\n            \"\n            [uiTooltip]=\"'common.actions' | translate\"\n          >\n          </ui-button>\n          <ui-menu #menu>\n            <button\n              uiMenuItem\n              [routerLink]=\"[element.id + '/builder']\"\n              *ngIf=\"element.canUpdate\"\n            >\n              <ui-icon icon=\"edit\" variant=\"grey\"></ui-icon>\n              {{ 'common.edit' | translate }}\n            </button>\n            <ng-container *ngIf=\"element.canSee\">\n              <button uiMenuItem [routerLink]=\"[element.id + '/records']\">\n                <ui-icon icon=\"plagiarism\" variant=\"grey\"></ui-icon>\n                {{\n                  'common.viewObject'\n                    | translate : { name: 'common.record.few' | translate }\n                }}\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"element.canDelete\">\n              <ui-divider class=\"py-1\"></ui-divider>\n              <button uiMenuItem (click)=\"onDelete(element, $event)\">\n                <ui-icon icon=\"delete\" variant=\"danger\"></ui-icon>\n                {{ 'common.delete' | translate }}\n              </button>\n            </ng-container>\n          </ui-menu>\n        </td>\n      </ng-container>\n\n      <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        cdk-row\n        *cdkRowDef=\"let row; columns: displayedColumns\"\n        [ngClass]=\"{\n          'cursor-pointer': row.canCreateRecords && row.status === 'active'\n        }\"\n        [routerLink]=\"\n          row.canCreateRecords && row.status === 'active'\n            ? [row.id + '/answer']\n            : []\n        \"\n      ></tr>\n    </table>\n    <!-- Loading indicator -->\n    <shared-skeleton-table\n      *ngIf=\"loading\"\n      [columns]=\"[\n        'common.name',\n        'common.createdOn',\n        'common.status',\n        'common.history',\n        'common.record.few',\n        'components.forms.isCore',\n        'components.forms.parent'\n      ]\"\n      [actions]=\"true\"\n    >\n    </shared-skeleton-table>\n  </div>\n</div>\n<!-- Pagination -->\n<ui-paginator\n  [disabled]=\"loading || updating\"\n  [pageIndex]=\"pageInfo.pageIndex\"\n  [pageSize]=\"pageInfo.pageSize\"\n  [pageSizeOptions]=\"[10, 25, 50]\"\n  [totalItems]=\"pageInfo.length\"\n  [ariaLabel]=\"'components.forms.paginator.ariaLabel' | translate\"\n  (pageChange)=\"onPage($event)\"\n>\n</ui-paginator>\n"
        },
        {
            "name": "FormsTabComponent",
            "id": "component-FormsTabComponent-b5b9f917a693a1e981c3c81ca4706e8fafcb71eceeab09ce0f3abd5592b2a00b3ab919d63044a64c7ba62063a21e7abcfa2d32964cbe8867e08adb0fa3b5df36",
            "file": "apps/back-office/src/app/dashboard/pages/resource/forms-tab/forms-tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-forms-tab",
            "styleUrls": [
                "./forms-tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./forms-tab.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayedColumnsForms",
                    "defaultValue": "[\n    'name',\n    'createdAt',\n    'status',\n    'recordsCount',\n    'core',\n    '_actions',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "<p>Columns to display</p>\n",
                    "line": 44,
                    "rawdescription": "\n\nColumns to display\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "forms",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Form[]",
                    "optional": false,
                    "description": "<p>Forms</p>\n",
                    "line": 35,
                    "rawdescription": "\n\nForms\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 39,
                    "rawdescription": "\n\nLoading state\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "resource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Resource",
                    "optional": false,
                    "description": "<p>Resource</p>\n",
                    "line": 31,
                    "rawdescription": "\n\nResource\n",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteForm",
                    "args": [
                        {
                            "name": "form",
                            "type": "Form",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemoves a form.\n\n",
                    "description": "<p>Removes a form.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2124,
                                "end": 2128,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "form"
                            },
                            "type": "Form",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2118,
                                "end": 2123,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Form to delete.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2157,
                                "end": 2158,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2151,
                                "end": 2156,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>click event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Forms tab of resource page</p>\n",
            "rawdescription": "\n\nForms tab of resource page\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport {\n  DeleteFormMutationResponse,\n  Form,\n  Resource,\n  ConfirmService,\n  UnsubscribeComponent,\n  ResourceQueryResponse,\n} from '@oort-front/shared';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DELETE_FORM } from './graphql/mutations';\nimport get from 'lodash/get';\nimport { GET_RESOURCE_FORMS } from './graphql/queries';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { SnackbarService } from '@oort-front/ui';\nimport { takeUntil } from 'rxjs';\n\n/**\n *Forms tab of resource page\n */\n@Component({\n  selector: 'app-forms-tab',\n  templateUrl: './forms-tab.component.html',\n  styleUrls: ['./forms-tab.component.scss'],\n})\nexport class FormsTabComponent extends UnsubscribeComponent implements OnInit {\n  /**\n   * Resource\n   */\n  private resource!: Resource;\n  /**\n   * Forms\n   */\n  public forms: Form[] = [];\n  /**\n   * Loading state\n   */\n  public loading = true;\n\n  /**\n   * Columns to display\n   */\n  public displayedColumnsForms: string[] = [\n    'name',\n    'createdAt',\n    'status',\n    'recordsCount',\n    'core',\n    '_actions',\n  ];\n\n  /**\n   * Forms tab of resource page\n   *\n   * @param apollo Apollo service\n   * @param snackBar Shared snackbar service\n   * @param confirmService Shared confirm service\n   * @param translate Angular translate service\n   * @param dialog Dialog service\n   */\n  constructor(\n    private apollo: Apollo,\n    private snackBar: SnackbarService,\n    private confirmService: ConfirmService,\n    private translate: TranslateService,\n    private dialog: Dialog\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    const state = history.state;\n    this.resource = get(state, 'resource', null);\n\n    this.apollo\n      .query<ResourceQueryResponse>({\n        query: GET_RESOURCE_FORMS,\n        variables: {\n          id: this.resource?.id,\n        },\n      })\n      .subscribe(({ data }) => {\n        if (data.resource) {\n          this.forms = data.resource.forms || [];\n        }\n        this.loading = false;\n      });\n  }\n\n  /**\n   * Removes a form.\n   *\n   * @param form Form to delete.\n   * @param e click event.\n   */\n  deleteForm(form: Form, e: any): void {\n    e.stopPropagation();\n    const dialogRef = this.confirmService.openConfirmModal({\n      title: this.translate.instant('common.deleteObject', {\n        name: this.translate.instant('common.form.one'),\n      }),\n      content: this.translate.instant(\n        'components.form.delete.confirmationMessage',\n        {\n          name: form.name,\n        }\n      ),\n      confirmText: this.translate.instant('components.confirmModal.delete'),\n      confirmVariant: 'danger',\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.apollo\n          .mutate<DeleteFormMutationResponse>({\n            mutation: DELETE_FORM,\n            variables: {\n              id: form.id,\n            },\n          })\n          .subscribe({\n            next: ({ errors }) => {\n              if (errors) {\n                this.snackBar.openSnackBar(\n                  this.translate.instant(\n                    'common.notifications.objectNotDeleted',\n                    {\n                      value: this.translate.instant('common.form.one'),\n                      error: errors ? errors[0].message : '',\n                    }\n                  ),\n                  { error: true }\n                );\n              } else {\n                this.snackBar.openSnackBar(\n                  this.translate.instant('common.notifications.objectDeleted', {\n                    value: this.translate.instant('common.form.one'),\n                  })\n                );\n                this.forms = this.forms.filter((x: any) => x.id !== form.id);\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding-top: 16px;\n}\n",
                    "styleUrl": "./forms-tab.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Forms tab of resource page</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 51,
                "rawdescription": "\n\nForms tab of resource page\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1222,
                            "end": 1228,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1216,
                            "end": 1221,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1256,
                            "end": 1264,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1250,
                            "end": 1255,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1301,
                            "end": 1315,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1295,
                            "end": 1300,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1351,
                            "end": 1360,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1345,
                            "end": 1350,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1399,
                            "end": 1405,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1393,
                            "end": 1398,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- Table container -->\n<div class=\"overflow-x-hidden shadow-2lg\">\n  <!-- Table scroll container -->\n  <div class=\"overflow-x-auto\">\n    <table *ngIf=\"!loading\" cdk-table uiTableWrapper [dataSource]=\"forms\">\n      <ng-container cdkColumnDef=\"name\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          {{ 'common.name' | translate }}\n        </th>\n        <td\n          uiCell\n          *cdkCellDef=\"let element\"\n          class=\"!text-gray-900 !font-medium max-w-[30vw]\"\n        >\n          {{ element.name }}\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"createdAt\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          {{ 'common.createdOn' | translate }}\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">\n          {{ element.createdAt | sharedDate }}\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"status\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          {{ 'common.status' | translate }}\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">\n          <shared-status-options\n            [status]=\"element.status\"\n          ></shared-status-options>\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"recordsCount\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          {{ 'common.record.few' | translate }}\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">\n          {{ element.recordsCount }}\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"core\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          {{ 'components.forms.isCore' | translate }}\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">\n          <div uiChipList *ngIf=\"element.core\">\n            <ui-chip class=\"!rounded-lg\" variant=\"primary\">{{\n              'models.form.core' | translate\n            }}</ui-chip>\n          </div>\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"_actions\" [stickyEnd]=\"true\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\" class=\"w-16\"></th>\n        <td uiCell *cdkCellDef=\"let element\">\n          <ui-button\n            [isIcon]=\"true\"\n            icon=\"more_vert\"\n            [uiMenuTriggerFor]=\"resMenu\"\n            (click)=\"$event.stopPropagation()\"\n            [disabled]=\"!(element.canUpdate || element.canDelete)\"\n            [uiTooltip]=\"'common.actions' | translate\"\n          >\n          </ui-button>\n          <ui-menu #resMenu>\n            <button\n              uiMenuItem\n              *ngIf=\"element.canUpdate\"\n              [routerLink]=\"[element.id + '/builder']\"\n            >\n              <ui-icon icon=\"edit\" variant=\"grey\"></ui-icon>\n              {{ 'common.edit' | translate }}\n            </button>\n            <ui-divider class=\"py-1\"></ui-divider>\n            <button\n              uiMenuItem\n              (click)=\"deleteForm(element, $event)\"\n              *ngIf=\"element.canDelete\"\n            >\n              <ui-icon icon=\"delete\" variant=\"danger\"></ui-icon>\n              {{ 'common.delete' | translate }}\n            </button>\n          </ui-menu>\n        </td>\n      </ng-container>\n\n      <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumnsForms\"></tr>\n      <tr\n        cdk-row\n        *cdkRowDef=\"let row; columns: displayedColumnsForms\"\n        [ngClass]=\"{\n          'cursor-pointer': row.canCreateRecords && row.status === 'active'\n        }\"\n        [routerLink]=\"\n          row.canCreateRecords && row.status === 'active'\n            ? [row.id + '/answer']\n            : []\n        \"\n      ></tr>\n    </table>\n    <!-- Skeleton table when loading -->\n    <shared-skeleton-table\n      *ngIf=\"loading\"\n      [columns]=\"[\n        'common.name',\n        'common.createdOn',\n        'common.status',\n        'common.record.few',\n        'components.forms.isCore'\n      ]\"\n      [actions]=\"true\"\n    >\n    </shared-skeleton-table>\n  </div>\n</div>\n"
        },
        {
            "name": "HistoryComponent",
            "id": "component-HistoryComponent-0b378fedf9ecc6660dfcae8b4bd00ee31f1da0dddbb57663fe4cd9bcc8f2fa7e1ca74c39c0eb2a0d74dddc82ca0d78a35f830402017fe2ba4ba61ecaa312ba2b",
            "file": "apps/back-office/src/app/dashboard/pages/form-builder/components/history/history.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-history",
            "styleUrls": [
                "./history.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./history.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nData source",
                    "description": "<p>Data source</p>\n",
                    "line": 14,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "open",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOpen event",
                    "description": "<p>Open event</p>\n",
                    "line": 21,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'createdAt']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "<p>Displayed columns</p>\n",
                    "line": 16,
                    "rawdescription": "\nDisplayed columns"
                }
            ],
            "methodsClass": [
                {
                    "name": "openVersion",
                    "args": [
                        {
                            "name": "version",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpen selected version\n\n",
                    "description": "<p>Open selected version</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 659,
                                "end": 666,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "version"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 653,
                                "end": 658,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>version to display</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Form history component.</p>\n",
            "rawdescription": "\n\nForm history component.\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Form history component.\n */\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss'],\n})\nexport class HistoryComponent {\n  // === DATA ===\n  /** Data source */\n  @Input() dataSource: any[] = [];\n  /** Displayed columns */\n  displayedColumns: string[] = ['id', 'createdAt'];\n\n  // === EMIT THE SELECTED FORM VERSION ===\n  /** Open event */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() open: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Open selected version\n   *\n   * @param version version to display\n   */\n  openVersion(version: any): void {\n    this.open.emit(version);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./history.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<!-- Table container -->\n<div class=\"overflow-x-hidden shadow-2lg\">\n  <!-- Table scroll container -->\n  <div class=\"overflow-x-auto\">\n    <!-- Records table -->\n    <table cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"id\">\n        <th uiCellHeader *cdkHeaderCellDef>{{ 'common.id' | translate }}</th>\n        <td uiCell *cdkCellDef=\"let element\">{{ element.id }}</td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"createdAt\">\n        <th uiCellHeader *cdkHeaderCellDef>\n          {{ 'common.createdOn' | translate }}\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">\n          {{ element.createdAt | sharedDate }}\n        </td>\n      </ng-container>\n      <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        cdk-row\n        *cdkRowDef=\"let row; columns: displayedColumns\"\n        (click)=\"openVersion(row)\"\n      ></tr>\n    </table>\n  </div>\n</div>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-24fd809645114160b8865ce64bdd81d6fc51b1cc8701f6d8c689e2d574cc0d1ab9eda19d939f5121a7aabbf4334a4293aa8ece781ca1920d7f0f6a84b560ef7b",
            "file": "apps/back-office/src/app/application/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Homepage component.</p>\n",
            "rawdescription": "\n\nHomepage component.\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n/**\n * Homepage component.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"flex flex-col gap-8\">\n  <div>{{ 'pages.application.empty.add' | translate }}</div>\n  <div>{{ 'pages.application.empty.customize' | translate }}</div>\n  <div>{{ 'pages.application.empty.create' | translate }}</div>\n</div>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-5603c6de7848da5fe121249d509e5c5259b86ace759fb97c2dd078e6af7b1f6cd447c22110301ac656245a8e8780e1cd8eca548abe954aff6e3ee9d76c67c887-1",
            "file": "apps/back-office/src/app/application/pages/workflow/components/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Application homepage component.</p>\n",
            "rawdescription": "\n\nApplication homepage component.\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n/**\n * Application homepage component.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".home-list {\n  li:not(:last-child) {\n    margin-bottom: 32px;\n  }\n}\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HomeComponent-1",
            "templateData": "<ol class=\"home-list mt-8\">\n  <li>{{ 'pages.workflow.empty.add' | translate }}</li>\n  <li>{{ 'pages.workflow.empty.customize' | translate }}</li>\n</ol>\n"
        },
        {
            "name": "LayoutsTabComponent",
            "id": "component-LayoutsTabComponent-09f2318450f7068f84d65c6c9157e2a6b7b6457cfb2123e64af4348c1b650814ced25de6348290c4a4c5ff9ebf2302a26b011566bc33b850f182668ba3420c76",
            "file": "apps/back-office/src/app/dashboard/pages/resource/layouts-tab/layouts-tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layouts-tab",
            "styleUrls": [
                "./layouts-tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./layouts-tab.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cachedLayouts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Layout[]",
                    "optional": false,
                    "description": "<p>Cached layouts</p>\n",
                    "line": 60,
                    "rawdescription": "\n\nCached layouts\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "displayedColumnsLayouts",
                    "defaultValue": "['name', 'createdAt', '_actions']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "<p>Columns to display</p>\n",
                    "line": 50,
                    "rawdescription": "\n\nColumns to display\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "layouts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Layout[]",
                    "optional": false,
                    "description": "<p>Layouts</p>\n",
                    "line": 41,
                    "rawdescription": "\n\nLayouts\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "layoutsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<ResourceQueryResponse>",
                    "optional": false,
                    "description": "<p>Layouts query</p>\n",
                    "line": 56,
                    "rawdescription": "\n\nLayouts query\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 45,
                    "rawdescription": "\n\nLoading state\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageInfo",
                    "defaultValue": "{\n    pageIndex: 0,\n    pageSize: 10,\n    length: 0,\n    endCursor: '',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Page info</p>\n",
                    "line": 64,
                    "rawdescription": "\n\nPage info\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "resource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Resource",
                    "optional": false,
                    "description": "<p>Resource</p>\n",
                    "line": 37,
                    "rawdescription": "\n\nResource\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchLayouts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFetches layouts from resource.\n\n",
                    "description": "<p>Fetches layouts from resource.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "handleAction",
                    "args": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle action from the data list presentation component\n\n",
                    "description": "<p>Handle action from the data list presentation component</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3721,
                                "end": 3727,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "action"
                            },
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3715,
                                "end": 3720,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>action containing action type and layout item if exists</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAddLayout",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdds a new layout for the resource.\n",
                    "description": "<p>Adds a new layout for the resource.</p>\n",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "onDeleteLayout",
                    "args": [
                        {
                            "name": "layout",
                            "type": "Layout",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 241,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDeletes a layout.\n\n",
                    "description": "<p>Deletes a layout.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6005,
                                "end": 6011,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "layout"
                            },
                            "type": "Layout",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5999,
                                "end": 6004,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Layout to delete</p>\n"
                        }
                    ]
                },
                {
                    "name": "onEditLayout",
                    "args": [
                        {
                            "name": "layout",
                            "type": "Layout",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 208,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdits a layout. Opens a popup for edition.\n\n",
                    "description": "<p>Edits a layout. Opens a popup for edition.</p>\n",
                    "modifierKind": [
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5072,
                                "end": 5078,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "layout"
                            },
                            "type": "Layout",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5066,
                                "end": 5071,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Layout to edit</p>\n"
                        }
                    ]
                },
                {
                    "name": "onPage",
                    "args": [
                        {
                            "name": "e",
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles page event.\n\n",
                    "description": "<p>Handles page event.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2675,
                                "end": 2676,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2669,
                                "end": 2674,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>page event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "updateValues",
                    "args": [
                        {
                            "name": "data",
                            "type": "ResourceQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 276,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate layout data value\n\n",
                    "description": "<p>Update layout data value</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7026,
                                "end": 7030,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "ResourceQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7020,
                                "end": 7025,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>query response data</p>\n"
                        },
                        {
                            "name": {
                                "pos": 7063,
                                "end": 7070,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "loading"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7057,
                                "end": 7062,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>loading status</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Layouts tab of resource page</p>\n",
            "rawdescription": "\n\nLayouts tab of resource page\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  Layout,\n  GridLayoutService,\n  ConfirmService,\n  Resource,\n  UnsubscribeComponent,\n  ResourceQueryResponse,\n} from '@oort-front/shared';\nimport { Apollo, QueryRef } from 'apollo-angular';\nimport get from 'lodash/get';\nimport {\n  getCachedValues,\n  updateQueryUniqueValues,\n} from '../../../../utils/update-queries';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { takeUntil } from 'rxjs';\nimport { UIPageChangeEvent, handleTablePageEvent } from '@oort-front/ui';\nimport { GET_RESOURCE_LAYOUTS } from './graphql/queries';\n\n/**\n * Layouts tab of resource page\n */\n@Component({\n  selector: 'app-layouts-tab',\n  templateUrl: './layouts-tab.component.html',\n  styleUrls: ['./layouts-tab.component.scss'],\n})\nexport class LayoutsTabComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  /**\n   * Resource\n   */\n  public resource!: Resource;\n  /**\n   * Layouts\n   */\n  public layouts: Layout[] = [];\n  /**\n   * Loading state\n   */\n  public loading = true;\n\n  /**\n   * Columns to display\n   */\n  public displayedColumnsLayouts: string[] = ['name', 'createdAt', '_actions'];\n\n  // ==== PAGINATION ====\n  /**\n   * Layouts query\n   */\n  private layoutsQuery!: QueryRef<ResourceQueryResponse>;\n  /**\n   * Cached layouts\n   */\n  private cachedLayouts: Layout[] = [];\n  /**\n   * Page info\n   */\n  public pageInfo = {\n    pageIndex: 0,\n    pageSize: 10,\n    length: 0,\n    endCursor: '',\n  };\n\n  /** @returns True if the layouts tab is empty */\n  get empty(): boolean {\n    return !this.loading && this.layouts.length === 0;\n  }\n\n  /**\n   * Layouts tab of resource page\n   *\n   * @param apollo Apollo service\n   * @param dialog Dialog service\n   * @param gridLayoutService Grid layout service\n   * @param confirmService Confirm service\n   * @param translate Angular translate service\n   */\n  constructor(\n    private apollo: Apollo,\n    private dialog: Dialog,\n    private gridLayoutService: GridLayoutService,\n    private confirmService: ConfirmService,\n    private translate: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    const state = history.state;\n    this.resource = get(state, 'resource', null);\n\n    this.layoutsQuery = this.apollo.watchQuery<ResourceQueryResponse>({\n      query: GET_RESOURCE_LAYOUTS,\n      variables: {\n        id: this.resource?.id,\n        first: this.pageInfo.pageSize,\n        afterCursor: this.pageInfo.endCursor,\n      },\n    });\n\n    this.layoutsQuery.valueChanges.subscribe(({ data, loading }) => {\n      this.updateValues(data, loading);\n    });\n  }\n\n  /**\n   * Handles page event.\n   *\n   * @param e page event.\n   */\n  onPage(e: UIPageChangeEvent): void {\n    const cachedData = handleTablePageEvent(\n      e,\n      this.pageInfo,\n      this.cachedLayouts\n    );\n    if (cachedData && cachedData.length === this.pageInfo.pageSize) {\n      this.layouts = cachedData;\n    } else {\n      this.fetchLayouts();\n    }\n  }\n\n  /**\n   * Fetches layouts from resource.\n   *\n   */\n  private fetchLayouts(): void {\n    this.loading = true;\n    const variables = {\n      id: this.resource.id,\n      first: this.pageInfo.pageSize,\n      afterCursor: this.pageInfo.endCursor,\n    };\n    const cachedValues: ResourceQueryResponse = getCachedValues(\n      this.apollo.client,\n      GET_RESOURCE_LAYOUTS,\n      variables\n    );\n    if (cachedValues) {\n      this.updateValues(cachedValues, false);\n    } else {\n      this.layoutsQuery\n        .fetchMore({\n          variables,\n        })\n        .then((results) => this.updateValues(results.data, results.loading));\n    }\n  }\n\n  /**\n   * Handle action from the data list presentation component\n   *\n   * @param action action containing action type and layout item if exists\n   * @param action.type type of action, add, edit, delete\n   * @param action.item layout item for the given action type\n   */\n  handleAction(action: {\n    type: 'add' | 'edit' | 'delete';\n    item?: Layout | null;\n  }) {\n    if (action.type === 'add') {\n      this.onAddLayout();\n    } else if (action.type === 'edit') {\n      this.onEditLayout(action.item as Layout);\n    } else if (action.type === 'delete') {\n      this.onDeleteLayout(action.item as Layout);\n    }\n  }\n\n  /**\n   * Adds a new layout for the resource.\n   */\n  async onAddLayout(): Promise<void> {\n    const { EditLayoutModalComponent } = await import('@oort-front/shared');\n    const dialogRef = this.dialog.open(EditLayoutModalComponent, {\n      disableClose: true,\n      data: {\n        queryName: this.resource.queryName,\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.gridLayoutService\n          .addLayout(value, this.resource.id)\n          .subscribe(({ data }: any) => {\n            if (data.addLayout) {\n              this.layouts = [...this.layouts, data?.addLayout];\n              this.pageInfo.length += 1;\n            }\n          });\n      }\n    });\n  }\n\n  /**\n   * Edits a layout. Opens a popup for edition.\n   *\n   * @param layout Layout to edit\n   */\n  async onEditLayout(layout: Layout): Promise<void> {\n    const { EditLayoutModalComponent } = await import('@oort-front/shared');\n    const dialogRef = this.dialog.open(EditLayoutModalComponent, {\n      disableClose: true,\n      data: {\n        layout,\n        queryName: this.resource.queryName,\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.gridLayoutService\n          .editLayout(layout, value, this.resource.id)\n          .subscribe(({ data }: any) => {\n            if (data.editLayout) {\n              this.layouts = this.layouts.map((x: any) => {\n                if (x.id === layout.id) {\n                  return data.editLayout;\n                } else {\n                  return x;\n                }\n              });\n            }\n          });\n      }\n    });\n  }\n\n  /**\n   * Deletes a layout.\n   *\n   * @param layout Layout to delete\n   */\n  onDeleteLayout(layout: Layout): void {\n    const dialogRef = this.confirmService.openConfirmModal({\n      title: this.translate.instant('common.deleteObject', {\n        name: this.translate.instant('common.layout.one'),\n      }),\n      content: this.translate.instant(\n        'components.form.layout.delete.confirmationMessage',\n        {\n          name: layout.name,\n        }\n      ),\n      confirmText: this.translate.instant('components.confirmModal.delete'),\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.gridLayoutService\n          .deleteLayout(layout, this.resource.id)\n          .subscribe(({ data }: any) => {\n            if (data.deleteLayout) {\n              this.layouts = this.layouts.filter(\n                (x: any) => x.id !== layout.id\n              );\n              this.pageInfo.length -= 1;\n            }\n          });\n      }\n    });\n  }\n\n  /**\n   * Update layout data value\n   *\n   * @param data query response data\n   * @param loading loading status\n   */\n  private updateValues(data: ResourceQueryResponse, loading: boolean) {\n    if (data.resource) {\n      const mappedValues =\n        data.resource.layouts?.edges.map((x) => x.node) ?? [];\n      this.cachedLayouts = updateQueryUniqueValues(\n        this.cachedLayouts,\n        mappedValues\n      );\n      this.pageInfo.length = data.resource.layouts?.totalCount || 0;\n      this.pageInfo.endCursor = data.resource.layouts?.pageInfo.endCursor || '';\n      this.layouts = this.cachedLayouts.slice(\n        this.pageInfo.pageSize * this.pageInfo.pageIndex,\n        this.pageInfo.pageSize * (this.pageInfo.pageIndex + 1)\n      );\n    }\n    this.loading = loading;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./layouts-tab.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Layouts tab of resource page</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "gridLayoutService",
                        "type": "GridLayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 74,
                "rawdescription": "\n\nLayouts tab of resource page\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1707,
                            "end": 1713,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1701,
                            "end": 1706,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1741,
                            "end": 1747,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1735,
                            "end": 1740,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1775,
                            "end": 1792,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "gridLayoutService"
                        },
                        "type": "GridLayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1769,
                            "end": 1774,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Grid layout service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1825,
                            "end": 1839,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1819,
                            "end": 1824,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1868,
                            "end": 1877,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1862,
                            "end": 1867,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "empty": {
                    "name": "empty",
                    "getSignature": {
                        "name": "empty",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 72,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 1520,
                                "end": 1562,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 1521,
                                    "end": 1528,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>True if the layouts tab is empty</p>\n"
                            }
                        ]
                    }
                }
            },
            "templateData": "<app-data-presentation-list\n  addNewItemButtonMessage=\"components.widget.settings.grid.layouts.add.choice.create\"\n  emptyDataListMessage=\"components.resource.empty.layouts\"\n  [loading]=\"loading\"\n  [dataSource]=\"layouts\"\n  [canUpdate]=\"resource.canUpdate ?? false\"\n  [displayedColumns]=\"displayedColumnsLayouts\"\n  (itemAction)=\"handleAction($event)\"\n>\n  <ng-container ngProjectAs=\"pagination\">\n    <ui-paginator\n      [disabled]=\"loading\"\n      [pageIndex]=\"pageInfo.pageIndex\"\n      [pageSize]=\"pageInfo.pageSize\"\n      [pageSizeOptions]=\"[10, 25, 50]\"\n      [totalItems]=\"pageInfo.length\"\n      (pageChange)=\"onPage($event)\"\n    >\n    </ui-paginator>\n  </ng-container>\n</app-data-presentation-list>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-78988a93d53d119c95db9d579a5e301476ec08a594c1a072f83184c8ca47b16cd408dde0c59d06d3b355f880dfd7b9f68b639fbfb09df244ecf8e16c4df714f6",
            "file": "apps/back-office/src/app/auth/pages/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCheck that user is authenticated, and redirect to main page if true.\n",
                    "description": "<p>Check that user is authenticated, and redirect to main page if true.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Login Page component.</p>\n",
            "rawdescription": "\n\nLogin Page component.\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@oort-front/shared';\n\n/**\n * Login Page component.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  /**\n   * Login Page component.\n   *\n   * @param authService Shared authentication service\n   * @param router Angular router\n   */\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Check that user is authenticated, and redirect to main page if true.\n   */\n  ngOnInit(): void {\n    this.authService.isAuthenticated$.subscribe((res: boolean) => {\n      if (res === true) {\n        this.router.navigate(['/applications']);\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Login Page component.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "rawdescription": "\n\nLogin Page component.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 398,
                            "end": 409,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "authService"
                        },
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 392,
                            "end": 397,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared authentication service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 452,
                            "end": 458,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 446,
                            "end": 451,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ui-spinner\n  class=\"absolute top-0 bottom-0 left-0 right-0 flex-col items-center\"\n></ui-spinner>\n"
        },
        {
            "name": "PositionAttributesComponent",
            "id": "component-PositionAttributesComponent-a321866b393c8aaf1a83e7c1b5fdff7b62476f23574e249ce702ff51ba51f78c3ebd60d87922624eec1ae8bae9a7a41bea90b7cd4f015cf97c8ba089c9c236b9",
            "file": "apps/back-office/src/app/application/pages/position-attributes/position-attributes.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-position",
            "styleUrls": [
                "./position-attributes.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./position-attributes.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backPath",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Back path</p>\n",
                    "line": 32,
                    "rawdescription": "\nBack path",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "categoryName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Category name</p>\n",
                    "line": 26,
                    "rawdescription": "\nCategory name",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['value', 'usersCount']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Table columns</p>\n",
                    "line": 28,
                    "rawdescription": "\nTable columns",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Category id</p>\n",
                    "line": 24,
                    "rawdescription": "\nCategory id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 22,
                    "rawdescription": "\nLoading state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "positionAttributes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PositionAttribute[]",
                    "optional": false,
                    "description": "<p>Position attributes</p>\n",
                    "line": 30,
                    "rawdescription": "\nPosition attributes",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Position attributes component.</p>\n",
            "rawdescription": "\n\nPosition attributes component.\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  PositionAttribute,\n  PositionAttributesQueryResponse,\n  BreadcrumbService,\n} from '@oort-front/shared';\nimport { Apollo } from 'apollo-angular';\nimport { GET_POSITION_ATTRIBUTES_FROM_CATEGORY } from './graphql/queries';\n\n/**\n * Position attributes component.\n */\n@Component({\n  selector: 'app-position',\n  templateUrl: './position-attributes.component.html',\n  styleUrls: ['./position-attributes.component.scss'],\n})\nexport class PositionAttributesComponent implements OnInit {\n  // === DATA ===\n  /** Loading state */\n  public loading = true;\n  /** Category id */\n  public id = '';\n  /** Category name */\n  public categoryName = '';\n  /** Table columns */\n  public displayedColumns = ['value', 'usersCount'];\n  /** Position attributes */\n  public positionAttributes: PositionAttribute[] = [];\n  /** Back path */\n  public backPath = '';\n\n  /**\n   * Position attributes component.\n   *\n   * @param apollo Apollo service\n   * @param route Angular activated route\n   * @param router Angular router\n   * @param breadcrumbService Shared breadcrumb service\n   */\n  constructor(\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private router: Router,\n    private breadcrumbService: BreadcrumbService\n  ) {}\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id') || '';\n    this.backPath = this.router.url.replace(`/${this.id}`, '');\n    this.apollo\n      .query<PositionAttributesQueryResponse>({\n        query: GET_POSITION_ATTRIBUTES_FROM_CATEGORY,\n        variables: {\n          id: this.id,\n        },\n      })\n      .subscribe(({ data, loading }) => {\n        this.positionAttributes = data.positionAttributes;\n        if (this.positionAttributes.length > 0) {\n          this.categoryName = this.positionAttributes[0].category?.title || '';\n          this.breadcrumbService.setBreadcrumb('@attribute', this.categoryName);\n        }\n        this.loading = loading;\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./position-attributes.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Position attributes component.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breadcrumbService",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "rawdescription": "\n\nPosition attributes component.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1017,
                            "end": 1023,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1011,
                            "end": 1016,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1051,
                            "end": 1056,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1045,
                            "end": 1050,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular activated route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1093,
                            "end": 1099,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1087,
                            "end": 1092,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1127,
                            "end": 1144,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "breadcrumbService"
                        },
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1121,
                            "end": 1126,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared breadcrumb service</p>\n"
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ui-spinner *ngIf=\"loading\"></ui-spinner>\n<ng-container *ngIf=\"!loading\">\n  <div class=\"flex justify-start items-center mb-5\">\n    <h1 class=\"overflow-hidden whitespace-nowrap text-ellipsis mb-0\">\n      {{ categoryName }}\n    </h1>\n  </div>\n  <!-- Table container -->\n  <div class=\"overflow-x-hidden shadow-2lg\">\n    <!-- Table scroll container -->\n    <div class=\"overflow-x-auto\">\n      <table cdk-table uiTableWrapper [dataSource]=\"positionAttributes\">\n        <ng-container cdkColumnDef=\"value\">\n          <th uiTableHeaderSort=\"value\" uiCellHeader *cdkHeaderCellDef>\n            <span class=\"headerTitle\">\n              {{ 'common.name' | translate }}\n            </span>\n          </th>\n          <td uiCell *cdkCellDef=\"let element\">{{ element.value }}</td>\n        </ng-container>\n        <ng-container cdkColumnDef=\"usersCount\">\n          <th uiTableHeaderSort=\"usersCount\" uiCellHeader *cdkHeaderCellDef>\n            <span class=\"headerTitle\">\n              {{ 'common.user.few' | translate }}\n            </span>\n          </th>\n          <td uiCell *cdkCellDef=\"let element\">{{ element.usersCount }}</td>\n        </ng-container>\n        <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n        <tr cdk-row *cdkRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n    </div>\n  </div>\n</ng-container>\n"
        },
        {
            "name": "PositionComponent",
            "id": "component-PositionComponent-1bf1463d2c8b24d2085547c5e4a1c08cdaedd62cdc3b92dcb84eff495880a1c3371d3c8b2a20cf662afb19ddea0db36928d88f7be91582b48f2b5f911663d6e5",
            "file": "apps/back-office/src/app/application/pages/position/position.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-position",
            "styleUrls": [
                "./position.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./position.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['title', 'actions']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Table columns</p>\n",
                    "line": 28,
                    "rawdescription": "\nTable columns",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 24,
                    "rawdescription": "\nLoading state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "positionCategories",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "<p>Position categories</p>\n",
                    "line": 26,
                    "rawdescription": "\nPosition categories",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd new position\n",
                    "description": "<p>Add new position</p>\n",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "positionCategory",
                            "type": "PositionAttributeCategory",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDelete position category\n\n",
                    "description": "<p>Delete position category</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2871,
                                "end": 2887,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "positionCategory"
                            },
                            "type": "PositionAttributeCategory",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2865,
                                "end": 2870,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>position category to delete</p>\n"
                        }
                    ]
                },
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "positionCategory",
                            "type": "PositionAttributeCategory",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdit position category\n\n",
                    "description": "<p>Edit position category</p>\n",
                    "modifierKind": [
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2178,
                                "end": 2194,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "positionCategory"
                            },
                            "type": "PositionAttributeCategory",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2172,
                                "end": 2177,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>position category to edit</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Application position component.</p>\n",
            "rawdescription": "\n\nApplication position component.\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  Application,\n  ApplicationService,\n  PositionAttributeCategory,\n  ConfirmService,\n  UnsubscribeComponent,\n} from '@oort-front/shared';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Application position component.\n */\n@Component({\n  selector: 'app-position',\n  templateUrl: './position.component.html',\n  styleUrls: ['./position.component.scss'],\n})\nexport class PositionComponent extends UnsubscribeComponent implements OnInit {\n  // === DATA ===\n  /** Loading state */\n  public loading = true;\n  /** Position categories */\n  public positionCategories: any[] = [];\n  /** Table columns */\n  public displayedColumns = ['title', 'actions'];\n\n  /**\n   * Application position component\n   *\n   * @param dialog Dialog service\n   * @param applicationService Shared application service\n   * @param confirmService Shared confirm service\n   * @param translate Angular translate service\n   */\n  constructor(\n    public dialog: Dialog,\n    private applicationService: ApplicationService,\n    private confirmService: ConfirmService,\n    private translate: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.loading = false;\n    this.applicationService.application$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((application: Application | null) => {\n        if (application) {\n          this.positionCategories =\n            application.positionAttributeCategories || [];\n        } else {\n          this.positionCategories = [];\n        }\n      });\n  }\n\n  /**\n   * Add new position\n   */\n  async onAdd(): Promise<void> {\n    const { PositionModalComponent } = await import(\n      './components/position-modal/position-modal.component'\n    );\n    const dialogRef = this.dialog.open(PositionModalComponent, {\n      data: {\n        add: true,\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value) => {\n      if (value) {\n        this.applicationService.addPositionAttributeCategory(value);\n      }\n    });\n  }\n\n  /**\n   * Edit position category\n   *\n   * @param positionCategory position category to edit\n   */\n  async onEdit(positionCategory: PositionAttributeCategory): Promise<void> {\n    const { PositionModalComponent } = await import(\n      './components/position-modal/position-modal.component'\n    );\n    const dialogRef = this.dialog.open(PositionModalComponent, {\n      data: {\n        edit: true,\n        title: positionCategory.title,\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.applicationService.editPositionAttributeCategory(\n          value,\n          positionCategory\n        );\n      }\n    });\n  }\n\n  /**\n   * Delete position category\n   *\n   * @param positionCategory position category to delete\n   */\n  onDelete(positionCategory: PositionAttributeCategory): void {\n    const dialogRef = this.confirmService.openConfirmModal({\n      title: this.translate.instant(\n        'components.application.positionAttribute.delete.title'\n      ),\n      content: this.translate.instant(\n        'components.application.positionAttribute.delete.confirmationMessage',\n        {\n          name: positionCategory.title,\n        }\n      ),\n      confirmText: this.translate.instant('components.confirmModal.delete'),\n      confirmVariant: 'danger',\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.applicationService.deletePositionAttributeCategory(\n          positionCategory\n        );\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./position.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Application position component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "rawdescription": "\n\nApplication position component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 868,
                            "end": 874,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 862,
                            "end": 867,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 902,
                            "end": 920,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 896,
                            "end": 901,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 960,
                            "end": 974,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 954,
                            "end": 959,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1010,
                            "end": 1019,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1004,
                            "end": 1009,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!loading; else loadingTmpl\">\n  <ng-container *ngIf=\"positionCategories.length\">\n    <div class=\"flex justify-end\">\n      <ng-container *ngTemplateOutlet=\"newPosition\"></ng-container>\n    </div>\n  </ng-container>\n  <ng-template #newPosition>\n    <ui-button\n      icon=\"add\"\n      category=\"secondary\"\n      variant=\"primary\"\n      (click)=\"onAdd()\"\n    >\n      {{ 'pages.application.positionAttributes.create' | translate }}\n    </ui-button>\n  </ng-template>\n  <ng-container *ngIf=\"positionCategories.length; else emptyTmpl\">\n    <!-- Table container -->\n    <div class=\"mt-4 overflow-x-hidden shadow-2lg\">\n      <!-- Table scroll container -->\n      <div class=\"overflow-x-auto\">\n        <table cdk-table uiTableWrapper [dataSource]=\"positionCategories\">\n          <ng-container cdkColumnDef=\"title\">\n            <th uiCellHeader *cdkHeaderCellDef>\n              {{ 'common.title' | translate }}\n            </th>\n            <td\n              uiCell\n              *cdkCellDef=\"let element\"\n              class=\"!text-gray-900 !font-medium\"\n            >\n              {{ element.title }}\n            </td>\n          </ng-container>\n\n          <ng-container cdkColumnDef=\"actions\" [stickyEnd]=\"true\">\n            <th uiCellHeader *cdkHeaderCellDef class=\"w-16\"></th>\n            <td uiCell *cdkCellDef=\"let element\">\n              <ui-button\n                [isIcon]=\"true\"\n                icon=\"more_vert\"\n                [uiMenuTriggerFor]=\"menu\"\n                (click)=\"$event.stopPropagation()\"\n                [uiTooltip]=\"'common.actions' | translate\"\n              >\n              </ui-button>\n              <ui-menu #menu>\n                <button uiMenuItem (click)=\"onEdit(element)\">\n                  <ui-icon icon=\"edit\" variant=\"grey\"></ui-icon>\n                  {{ 'common.edit' | translate }}\n                </button>\n                <ui-divider class=\"py-1\"></ui-divider>\n                <button uiMenuItem (click)=\"onDelete(element)\">\n                  <ui-icon icon=\"delete\" variant=\"danger\"></ui-icon>\n                  {{ 'common.delete' | translate }}\n                </button>\n              </ui-menu>\n            </td>\n          </ng-container>\n\n          <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n          <tr\n            class=\"cursor-pointer\"\n            cdk-row\n            *cdkRowDef=\"let row; columns: displayedColumns\"\n            [routerLink]=\"[row.id]\"\n          ></tr>\n        </table>\n      </div>\n    </div>\n  </ng-container>\n  <ng-template #emptyTmpl>\n    <!-- Empty indicator -->\n    <shared-empty\n      [title]=\"'common.positionCategory.none' | translate\"\n      [footerTemplate]=\"newPosition\"\n    ></shared-empty>\n  </ng-template>\n</ng-container>\n<ng-template #loadingTmpl>\n  <!-- Loading indicator -->\n  <shared-skeleton-table [columns]=\"displayedColumns\" [actions]=\"true\">\n  </shared-skeleton-table>\n</ng-template>\n"
        },
        {
            "name": "PositionModalComponent",
            "id": "component-PositionModalComponent-e18c728e4afa77cfa3ac8c18a2ca1bca1450f0acaec3203fdd3545cc70e7f6c2ed1805342837b96dbdf57dea10f2ccfd61b30d85668a1b6cb495bd4932f04aa7",
            "file": "apps/back-office/src/app/application/pages/position/components/position-modal/position-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-position-modal",
            "styleUrls": [
                "./position-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./position-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "Injected modal data",
                    "line": 57,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogRef<PositionModalComponent>",
                    "optional": false,
                    "description": "Dialog ref",
                    "line": 55,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "positionForm",
                    "defaultValue": "this.fb.group({\n    title: [this.data.title, Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Position reactive form group</p>\n",
                    "line": 39,
                    "rawdescription": "\nPosition reactive form group"
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormWrapperModule",
                    "type": "module"
                },
                {
                    "name": "SpinnerModule",
                    "type": "module"
                },
                {
                    "name": "IconModule",
                    "type": "module"
                },
                {
                    "name": "MenuModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "DialogModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "<p>Add new application position component (modal)</p>\n",
            "rawdescription": "\n\nAdd new application position component (modal)\n",
            "type": "component",
            "sourceCode": "import { Component, Inject } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IconModule } from '@oort-front/ui';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DialogModule } from '@oort-front/ui';\nimport { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport {\n  ButtonModule,\n  MenuModule,\n  SpinnerModule,\n  FormWrapperModule,\n} from '@oort-front/ui';\n\n/**\n * Add new application position component (modal)\n */\n@Component({\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormWrapperModule,\n    SpinnerModule,\n    IconModule,\n    MenuModule,\n    TranslateModule,\n    DialogModule,\n    ButtonModule,\n  ],\n  selector: 'app-position-modal',\n  templateUrl: './position-modal.component.html',\n  styleUrls: ['./position-modal.component.scss'],\n})\nexport class PositionModalComponent {\n  /** Position reactive form group */\n  positionForm = this.fb.group({\n    title: [this.data.title, Validators.required],\n  });\n\n  /**\n   * Add new application position component\n   *\n   * @param fb Angular form builder\n   * @param dialogRef Dialog ref\n   * @param data Injected modal data\n   * @param data.add is it an addition\n   * @param data.edit is it an edition\n   * @param data.title title of the position\n   */\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: DialogRef<PositionModalComponent>,\n    @Inject(DIALOG_DATA)\n    public data: {\n      add: boolean;\n      edit: boolean;\n      title: string;\n    }\n  ) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./position-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Add new application position component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "DialogRef<PositionModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "rawdescription": "\n\nAdd new application position component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1207,
                            "end": 1209,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1201,
                            "end": 1206,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1243,
                            "end": 1252,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialogRef"
                        },
                        "type": "DialogRef<PositionModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1237,
                            "end": 1242,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog ref</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1276,
                            "end": 1280,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "data"
                        },
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1270,
                            "end": 1275,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Injected modal data</p>\n"
                    }
                ]
            },
            "templateData": "<ui-dialog size=\"small\">\n  <ng-container ngProjectAs=\"header\">\n    <h3 class=\"font-semibold\">\n      {{\n        data.add\n          ? ('models.positionAttribute.new' | translate)\n          : ('models.positionAttribute.edit' | translate)\n      }}\n    </h3>\n  </ng-container>\n  <ng-container ngProjectAs=\"content\">\n    <form [formGroup]=\"positionForm\" class=\"flex flex-col\">\n      <div uiFormFieldDirective>\n        <label>{{ 'common.title' | translate }}</label>\n        <input\n          formControlName=\"title\"\n          type=\"text\"\n          [placeholder]=\"\n            data.add ? ('common.placeholder.title' | translate) : data.title\n          \"\n        />\n      </div>\n    </form>\n  </ng-container>\n  <ng-container ngProjectAs=\"actions\">\n    <ui-button [uiDialogClose] variant=\"default\">{{\n      'common.close' | translate\n    }}</ui-button>\n    <ui-button\n      category=\"secondary\"\n      variant=\"primary\"\n      [uiDialogClose]=\"positionForm.value\"\n      cdkFocusInitial\n      [disabled]=\"!positionForm.valid\"\n    >\n      {{ (data.add ? 'common.create' : 'common.update') | translate }}\n    </ui-button>\n  </ng-container>\n</ui-dialog>\n"
        },
        {
            "name": "PreviewToolbarComponent",
            "id": "component-PreviewToolbarComponent-87a695e954b9a7eee855319b3674b5828849945e8a1188c4d533b9b3ab6dc80bfea25231155fdaa0d96327caff69c07759e36a965e4b9fc5a1edf2f18110b65d",
            "file": "apps/back-office/src/app/app-preview/components/preview-toolbar/preview-toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-preview-toolbar",
            "styleUrls": [
                "./preview-toolbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./preview-toolbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCloses the preview toolbar and navigates to main page.\n",
                    "description": "<p>Closes the preview toolbar and navigates to main page.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Displays preview actions on top of the application content, when showing the app with preview capacity.</p>\n",
            "rawdescription": "\n\nDisplays preview actions on top of the application content, when showing the app with preview capacity.\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PreviewService } from '../../../services/preview.service';\n\n/**\n * Displays preview actions on top of the application content, when showing the app with preview capacity.\n */\n@Component({\n  selector: 'app-preview-toolbar',\n  templateUrl: './preview-toolbar.component.html',\n  styleUrls: ['./preview-toolbar.component.scss'],\n})\nexport class PreviewToolbarComponent {\n  /**\n   * Displays preview actions on top of the application content, when showing the app with preview capacity.\n   *\n   * @param router Angular router service\n   * @param previewService Custom preview service\n   */\n  constructor(private router: Router, private previewService: PreviewService) {}\n\n  /**\n   * Closes the preview toolbar and navigates to main page.\n   */\n  onClose(): void {\n    this.previewService.setRole('');\n    this.router.navigate(['/']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./preview-toolbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Displays preview actions on top of the application content, when showing the app with preview capacity.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "previewService",
                        "type": "PreviewService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "rawdescription": "\n\nDisplays preview actions on top of the application content, when showing the app with preview capacity.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 593,
                            "end": 599,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 587,
                            "end": 592,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 635,
                            "end": 649,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "previewService"
                        },
                        "type": "PreviewService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 629,
                            "end": 634,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Custom preview service</p>\n"
                    }
                ]
            },
            "templateData": "<div class=\"flex flex-row py-2 px-4 items-center justify-end h-14 border-b\">\n  <div class=\"flex flex-row gap-2\">\n    <ui-button variant=\"danger\" (click)=\"onClose()\">{{\n      'common.close' | translate\n    }}</ui-button>\n  </div>\n</div>\n"
        },
        {
            "name": "PullJobsComponent",
            "id": "component-PullJobsComponent-fcdb6c9597dd72b38afa7a6d35491fb62a290f03afff9217c5b3aac2550005107d743671aa3426378342ce9a12a082366c5b196d4d288324c5cfe9520e7a711e",
            "file": "apps/back-office/src/app/dashboard/pages/pull-jobs/pull-jobs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pull-jobs",
            "styleUrls": [
                "./pull-jobs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pull-jobs.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cachedPullJobs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PullJob[]",
                    "optional": false,
                    "description": "<p>Cached pull jobs</p>\n",
                    "line": 51,
                    "rawdescription": "\nCached pull jobs",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "channels",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Channel[]",
                    "optional": false,
                    "description": "<p>Channels</p>\n",
                    "line": 58,
                    "rawdescription": "\nChannels",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Used to show popup dialog.",
                    "line": 78,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['name', 'status', 'schedule', 'actions']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "<p>Columns to display</p>\n",
                    "line": 54,
                    "rawdescription": "\nColumns to display",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 45,
                    "rawdescription": "\nLoading state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageInfo",
                    "defaultValue": "{\n    pageIndex: 0,\n    pageSize: ITEMS_PER_PAGE,\n    length: 0,\n    endCursor: '',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Page info</p>\n",
                    "line": 61,
                    "rawdescription": "\nPage info",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pullJobs",
                    "defaultValue": "new Array<PullJob>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Pull jobs</p>\n",
                    "line": 49,
                    "rawdescription": "\nPull jobs",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pullJobsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<PullJobsNodesQueryResponse>",
                    "optional": false,
                    "description": "<p>Pull jobs query</p>\n",
                    "line": 47,
                    "rawdescription": "\nPull jobs query",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplays the AddSubscription modal.\nCreates the pull job on close.\n",
                    "description": "<p>Displays the AddSubscription modal.\nCreates the pull job on close.</p>\n",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 233,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDeletes a pull job.\n\n",
                    "description": "<p>Deletes a pull job.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6901,
                                "end": 6908,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "element"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6895,
                                "end": 6900,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>pull job to delete.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 305,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdits a pull job.\n\n",
                    "description": "<p>Edits a pull job.</p>\n",
                    "modifierKind": [
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9454,
                                "end": 9461,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "element"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9448,
                                "end": 9453,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>pull job to edit.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onPage",
                    "args": [
                        {
                            "name": "e",
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles page event.\n\n",
                    "description": "<p>Handles page event.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2746,
                                "end": 2747,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2740,
                                "end": 2745,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>page event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "updateValues",
                    "args": [
                        {
                            "name": "data",
                            "type": "PullJobsNodesQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 397,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdates local list with given data\n\n",
                    "description": "<p>Updates local list with given data</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 12636,
                                "end": 12640,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "PullJobsNodesQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 12630,
                                "end": 12635,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>New values to update forms</p>\n"
                        },
                        {
                            "name": {
                                "pos": 12680,
                                "end": 12687,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "loading"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 12674,
                                "end": 12679,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Loading state</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Shows all pull-jobs available.</p>\n",
            "rawdescription": "\n\nShows all pull-jobs available.\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Dialog } from '@angular/cdk/dialog';\nimport {\n  AddPullJobMutationResponse,\n  Channel,\n  DeletePullJobMutationResponse,\n  EditPullJobMutationResponse,\n  PullJob,\n  ConfirmService,\n  UnsubscribeComponent,\n  PullJobsNodesQueryResponse,\n} from '@oort-front/shared';\nimport { Apollo, QueryRef } from 'apollo-angular';\nimport { GET_PULL_JOBS } from './graphql/queries';\nimport {\n  ADD_PULL_JOB,\n  DELETE_PULL_JOB,\n  EDIT_PULL_JOB,\n} from './graphql/mutations';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ApolloQueryResult } from '@apollo/client';\nimport {\n  getCachedValues,\n  updateQueryUniqueValues,\n} from '../../../utils/update-queries';\nimport { takeUntil } from 'rxjs';\nimport { SnackbarService, UIPageChangeEvent } from '@oort-front/ui';\n\n/**\n * Limit of pull jobs shown at once.\n */\nconst ITEMS_PER_PAGE = 10;\n\n/**\n * Shows all pull-jobs available.\n */\n@Component({\n  selector: 'app-pull-jobs',\n  templateUrl: './pull-jobs.component.html',\n  styleUrls: ['./pull-jobs.component.scss'],\n})\nexport class PullJobsComponent extends UnsubscribeComponent implements OnInit {\n  // === DATA ===\n  /** Loading state */\n  public loading = true;\n  /** Pull jobs query */\n  private pullJobsQuery!: QueryRef<PullJobsNodesQueryResponse>;\n  /** Pull jobs */\n  public pullJobs = new Array<PullJob>();\n  /** Cached pull jobs */\n  public cachedPullJobs: PullJob[] = [];\n\n  /** Columns to display */\n  public displayedColumns: string[] = ['name', 'status', 'schedule', 'actions'];\n\n  // === SUBSCRIPTIONS ===\n  /** Channels */\n  private channels: Channel[] = [];\n\n  /** Page info */\n  public pageInfo = {\n    pageIndex: 0,\n    pageSize: ITEMS_PER_PAGE,\n    length: 0,\n    endCursor: '',\n  };\n\n  /**\n   * PullJobsComponent constructor.\n   *\n   * @param dialog Used to show popup dialog.\n   * @param apollo Loads the pull jobs.\n   * @param snackBar Service used to show a snackbar.\n   * @param confirmService Shared confirm service\n   * @param translate Service used to get the translations.\n   */\n  constructor(\n    public dialog: Dialog,\n    private apollo: Apollo,\n    private snackBar: SnackbarService,\n    private confirmService: ConfirmService,\n    private translate: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.pullJobsQuery = this.apollo.watchQuery<PullJobsNodesQueryResponse>({\n      query: GET_PULL_JOBS,\n      variables: {\n        first: ITEMS_PER_PAGE,\n        afterCursor: this.pageInfo.endCursor,\n      },\n    });\n\n    this.pullJobsQuery.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((results) => {\n        this.updateValues(results.data, results.loading);\n      });\n  }\n\n  /**\n   * Handles page event.\n   *\n   * @param e page event.\n   */\n  onPage(e: UIPageChangeEvent): void {\n    this.pageInfo.pageIndex = e.pageIndex;\n    if (\n      ((e.pageIndex > e.previousPageIndex &&\n        e.pageIndex * this.pageInfo.pageSize >= this.cachedPullJobs.length) ||\n        e.pageSize > this.pageInfo.pageSize) &&\n      e.totalItems > this.cachedPullJobs.length\n    ) {\n      this.loading = true;\n      const variables = {\n        first: ITEMS_PER_PAGE,\n        afterCursor: this.pageInfo.endCursor,\n      };\n      const cachedValues: PullJobsNodesQueryResponse = getCachedValues(\n        this.apollo.client,\n        GET_PULL_JOBS,\n        variables\n      );\n      if (cachedValues) {\n        this.updateValues(cachedValues, false);\n      } else {\n        this.pullJobsQuery\n          .fetchMore({ variables })\n          .then((results: ApolloQueryResult<PullJobsNodesQueryResponse>) => {\n            this.updateValues(results.data, results.loading);\n          });\n      }\n    } else {\n      this.pullJobs = this.cachedPullJobs.slice(\n        ITEMS_PER_PAGE * this.pageInfo.pageIndex,\n        ITEMS_PER_PAGE * (this.pageInfo.pageIndex + 1)\n      );\n    }\n  }\n\n  /**\n   * Displays the AddSubscription modal.\n   * Creates the pull job on close.\n   */\n  async onAdd(): Promise<void> {\n    const { EditPullJobModalComponent } = await import(\n      './components/edit-pull-job-modal/edit-pull-job-modal.component'\n    );\n    const dialogRef = this.dialog.open(EditPullJobModalComponent, {\n      autoFocus: false,\n      data: {\n        channels: this.channels,\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        const variables = {\n          name: value.name,\n          status: value.status,\n          apiConfiguration: value.apiConfiguration,\n        };\n        Object.assign(\n          variables,\n          value.url && { url: value.url },\n          value.path && { path: value.path },\n          value.schedule && { schedule: value.schedule },\n          value.convertTo && { convertTo: value.convertTo },\n          value.channel && { channel: value.channel },\n          value.rawMapping && { mapping: JSON.parse(value.rawMapping) },\n          value.uniqueIdentifiers && {\n            uniqueIdentifiers: value.uniqueIdentifiers,\n          }\n        );\n        this.apollo\n          .mutate<AddPullJobMutationResponse>({\n            mutation: ADD_PULL_JOB,\n            variables,\n          })\n          .subscribe({\n            next: ({ errors, data }) => {\n              if (errors) {\n                this.snackBar.openSnackBar(\n                  this.translate.instant(\n                    'common.notifications.objectNotCreated',\n                    {\n                      type: this.translate\n                        .instant('common.pullJob.one')\n                        .toLowerCase(),\n                      error: errors ? errors[0].message : '',\n                    }\n                  ),\n                  { error: true }\n                );\n              } else {\n                if (data?.addPullJob) {\n                  this.snackBar.openSnackBar(\n                    this.translate.instant(\n                      'common.notifications.objectCreated',\n                      {\n                        type: this.translate.instant('common.pullJob.one'),\n                        value: value.name,\n                      }\n                    )\n                  );\n                  if (this.cachedPullJobs.length === this.pageInfo.length) {\n                    this.cachedPullJobs = this.cachedPullJobs.concat([\n                      data?.addPullJob,\n                    ]);\n                    this.pullJobs = this.cachedPullJobs.slice(\n                      ITEMS_PER_PAGE * this.pageInfo.pageIndex,\n                      ITEMS_PER_PAGE * (this.pageInfo.pageIndex + 1)\n                    );\n                  }\n                  this.pageInfo.length += 1;\n                }\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n\n  /**\n   * Deletes a pull job.\n   *\n   * @param element pull job to delete.\n   */\n  onDelete(element: any): void {\n    if (element) {\n      const dialogRef = this.confirmService.openConfirmModal({\n        title: this.translate.instant('components.pullJob.delete.title'),\n        content: this.translate.instant(\n          'components.pullJob.delete.confirmationMessage',\n          {\n            name: element.name,\n          }\n        ),\n        confirmText: this.translate.instant('components.confirmModal.delete'),\n        confirmVariant: 'danger',\n      });\n      dialogRef.closed\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((value: any) => {\n          if (value) {\n            this.apollo\n              .mutate<DeletePullJobMutationResponse>({\n                mutation: DELETE_PULL_JOB,\n                variables: {\n                  id: element.id,\n                },\n              })\n              .subscribe({\n                next: ({ errors, data }) => {\n                  if (errors) {\n                    this.snackBar.openSnackBar(\n                      this.translate.instant(\n                        'common.notifications.objectNotDeleted',\n                        {\n                          value: this.translate.instant('common.pullJob.one'),\n                          error: errors ? errors[0].message : '',\n                        }\n                      ),\n                      { error: true }\n                    );\n                  } else {\n                    if (data?.deletePullJob) {\n                      this.snackBar.openSnackBar(\n                        this.translate.instant(\n                          'common.notifications.objectDeleted',\n                          {\n                            value: this.translate.instant('common.pullJob.one'),\n                          }\n                        )\n                      );\n                      this.cachedPullJobs = this.cachedPullJobs.filter(\n                        (x) => x.id !== data?.deletePullJob.id\n                      );\n                      this.pageInfo.length -= 1;\n                      this.pullJobs = this.cachedPullJobs.slice(\n                        ITEMS_PER_PAGE * this.pageInfo.pageIndex,\n                        ITEMS_PER_PAGE * (this.pageInfo.pageIndex + 1)\n                      );\n                    }\n                  }\n                },\n                error: (err) => {\n                  this.snackBar.openSnackBar(err.message, { error: true });\n                },\n              });\n          }\n        });\n    }\n  }\n\n  /**\n   * Edits a pull job.\n   *\n   * @param element pull job to edit.\n   */\n  async onEdit(element: any): Promise<void> {\n    const { EditPullJobModalComponent } = await import(\n      './components/edit-pull-job-modal/edit-pull-job-modal.component'\n    );\n    const dialogRef = this.dialog.open(EditPullJobModalComponent, {\n      data: {\n        channels: this.channels,\n        pullJob: element,\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        const variables = {\n          id: element.id,\n        };\n        Object.assign(\n          variables,\n          value.name && { name: value.name },\n          value.status && { status: value.status },\n          value.apiConfiguration && {\n            apiConfiguration: value.apiConfiguration,\n          },\n          value.url && { url: value.url },\n          value.path && { path: value.path },\n          value.schedule && { schedule: value.schedule },\n          value.convertTo && { convertTo: value.convertTo },\n          value.channel && { channel: value.channel },\n          value.rawMapping && { mapping: JSON.parse(value.rawMapping) },\n          value.uniqueIdentifiers && {\n            uniqueIdentifiers: value.uniqueIdentifiers,\n          }\n        );\n        this.apollo\n          .mutate<EditPullJobMutationResponse>({\n            mutation: EDIT_PULL_JOB,\n            variables,\n          })\n          .subscribe({\n            next: ({ errors, data }) => {\n              if (errors) {\n                this.snackBar.openSnackBar(\n                  this.translate.instant(\n                    'common.notifications.objectNotUpdated',\n                    {\n                      value: this.translate.instant('common.pullJob.one'),\n                      error: errors ? errors[0].message : '',\n                    }\n                  ),\n                  { error: true }\n                );\n              } else {\n                if (data?.editPullJob) {\n                  this.snackBar.openSnackBar(\n                    this.translate.instant(\n                      'common.notifications.objectUpdated',\n                      {\n                        type: this.translate\n                          .instant('common.pullJob.one')\n                          .toLowerCase(),\n                        value: value.name,\n                      }\n                    )\n                  );\n                  this.cachedPullJobs = this.cachedPullJobs.map(\n                    (pullJob: PullJob) => {\n                      if (pullJob.id === data?.editPullJob.id) {\n                        pullJob = data?.editPullJob || pullJob;\n                      }\n                      return pullJob;\n                    }\n                  );\n                  this.pullJobs = this.cachedPullJobs.slice(\n                    ITEMS_PER_PAGE * this.pageInfo.pageIndex,\n                    ITEMS_PER_PAGE * (this.pageInfo.pageIndex + 1)\n                  );\n                }\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n\n  /**\n   * Updates local list with given data\n   *\n   * @param data New values to update forms\n   * @param loading Loading state\n   */\n  private updateValues(\n    data: PullJobsNodesQueryResponse,\n    loading: boolean\n  ): void {\n    const mappedValues = data.pullJobs.edges.map((x) => x.node);\n    this.cachedPullJobs = updateQueryUniqueValues(\n      this.cachedPullJobs,\n      mappedValues\n    );\n    this.pageInfo.length = data.pullJobs.totalCount;\n    this.pageInfo.endCursor = data.pullJobs.pageInfo.endCursor;\n    this.pullJobs = this.cachedPullJobs.slice(\n      ITEMS_PER_PAGE * this.pageInfo.pageIndex,\n      ITEMS_PER_PAGE * (this.pageInfo.pageIndex + 1)\n    );\n    this.loading = loading;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pull-jobs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>PullJobsComponent constructor.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 66,
                "rawdescription": "\n\nPullJobsComponent constructor.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1817,
                            "end": 1823,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1811,
                            "end": 1816,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Used to show popup dialog.</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1863,
                            "end": 1869,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1857,
                            "end": 1862,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Loads the pull jobs.</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1903,
                            "end": 1911,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1897,
                            "end": 1902,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Service used to show a snackbar.</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1957,
                            "end": 1971,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1951,
                            "end": 1956,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2007,
                            "end": 2016,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2001,
                            "end": 2006,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Service used to get the translations.</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!loading; else loadingTmpl\">\n  <ng-container *ngIf=\"pullJobs.length\">\n    <div class=\"flex justify-end\">\n      <ng-container *ngTemplateOutlet=\"newPulljob\"></ng-container>\n    </div>\n  </ng-container>\n  <ng-template #newPulljob>\n    <ui-button\n      icon=\"add\"\n      category=\"secondary\"\n      variant=\"primary\"\n      (click)=\"onAdd()\"\n    >\n      {{ 'pages.pullJobs.create' | translate }}\n    </ui-button>\n  </ng-template>\n  <ng-container *ngIf=\"pullJobs.length; else emptyTmpl\">\n    <!-- Table container -->\n    <div class=\"mt-4 overflow-x-hidden shadow-2lg\">\n      <!-- Table scroll container -->\n      <div class=\"overflow-x-auto\">\n        <table cdk-table uiTableWrapper [dataSource]=\"pullJobs\">\n          <ng-container cdkColumnDef=\"name\">\n            <th uiCellHeader *cdkHeaderCellDef>\n              {{ 'common.name' | translate }}\n            </th>\n            <td\n              uiCell\n              *cdkCellDef=\"let element\"\n              class=\"!text-gray-900 !font-medium max-w-[30vw]\"\n            >\n              {{ element.name }}\n            </td>\n          </ng-container>\n          <ng-container cdkColumnDef=\"status\">\n            <th uiCellHeader *cdkHeaderCellDef>\n              {{ 'common.status' | translate }}\n            </th>\n            <td uiCell *cdkCellDef=\"let element\">\n              <shared-status-options\n                [status]=\"element.status\"\n              ></shared-status-options>\n            </td>\n          </ng-container>\n          <!-- <ng-container cdkColumnDef=\"apiConfiguration\">\n            <th uiCellHeader *cdkHeaderCellDef>\n              {{ 'common.apiConfiguration.one' | translate }}\n            </th>\n            <td uiCell *cdkCellDef=\"let element\">\n              {{ element.apiConfiguration ? element.apiConfiguration.name : '-' }}\n            </td>\n          </ng-container> -->\n          <ng-container cdkColumnDef=\"schedule\">\n            <th uiCellHeader *cdkHeaderCellDef>\n              {{ 'models.pullJob.nextIteration' | translate }}\n            </th>\n            <td uiCell *cdkCellDef=\"let element\">\n              {{ element.schedule | sharedCronParser | sharedDate : 'short' }}\n            </td>\n          </ng-container>\n          <!-- <ng-container cdkColumnDef=\"convertTo\">\n            <th uiCellHeader *cdkHeaderCellDef>\n              {{ 'components.record.convert.select' | translate }}\n            </th>\n            <td uiCell *cdkCellDef=\"let element\">\n              {{ element.convertTo ? element.convertTo.name : '-' }}\n            </td>\n          </ng-container> -->\n          <ng-container cdkColumnDef=\"actions\" [stickyEnd]=\"true\">\n            <th uiCellHeader *cdkHeaderCellDef class=\"w-16\"></th>\n            <td uiCell *cdkCellDef=\"let element\">\n              <ui-button\n                [isIcon]=\"true\"\n                icon=\"more_vert\"\n                [uiMenuTriggerFor]=\"menu\"\n                (click)=\"$event.stopPropagation()\"\n                [uiTooltip]=\"'common.actions' | translate\"\n              >\n              </ui-button>\n              <ui-menu #menu>\n                <button uiMenuItem (click)=\"onEdit(element)\">\n                  <ui-icon icon=\"edit\" variant=\"grey\"></ui-icon>\n                  {{ 'common.edit' | translate }}\n                </button>\n                <ui-divider class=\"py-1\"></ui-divider>\n                <button uiMenuItem (click)=\"onDelete(element)\">\n                  <ui-icon icon=\"delete\" variant=\"danger\"></ui-icon>\n                  {{ 'common.delete' | translate }}\n                </button>\n              </ui-menu>\n            </td>\n          </ng-container>\n          <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n          <tr *cdkRowDef=\"let row; columns: displayedColumns\" cdk-row></tr>\n        </table>\n      </div>\n    </div>\n  </ng-container>\n  <ng-template #emptyTmpl>\n    <!-- Empty indicator -->\n    <shared-empty\n      [title]=\"'common.pullJob.none' | translate\"\n      [footerTemplate]=\"newPulljob\"\n    ></shared-empty>\n  </ng-template>\n</ng-container>\n<ng-template #loadingTmpl>\n  <!-- Loading indicator -->\n  <shared-skeleton-table\n    [columns]=\"[\n      'common.name',\n      'common.status',\n      'models.pullJob.nextIteration',\n    ]\"\n    [actions]=\"true\"\n  >\n  </shared-skeleton-table>\n</ng-template>\n\n<ui-paginator\n  *ngIf=\"pullJobs.length\"\n  [disabled]=\"loading\"\n  [pageSize]=\"pageInfo.pageSize\"\n  [pageIndex]=\"pageInfo.pageIndex\"\n  [pageSizeOptions]=\"[10, 25, 50]\"\n  [totalItems]=\"pageInfo.length\"\n  [ariaLabel]=\"'components.pullJob.paginator.ariaLabel' | translate\"\n  (pageChange)=\"onPage($event)\"\n>\n</ui-paginator>\n"
        },
        {
            "name": "RecordsTabComponent",
            "id": "component-RecordsTabComponent-6b2157719dffd1742d602f88b762b6d379f8210374cc0070da12aebe67f1655e49d03613129cd68e5581ae3f66f27b731b606f425f4d9780dbfb5dc182824e62",
            "file": "apps/back-office/src/app/dashboard/pages/resource/records-tab/records-tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-records-tab",
            "styleUrls": [
                "./records-tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./records-tab.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cachedRecords",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record[]",
                    "optional": false,
                    "description": "<p>Cached records.</p>\n",
                    "line": 61,
                    "rawdescription": "\n\nCached records.\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dataSource",
                    "defaultValue": "new Array<Record>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Data source for records.</p>\n",
                    "line": 57,
                    "rawdescription": "\n\nData source for records.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumnsRecords",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "<p>Columns to display.</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nColumns to display.\n"
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state.</p>\n",
                    "line": 91,
                    "rawdescription": "\n\nLoading state.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageInfo",
                    "defaultValue": "{\n    pageIndex: 0,\n    pageSize: ITEMS_PER_PAGE,\n    length: 0,\n    endCursor: '',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Page info.</p>\n",
                    "line": 82,
                    "rawdescription": "\n\nPage info.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "recordsDefaultColumns",
                    "defaultValue": "RECORDS_DEFAULT_COLUMNS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "<p>Default columns for records.</p>\n",
                    "line": 69,
                    "rawdescription": "\n\nDefault columns for records.\n"
                },
                {
                    "name": "recordsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<ResourceRecordsNodesQueryResponse>",
                    "optional": false,
                    "description": "<p>Query to get records.</p>\n",
                    "line": 53,
                    "rawdescription": "\n\nQuery to get records.\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "resource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Resource",
                    "optional": false,
                    "description": "<p>Resource.</p>\n",
                    "line": 65,
                    "rawdescription": "\n\nResource.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showDeletedRecords",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Show deleted records.</p>\n",
                    "line": 78,
                    "rawdescription": "\n\nShow deleted records.\n"
                },
                {
                    "name": "showUpload",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Upload state.</p>\n",
                    "line": 95,
                    "rawdescription": "\n\nUpload state.\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteRecord",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSends mutation to delete record.\n\n",
                    "description": "<p>Sends mutation to delete record.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4478,
                                "end": 4480,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4472,
                                "end": 4477,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Id of record to delete.</p>\n"
                        }
                    ]
                },
                {
                    "name": "fetchRecords",
                    "args": [
                        {
                            "name": "refetch",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 423,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFetch records, using GraphQL\n\n",
                    "description": "<p>Fetch records, using GraphQL</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 10684,
                                "end": 10691,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "refetch"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 10678,
                                "end": 10683,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>rebuild query</p>\n"
                        }
                    ]
                },
                {
                    "name": "filterTemplates",
                    "args": [
                        {
                            "name": "record",
                            "type": "Record",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Form[]",
                    "typeParameters": [],
                    "line": 276,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet list of forms filtering by record form.\n\n",
                    "description": "<p>Get list of forms filtering by record form.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6958,
                                "end": 6964,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "record"
                            },
                            "type": "Record",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6952,
                                "end": 6957,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Record to filter templates with.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 7004,
                                "end": 7011,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>list of different forms than the one used to create the record.</p>\n"
                        }
                    ]
                },
                {
                    "name": "formatValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 400,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormats the passed value to be readable\n\n",
                    "description": "<p>Formats the passed value to be readable</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 10199,
                                "end": 10204,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 10193,
                                "end": 10198,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Value to format</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 10227,
                                "end": 10234,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Formatted value</p>\n"
                        }
                    ]
                },
                {
                    "name": "handleRecordMutationResponse",
                    "args": [
                        {
                            "name": "messageKeys",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "errors",
                            "type": " | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 214,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle record mutation response\n\n",
                    "description": "<p>Handle record mutation response</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5222,
                                "end": 5233,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "messageKeys"
                            },
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5216,
                                "end": 5221,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Message keys containing success or error response messages</p>\n"
                        },
                        {
                            "name": {
                                "pos": 5434,
                                "end": 5440,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "errors"
                            },
                            "type": " | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5399,
                                "end": 5404,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>error array response if any</p>\n",
                            "typeExpression": {
                                "pos": 5405,
                                "end": 5433,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 5406,
                                    "end": 5432,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 189,
                                    "types": [
                                        {
                                            "pos": 5406,
                                            "end": 5420,
                                            "flags": 8388608,
                                            "modifierFlagsCache": 0,
                                            "transformFlags": 1,
                                            "kind": 185,
                                            "elementType": {
                                                "pos": 5406,
                                                "end": 5418,
                                                "flags": 8388608,
                                                "modifierFlagsCache": 0,
                                                "transformFlags": 1,
                                                "kind": 180,
                                                "typeName": {
                                                    "pos": 5406,
                                                    "end": 5418,
                                                    "flags": 8388608,
                                                    "modifierFlagsCache": 0,
                                                    "transformFlags": 0,
                                                    "kind": 79,
                                                    "escapedText": "GraphQLError"
                                                }
                                            }
                                        },
                                        {
                                            "pos": 5422,
                                            "end": 5432,
                                            "flags": 8388608,
                                            "modifierFlagsCache": 0,
                                            "transformFlags": 1,
                                            "kind": 155
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDeleteRecord",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDeletes a record if authorized, open a confirmation modal if it's a hard delete.\n\n",
                    "description": "<p>Deletes a record if authorized, open a confirmation modal if it&#39;s a hard delete.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3538,
                                "end": 3545,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "element"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3532,
                                "end": 3537,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Element to delete.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 3577,
                                "end": 3578,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3571,
                                "end": 3576,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>click event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onDownload",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 317,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDownloads the list of records of the resource.\n\n",
                    "description": "<p>Downloads the list of records of the resource.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8134,
                                "end": 8138,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "type"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8128,
                                "end": 8133,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Type of the document to download ( excel or csv ).</p>\n"
                        }
                    ]
                },
                {
                    "name": "onDownloadTemplate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 331,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the records template, for upload.\n",
                    "description": "<p>Get the records template, for upload.</p>\n"
                },
                {
                    "name": "onPage",
                    "args": [
                        {
                            "name": "e",
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 381,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles page event.\n\n",
                    "description": "<p>Handles page event.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9808,
                                "end": 9809,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9802,
                                "end": 9807,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>page event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onRestoreRecord",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 245,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRestores an archived record.\n\n",
                    "description": "<p>Restores an archived record.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6182,
                                "end": 6184,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6176,
                                "end": 6181,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Id of record to restore.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 6222,
                                "end": 6223,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6216,
                                "end": 6221,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>click event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onSwitchView",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 370,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggle archive / active view.\n\n",
                    "description": "<p>Toggle archive / active view.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9593,
                                "end": 9594,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9587,
                                "end": 9592,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>click event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "setDisplayedColumns",
                    "args": [
                        {
                            "name": "core",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 287,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChanges the list of displayed columns.\n\n",
                    "description": "<p>Changes the list of displayed columns.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7307,
                                "end": 7311,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "core"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7301,
                                "end": 7306,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Is the form core.</p>\n"
                        }
                    ]
                },
                {
                    "name": "updateValues",
                    "args": [
                        {
                            "name": "data",
                            "type": "ResourceRecordsNodesQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 462,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate record data value\n\n",
                    "description": "<p>Update record data value</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 11664,
                                "end": 11668,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "ResourceRecordsNodesQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 11658,
                                "end": 11663,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>query response data</p>\n"
                        },
                        {
                            "name": {
                                "pos": 11701,
                                "end": 11708,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "loading"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 11695,
                                "end": 11700,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>loading status</p>\n"
                        }
                    ]
                },
                {
                    "name": "uploadFileData",
                    "args": [
                        {
                            "name": "file",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 349,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalls rest endpoint to upload new records for the resource.\n\n",
                    "description": "<p>Calls rest endpoint to upload new records for the resource.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9052,
                                "end": 9056,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "file"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9046,
                                "end": 9051,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>File to upload.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Records tab of resource page.</p>\n",
            "rawdescription": "\n\nRecords tab of resource page.\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  Record,\n  Form,\n  ConfirmService,\n  Resource,\n  DownloadService,\n  UnsubscribeComponent,\n  ResourceRecordsNodesQueryResponse,\n  DeleteRecordMutationResponse,\n  RestoreRecordMutationResponse,\n} from '@oort-front/shared';\nimport { Apollo, QueryRef } from 'apollo-angular';\nimport get from 'lodash/get';\nimport {\n  getCachedValues,\n  updateQueryUniqueValues,\n} from '../../../../utils/update-queries';\nimport { DELETE_RECORD, RESTORE_RECORD } from '../graphql/mutations';\nimport { GET_RESOURCE_RECORDS } from './graphql/queries';\nimport {\n  SnackbarService,\n  UIPageChangeEvent,\n  handleTablePageEvent,\n} from '@oort-front/ui';\nimport { takeUntil } from 'rxjs';\nimport { GraphQLError } from 'graphql';\n\n/** Quantity of resource that will be loaded at once. */\nconst ITEMS_PER_PAGE = 10;\n\n/**\n * Default fields for the records.\n */\nconst RECORDS_DEFAULT_COLUMNS = ['_incrementalId', '_actions'];\n\n/**\n * Records tab of resource page.\n */\n@Component({\n  selector: 'app-records-tab',\n  templateUrl: './records-tab.component.html',\n  styleUrls: ['./records-tab.component.scss'],\n})\nexport class RecordsTabComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  /**\n   * Query to get records.\n   */\n  private recordsQuery!: QueryRef<ResourceRecordsNodesQueryResponse>;\n  /**\n   * Data source for records.\n   */\n  public dataSource = new Array<Record>();\n  /**\n   * Cached records.\n   */\n  private cachedRecords: Record[] = [];\n  /**\n   * Resource.\n   */\n  public resource!: Resource;\n  /**\n   * Default columns for records.\n   */\n  recordsDefaultColumns: string[] = RECORDS_DEFAULT_COLUMNS;\n  /**\n   * Columns to display.\n   */\n  displayedColumnsRecords: string[] = [];\n\n  /**\n   * Show deleted records.\n   */\n  showDeletedRecords = false;\n  /**\n   * Page info.\n   */\n  public pageInfo = {\n    pageIndex: 0,\n    pageSize: ITEMS_PER_PAGE,\n    length: 0,\n    endCursor: '',\n  };\n  /**\n   * Loading state.\n   */\n  public loading = true;\n  /**\n   * Upload state.\n   */\n  public showUpload = false;\n\n  /** @returns True if the records tab is empty */\n  get empty(): boolean {\n    return !this.loading && this.dataSource.length === 0;\n  }\n\n  /**\n   * Records tab of resource page\n   *\n   * @param apollo Apollo service\n   * @param translate Angular translate service\n   * @param snackBar Shared snackbar service\n   * @param confirmService Shared confirm service\n   * @param downloadService Service used to download.\n   */\n  constructor(\n    private apollo: Apollo,\n    private translate: TranslateService,\n    private snackBar: SnackbarService,\n    private confirmService: ConfirmService,\n    private downloadService: DownloadService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    const state = history.state;\n    this.resource = get(state, 'resource', null);\n    this.setDisplayedColumns(false);\n    this.recordsQuery =\n      this.apollo.watchQuery<ResourceRecordsNodesQueryResponse>({\n        query: GET_RESOURCE_RECORDS,\n        variables: {\n          id: this.resource?.id,\n          first: ITEMS_PER_PAGE,\n          afterCursor: null,\n          display: false,\n          showDeletedRecords: this.showDeletedRecords,\n        },\n      });\n    this.recordsQuery.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ data, loading }) => {\n        this.updateValues(data, loading);\n      });\n  }\n\n  /**\n   * Deletes a record if authorized, open a confirmation modal if it's a hard delete.\n   *\n   * @param element Element to delete.\n   * @param e click event.\n   */\n  public onDeleteRecord(element: any, e: any): void {\n    e.stopPropagation();\n    if (this.showDeletedRecords) {\n      const dialogRef = this.confirmService.openConfirmModal({\n        title: this.translate.instant('common.deleteObject', {\n          name: this.translate.instant('common.record.one'),\n        }),\n        content: this.translate.instant(\n          'components.record.delete.confirmationMessage',\n          {\n            name: element.name,\n          }\n        ),\n        confirmText: this.translate.instant('components.confirmModal.delete'),\n      });\n      dialogRef.closed\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((value: any) => {\n          if (value) {\n            this.deleteRecord(element.id);\n          }\n        });\n    } else {\n      this.deleteRecord(element.id);\n    }\n  }\n\n  /**\n   * Sends mutation to delete record.\n   *\n   * @param id Id of record to delete.\n   */\n  private deleteRecord(id: string): void {\n    this.apollo\n      .mutate<DeleteRecordMutationResponse>({\n        mutation: DELETE_RECORD,\n        variables: {\n          id,\n          hardDelete: this.showDeletedRecords,\n        },\n      })\n      .subscribe({\n        next: ({ errors }) => {\n          this.handleRecordMutationResponse(\n            {\n              success: 'common.notifications.objectDeleted',\n              error: 'common.notifications.objectNotDeleted',\n            },\n            errors\n          );\n        },\n        error: (err) => {\n          this.snackBar.openSnackBar(err.message, { error: true });\n        },\n      });\n  }\n\n  /**\n   * Handle record mutation response\n   *\n   * @param messageKeys Message keys containing success or error response messages\n   * @param messageKeys.success success message key\n   * @param messageKeys.error error message key\n   * @param {GraphQLError[] | undefined} errors error array response if any\n   */\n  private handleRecordMutationResponse(\n    messageKeys: {\n      success: string;\n      error: string;\n    },\n    errors: readonly GraphQLError[] | undefined\n  ) {\n    if (errors) {\n      this.snackBar.openSnackBar(\n        this.translate.instant(messageKeys.error, {\n          value: this.translate.instant('common.record.one'),\n          error: errors ? errors[0].message : '',\n        }),\n        { error: true }\n      );\n    } else {\n      this.snackBar.openSnackBar(\n        this.translate.instant(messageKeys.success, {\n          value: this.translate.instant('common.record.one'),\n        })\n      );\n      this.fetchRecords(true);\n    }\n  }\n\n  /**\n   * Restores an archived record.\n   *\n   * @param id Id of record to restore.\n   * @param e click event.\n   */\n  public onRestoreRecord(id: string, e: any): void {\n    e.stopPropagation();\n    this.apollo\n      .mutate<RestoreRecordMutationResponse>({\n        mutation: RESTORE_RECORD,\n        variables: {\n          id,\n        },\n      })\n      .subscribe({\n        next: ({ errors }) => {\n          this.handleRecordMutationResponse(\n            {\n              success: 'common.notifications.objectRestored',\n              error: 'common.notifications.objectNotRestored',\n            },\n            errors\n          );\n        },\n        error: (err) => {\n          this.snackBar.openSnackBar(err.message, { error: true });\n        },\n      });\n  }\n\n  /**\n   * Get list of forms filtering by record form.\n   *\n   * @param record Record to filter templates with.\n   * @returns list of different forms than the one used to create the record.\n   */\n  public filterTemplates(record: Record): Form[] {\n    return get(this.resource, 'forms', []).filter(\n      (x: Form) => x.id !== record.form?.id\n    );\n  }\n\n  /**\n   * Changes the list of displayed columns.\n   *\n   * @param core Is the form core.\n   */\n  private setDisplayedColumns(core: boolean): void {\n    let columns = [];\n    if (this.resource?.fields) {\n      if (core) {\n        for (const field of this.resource.fields.filter(\n          (x: any) => x.isRequired === true\n        )) {\n          columns.push(field.name);\n        }\n      } else {\n        for (const field of this.resource.fields) {\n          columns.push(field.name);\n        }\n      }\n    }\n    const metadata = get(this.resource, 'metadata', []);\n    columns = columns\n      .filter((x) => {\n        const fieldMeta = metadata.find((y) => y.name === x);\n        return get(fieldMeta, 'canSee', false);\n      })\n      .concat(RECORDS_DEFAULT_COLUMNS);\n    this.displayedColumnsRecords = columns;\n  }\n\n  /**\n   * Downloads the list of records of the resource.\n   *\n   * @param type Type of the document to download ( excel or csv ).\n   */\n  onDownload(type: string): void {\n    const path = `download/resource/records/${this.resource.id}`;\n    const fileName = `${this.resource.name}.${type}`;\n    const queryString = new URLSearchParams({ type }).toString();\n    this.downloadService.getFile(\n      `${path}?${queryString}`,\n      `text/${type};charset=utf-8;`,\n      fileName\n    );\n  }\n\n  /**\n   * Get the records template, for upload.\n   */\n  onDownloadTemplate(): void {\n    const path = `download/resource/records/${this.resource.id}`;\n    const queryString = new URLSearchParams({\n      type: 'xlsx',\n      template: 'true',\n    }).toString();\n    this.downloadService.getFile(\n      `${path}?${queryString}`,\n      `text/xlsx;charset=utf-8;`,\n      `${this.resource.name}_template.xlsx`\n    );\n  }\n\n  /**\n   * Calls rest endpoint to upload new records for the resource.\n   *\n   * @param file File to upload.\n   */\n  uploadFileData(file: any): void {\n    const path = `upload/resource/records/${this.resource.id}`;\n    this.downloadService.uploadFile(path, file).subscribe({\n      next: (res) => {\n        if (res.status === 'OK') {\n          this.fetchRecords(true);\n          this.showUpload = false;\n        }\n      },\n      error: () => {\n        // The error message has already been handled in DownloadService\n        this.showUpload = false;\n      },\n    });\n  }\n\n  /**\n   * Toggle archive / active view.\n   *\n   * @param e click event.\n   */\n  onSwitchView(e: any): void {\n    e.stopPropagation();\n    this.showDeletedRecords = !this.showDeletedRecords;\n    this.fetchRecords(true);\n  }\n\n  /**\n   * Handles page event.\n   *\n   * @param e page event.\n   */\n  onPage(e: UIPageChangeEvent): void {\n    const cachedData = handleTablePageEvent(\n      e,\n      this.pageInfo,\n      this.cachedRecords\n    );\n    if (cachedData && cachedData.length === this.pageInfo.pageSize) {\n      this.dataSource = cachedData;\n    } else {\n      this.fetchRecords();\n    }\n  }\n\n  /**\n   * Formats the passed value to be readable\n   *\n   * @param value Value to format\n   * @returns Formatted value\n   */\n  formatValue(value: any): string {\n    // Geo spatial field\n    if (\n      value &&\n      typeof value === 'object' &&\n      value.type === 'Feature' &&\n      value.geometry\n    ) {\n      return [\n        get(value, 'properties.address'),\n        get(value, 'properties.countryName'),\n      ]\n        .filter((x) => x)\n        .join(', ');\n    }\n    return value;\n  }\n\n  /**\n   * Fetch records, using GraphQL\n   *\n   * @param refetch rebuild query\n   */\n  private fetchRecords(refetch?: boolean): void {\n    this.loading = true;\n    const variables = {\n      first: this.pageInfo.pageSize,\n      id: this.resource.id,\n      afterCursor: refetch ? null : this.pageInfo.endCursor,\n      display: false,\n      showDeletedRecords: this.showDeletedRecords,\n    };\n    const cachedValues: ResourceRecordsNodesQueryResponse = getCachedValues(\n      this.apollo.client,\n      GET_RESOURCE_RECORDS,\n      variables\n    );\n    if (refetch) {\n      this.cachedRecords = [];\n      this.pageInfo.pageIndex = 0;\n    }\n    if (cachedValues) {\n      this.updateValues(cachedValues, false);\n    } else {\n      if (refetch) {\n        this.recordsQuery.refetch(variables);\n      } else {\n        this.recordsQuery\n          .fetchMore({\n            variables,\n          })\n          .then((results) => this.updateValues(results.data, results.loading));\n      }\n    }\n  }\n\n  /**\n   * Update record data value\n   *\n   * @param data query response data\n   * @param loading loading status\n   */\n  private updateValues(\n    data: ResourceRecordsNodesQueryResponse,\n    loading: boolean\n  ) {\n    const mappedValues = data.resource.records.edges.map((x) => x.node);\n    this.cachedRecords = updateQueryUniqueValues(\n      this.cachedRecords,\n      mappedValues\n    );\n    this.pageInfo.length = data.resource.records.totalCount;\n    this.pageInfo.endCursor = data.resource.records.pageInfo.endCursor;\n    this.dataSource = this.cachedRecords.slice(\n      this.pageInfo.pageSize * this.pageInfo.pageIndex,\n      this.pageInfo.pageSize * (this.pageInfo.pageIndex + 1)\n    );\n    this.loading = loading;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table {\n  div {\n    max-height: 48px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 240px;\n  }\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding-top: 16px;\n}\n",
                    "styleUrl": "./records-tab.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Records tab of resource page</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "downloadService",
                        "type": "DownloadService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 100,
                "rawdescription": "\n\nRecords tab of resource page\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2310,
                            "end": 2316,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2304,
                            "end": 2309,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2344,
                            "end": 2353,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2338,
                            "end": 2343,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2392,
                            "end": 2400,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2386,
                            "end": 2391,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2437,
                            "end": 2451,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2431,
                            "end": 2436,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2487,
                            "end": 2502,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "downloadService"
                        },
                        "type": "DownloadService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2481,
                            "end": 2486,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Service used to download.</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "empty": {
                    "name": "empty",
                    "getSignature": {
                        "name": "empty",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 98,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 2120,
                                "end": 2162,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 2121,
                                    "end": 2128,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>True if the records tab is empty</p>\n"
                            }
                        ]
                    }
                }
            },
            "templateData": "<!-- Header -->\n<ng-container *ngIf=\"!loading; else loadingTmpl\">\n  <div class=\"flex justify-end mb-6\">\n    <!-- Actions -->\n    <div class=\"flex gap-2 items-center flex-wrap justify-end\">\n      <ui-button\n        *ngIf=\"resource.canUpdate && !showDeletedRecords\"\n        icon=\"search_off\"\n        category=\"primary\"\n        variant=\"danger\"\n        (click)=\"onSwitchView($event)\"\n      >\n        {{ 'components.records.showArchived' | translate }}\n      </ui-button>\n      <ui-button\n        *ngIf=\"resource.canUpdate && showDeletedRecords\"\n        icon=\"restore_page\"\n        category=\"primary\"\n        variant=\"success\"\n        (click)=\"onSwitchView($event)\"\n      >\n        {{ 'components.records.showActive' | translate }}\n      </ui-button>\n      <ui-button\n        icon=\"file_download\"\n        category=\"secondary\"\n        variant=\"primary\"\n        [uiMenuTriggerFor]=\"menu\"\n      >\n        {{\n          'common.downloadObject'\n            | translate : { name: 'common.record.few' | translate }\n        }}\n      </ui-button>\n      <ui-menu #menu>\n        <button uiMenuItem (click)=\"onDownload('csv')\">.csv</button>\n        <button uiMenuItem (click)=\"onDownload('xlsx')\">.xlsx</button>\n      </ui-menu>\n      <ui-button\n        icon=\"file_upload\"\n        category=\"secondary\"\n        variant=\"primary\"\n        [uiTooltip]=\"'components.records.upload.hint' | translate\"\n        (click)=\"showUpload = !showUpload\"\n        cdkOverlayOrigin\n        #uploadTrigger=\"cdkOverlayOrigin\"\n      >\n        {{\n          'common.uploadObject'\n            | translate : { name: 'common.record.few' | translate }\n        }}\n      </ui-button>\n      <ng-template\n        cdkConnectedOverlay\n        [cdkConnectedOverlayOrigin]=\"uploadTrigger\"\n        [cdkConnectedOverlayOpen]=\"showUpload\"\n      >\n        <app-upload-menu\n          (close)=\"showUpload = false\"\n          (upload)=\"uploadFileData($event)\"\n          (download)=\"onDownloadTemplate()\"\n        ></app-upload-menu>\n      </ng-template>\n    </div>\n  </div>\n  <ng-container *ngIf=\"!empty; else emptyTmpl\">\n    <!-- Table container -->\n    <div class=\"overflow-x-hidden shadow-2lg\">\n      <!-- Table scroll container -->\n      <div class=\"overflow-x-scroll\">\n        <!-- Records table -->\n        <table cdk-table uiTableWrapper [dataSource]=\"dataSource\">\n          <ng-container\n            *ngFor=\"let column of displayedColumnsRecords\"\n            [cdkColumnDef]=\"column\"\n            [stickyEnd]=\"column === '_actions'\"\n          >\n            <ng-container *ngIf=\"!recordsDefaultColumns.includes(column)\">\n              <th uiCellHeader *cdkHeaderCellDef scope=\"col\">{{ column }}</th>\n              <td uiCell *cdkCellDef=\"let element\">\n                <div>{{ formatValue(element.data[column]) }}</div>\n              </td>\n            </ng-container>\n            <ng-container *ngIf=\"column === '_incrementalId'\">\n              <th uiCellHeader *cdkHeaderCellDef scope=\"col\">ID</th>\n              <td uiCell *cdkCellDef=\"let element\">\n                <div>{{ element.incrementalId }}</div>\n              </td>\n            </ng-container>\n            <ng-container *ngIf=\"column === '_actions'\">\n              <th uiCellHeader *cdkHeaderCellDef scope=\"col\"></th>\n              <td uiCell *cdkCellDef=\"let element\">\n                <ui-button\n                  [isIcon]=\"true\"\n                  icon=\"more_vert\"\n                  [uiMenuTriggerFor]=\"recMenu\"\n                  (click)=\"$event.stopPropagation()\"\n                  [uiTooltip]=\"'common.actions' | translate\"\n                >\n                </ui-button>\n                <ui-menu #recMenu>\n                  <button\n                    uiMenuItem\n                    [routerLink]=\"['update', element.id]\"\n                    [uiTooltip]=\"\n                      ('components.records.editAs' | translate) +\n                      ' ' +\n                      element.form.name\n                    \"\n                    [tooltipDisabled]=\"(resource.forms?.length || 0) <= 1\"\n                  >\n                    <ui-icon icon=\"edit\" variant=\"grey\"></ui-icon>\n                    {{ 'common.edit' | translate }}\n                  </button>\n                  <button\n                    *ngIf=\"(resource.forms?.length || 0) > 1\"\n                    uiMenuItem\n                    [uiMenuTriggerFor]=\"templates\"\n                  >\n                    <ui-icon icon=\"edit_note\" variant=\"grey\"></ui-icon>\n                    {{ 'common.child.edit' | translate }}\n                  </button>\n                  <ui-divider class=\"py-1\"></ui-divider>\n                  <button\n                    *ngIf=\"!showDeletedRecords\"\n                    uiMenuItem\n                    (click)=\"onDeleteRecord(element, $event)\"\n                  >\n                    <ui-icon icon=\"delete\" variant=\"danger\"></ui-icon>\n                    {{ 'common.delete' | translate }}\n                  </button>\n                  <button\n                    *ngIf=\"showDeletedRecords\"\n                    uiMenuItem\n                    (click)=\"onDeleteRecord(element, $event)\"\n                  >\n                    <ui-icon icon=\"delete_forever\" variant=\"danger\"></ui-icon>\n                    {{ 'components.record.delete.permanently' | translate }}\n                  </button>\n                  <button\n                    *ngIf=\"showDeletedRecords\"\n                    uiMenuItem\n                    (click)=\"onRestoreRecord(element.id, $event)\"\n                  >\n                    <ui-icon icon=\"unarchive\" variant=\"success\"></ui-icon>\n                    {{ 'models.record.restore' | translate }}\n                  </button>\n                </ui-menu>\n                <ui-menu #templates>\n                  <ng-container *ngFor=\"let form of filterTemplates(element)\">\n                    <button\n                      uiMenuItem\n                      [routerLink]=\"['./update', element.id]\"\n                      [state]=\"{ template: form.id }\"\n                    >\n                      {{ form.name }}\n                    </button>\n                  </ng-container>\n                </ui-menu>\n              </td>\n            </ng-container>\n          </ng-container>\n          <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumnsRecords\"></tr>\n          <tr\n            cdk-row\n            *cdkRowDef=\"let row; columns: displayedColumnsRecords\"\n          ></tr>\n        </table>\n      </div>\n    </div>\n  </ng-container>\n  <ng-template #emptyTmpl>\n    <!-- Empty indicator -->\n    <shared-empty\n      [title]=\"'components.resource.empty.records' | translate\"\n    ></shared-empty>\n  </ng-template>\n</ng-container>\n<!-- Pagination -->\n<ui-paginator\n  *ngIf=\"!empty\"\n  [disabled]=\"loading\"\n  [pageSize]=\"pageInfo.pageSize\"\n  [pageIndex]=\"pageInfo.pageIndex\"\n  [totalItems]=\"pageInfo.length\"\n  [ariaLabel]=\"'components.records.paginator.ariaLabel' | translate\"\n  (pageChange)=\"onPage($event)\"\n></ui-paginator>\n<ng-template #loadingTmpl>\n  <shared-skeleton-table [columns]=\"displayedColumnsRecords\" [actions]=\"true\">\n  </shared-skeleton-table>\n</ng-template>\n"
        },
        {
            "name": "ReferenceDataComponent",
            "id": "component-ReferenceDataComponent-9cb985c1c12e7acd4ef1d3a1b3735aaaec3437307aec8ebc64fb81e186415539904494f81a07ded72c6a38132f67eaa781f4497ef9c2308f5446b9439fb4184e",
            "file": "apps/back-office/src/app/dashboard/pages/reference-data/reference-data.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reference-data",
            "styleUrls": [
                "./reference-data.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reference-data.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addChipListTimeoutListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeJS.Timeout",
                    "optional": false,
                    "description": "<p>Timeout to add an object to the chip list.</p>\n",
                    "line": 129,
                    "rawdescription": "\nTimeout to add an object to the chip list.",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "apiConfigurationsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<ApiConfigurationsQueryResponse>",
                    "optional": false,
                    "description": "<p>Api configurations query</p>\n",
                    "line": 89,
                    "rawdescription": "\nApi configurations query",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "csvData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TextareaComponent",
                    "optional": true,
                    "description": "<p>Reference to the csv data input.</p>\n",
                    "line": 138,
                    "rawdescription": "\n\nReference to the csv data input.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'csvData'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "csvLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>CSV loading state</p>\n",
                    "line": 121,
                    "rawdescription": "\nCSV loading state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "csvValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>CSV value</p>\n",
                    "line": 117,
                    "rawdescription": "\nCSV value",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currEditingField",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "<p>Has the fields that&#39;s currently being edited, if any</p>\n",
                    "line": 101,
                    "rawdescription": "\nHas the fields that's currently being edited, if any",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "dialog",
                    "line": 201,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "editorOptions",
                    "defaultValue": "{\n    theme: 'vs-dark',\n    language: 'graphql',\n    formatOnPaste: true,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Editor options</p>\n",
                    "line": 146,
                    "rawdescription": "\nEditor options",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "fieldInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": true,
                    "description": "<p>Reference to the field input.</p>\n",
                    "line": 134,
                    "rawdescription": "\n\nReference to the field input.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'fieldInput'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "formTimeoutListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeJS.Timeout",
                    "optional": false,
                    "description": "<p>Timeout to form</p>\n",
                    "line": 125,
                    "rawdescription": "\nTimeout to form",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Reference data id</p>\n",
                    "line": 75,
                    "rawdescription": "\nReference data id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initEditorTimeoutListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeJS.Timeout",
                    "optional": false,
                    "description": "<p>Timeout to init editor</p>\n",
                    "line": 127,
                    "rawdescription": "\nTimeout to init editor",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "inlineEditionForm",
                    "defaultValue": "this.createEditionForm()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Form for the inline edition</p>\n",
                    "line": 104,
                    "rawdescription": "\nForm for the inline edition",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "inlineEditionOutsideClickListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Outside click listener for inline edition</p>\n",
                    "line": 153,
                    "rawdescription": "\nOutside click listener for inline edition",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "kendoGrid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridComponent",
                    "optional": false,
                    "description": "<p>Reference to the kendo grid.</p>\n",
                    "line": 142,
                    "rawdescription": "\n\nReference to the kendo grid.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "GridComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nLoading state\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadingFields",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state for the fields</p>\n",
                    "line": 97,
                    "rawdescription": "\nLoading state for the fields",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "newData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>New data</p>\n",
                    "line": 119,
                    "rawdescription": "\nNew data",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Payload</p>\n",
                    "line": 95,
                    "rawdescription": "\nPayload",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "referenceData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReferenceData",
                    "optional": true,
                    "description": "<p>Reference data</p>\n",
                    "line": 77,
                    "rawdescription": "\nReference data",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "referenceForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Reference data form</p>\n",
                    "line": 81,
                    "rawdescription": "\nReference data form",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "referenceTypeChoices",
                    "defaultValue": "Object.values(referenceDataType)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Reference data types</p>\n",
                    "line": 83,
                    "rawdescription": "\nReference data types",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedApiConfiguration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApiConfiguration",
                    "optional": true,
                    "description": "<p>Selected API configuration</p>\n",
                    "line": 87,
                    "rawdescription": "\nSelected API configuration",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "separator",
                    "defaultValue": "new FormControl(',')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>CSV separator</p>\n",
                    "line": 123,
                    "rawdescription": "\nCSV separator",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "separatorKeysCodes",
                    "defaultValue": "SEPARATOR_KEYS_CODE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "<p>Separator keys code</p>\n",
                    "line": 99,
                    "rawdescription": "\nSeparator keys code",
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "validJsonTypes",
                    "defaultValue": "[\n    'string',\n    'number',\n    'boolean',\n    'object',\n    'array',\n    'null',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Valid json types</p>\n",
                    "line": 106,
                    "rawdescription": "\nValid json types",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "valueFields",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NonNullable<>",
                    "optional": false,
                    "description": "<p>Value fields</p>\n",
                    "line": 93,
                    "rawdescription": "\nValue fields",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "event",
                            "type": "string | any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 606,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd an object to the chip list.\n\n",
                    "description": "<p>Add an object to the chip list.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 18781,
                                "end": 18786,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "string | any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 18775,
                                "end": 18780,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>input event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "addField",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 864,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAdds a new field to the field list",
                    "description": "<p>Adds a new field to the field list</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "convertToCSV",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 714,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConvert the JSON into a csv format.\n\n",
                    "description": "<p>Convert the JSON into a csv format.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 22206,
                                "end": 22209,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "obj"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 22200,
                                "end": 22205,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>json to convert</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 22232,
                                "end": 22239,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>csv</p>\n"
                        }
                    ]
                },
                {
                    "name": "createEditionForm",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 214,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreate a new edition form group.\n\n",
                    "description": "<p>Create a new edition form group.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 5976,
                                "end": 5983,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>the edition form group</p>\n"
                        }
                    ]
                },
                {
                    "name": "getFields",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 720,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nUses the API Configuration to get the fields and parse their types.",
                    "description": "<p>Uses the API Configuration to get the fields and parse their types.</p>\n",
                    "modifierKind": [
                        123,
                        132
                    ]
                },
                {
                    "name": "getRefDataForm",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBuild Reference data form group\n\n",
                    "description": "<p>Build Reference data form group</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 6308,
                                "end": 6315,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Reference data form group</p>\n"
                        }
                    ]
                },
                {
                    "name": "handleEditReferenceDataResponse",
                    "args": [
                        {
                            "name": "data",
                            "type": "EditReferenceDataMutationResponse | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "errors",
                            "type": " | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "usingForm",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 456,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles the reference data mutation response\n\n",
                    "description": "<p>Handles the reference data mutation response</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 13849,
                                "end": 13853,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "EditReferenceDataMutationResponse | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 13807,
                                "end": 13812,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>save mutation data</p>\n",
                            "typeExpression": {
                                "pos": 13813,
                                "end": 13848,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 13814,
                                    "end": 13847,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 180,
                                    "typeName": {
                                        "pos": 13814,
                                        "end": 13847,
                                        "flags": 8388608,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 79,
                                        "escapedText": "EditReferenceDataMutationResponse"
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 13902,
                                "end": 13908,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "errors"
                            },
                            "type": " | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 13879,
                                "end": 13884,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>save mutation errors</p>\n",
                            "typeExpression": {
                                "pos": 13885,
                                "end": 13901,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 13886,
                                    "end": 13900,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 185,
                                    "elementType": {
                                        "pos": 13886,
                                        "end": 13898,
                                        "flags": 8388608,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 180,
                                        "typeName": {
                                            "pos": 13886,
                                            "end": 13898,
                                            "flags": 8388608,
                                            "modifierFlagsCache": 0,
                                            "transformFlags": 0,
                                            "kind": 79,
                                            "escapedText": "GraphQLError"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 13952,
                                "end": 13959,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "loading"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 13936,
                                "end": 13941,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>save mutation loading state</p>\n",
                            "typeExpression": {
                                "pos": 13942,
                                "end": 13951,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 13943,
                                    "end": 13950,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 134
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 14010,
                                "end": 14019,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "usingForm"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "pos": 13994,
                                "end": 13999,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>if saved data comes from the reference data form</p>\n",
                            "typeExpression": {
                                "pos": 14000,
                                "end": 14009,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 312,
                                "type": {
                                    "pos": 14001,
                                    "end": 14008,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 134
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "initEditor",
                    "args": [
                        {
                            "name": "editor",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 792,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOn initialization of editor, format code\n\n",
                    "description": "<p>On initialization of editor, format code</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 24586,
                                "end": 24592,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "editor"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 24580,
                                "end": 24585,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>monaco editor used for scss edition</p>\n"
                        }
                    ]
                },
                {
                    "name": "loadApiConfigurations",
                    "args": [
                        {
                            "name": "type",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 381,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLoad all Api Configurations.\n\n",
                    "description": "<p>Load all Api Configurations.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 11522,
                                "end": 11526,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "type"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 11516,
                                "end": 11521,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>type of API configuration</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 887,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        161
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 294,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreate the Reference data query, and subscribe to the query changes.\n",
                    "description": "<p>Create the Reference data query, and subscribe to the query changes.</p>\n"
                },
                {
                    "name": "onOpenPayload",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 811,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOpen payload modal",
                    "description": "<p>Open payload modal</p>\n",
                    "modifierKind": [
                        123,
                        132
                    ]
                },
                {
                    "name": "onRemoveField",
                    "args": [
                        {
                            "name": "field",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 782,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemove a field from the list.\n\n",
                    "description": "<p>Remove a field from the list.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 24308,
                                "end": 24313,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "field"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 24302,
                                "end": 24307,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>field to remove.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 490,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdit the Reference data using referenceForm changes.\n",
                    "description": "<p>Edit the Reference data using referenceForm changes.</p>\n"
                },
                {
                    "name": "onValidateCSV",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 667,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValidate the CSV input and transform it into JSON object.\n",
                    "description": "<p>Validate the CSV input and transform it into JSON object.</p>\n"
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 653,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemove an object from the chip list.\n\n",
                    "description": "<p>Remove an object from the chip list.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 20162,
                                "end": 20167,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "field"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 20156,
                                "end": 20161,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>field to remove.</p>\n"
                        }
                    ]
                },
                {
                    "name": "saveAccess",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 428,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdit the permissions layer.\n\n",
                    "description": "<p>Edit the permissions layer.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 13197,
                                "end": 13198,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 13191,
                                "end": 13196,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>permission event</p>\n"
                        }
                    ]
                },
                {
                    "name": "setReferenceFormValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 642,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate reference form value programmatically with the current value fields\n",
                    "description": "<p>Update reference form value programmatically with the current value fields</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "toggleInlineEditor",
                    "args": [
                        {
                            "name": "field",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 825,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggles the inline editor for the field\n\n",
                    "description": "<p>Toggles the inline editor for the field</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 25444,
                                "end": 25449,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "field"
                            },
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 25438,
                                "end": 25443,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>field to edit</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Reference data page.</p>\n",
            "rawdescription": "\n\nReference data page.\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ElementRef,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  ApiConfiguration,\n  ReferenceData,\n  referenceDataType,\n  BreadcrumbService,\n  UnsubscribeComponent,\n  ReferenceDataService,\n  ApiConfigurationsQueryResponse,\n  ReferenceDataQueryResponse,\n  ApiConfigurationQueryResponse,\n  EditReferenceDataMutationResponse,\n} from '@oort-front/shared';\nimport { Apollo, QueryRef } from 'apollo-angular';\nimport { EDIT_REFERENCE_DATA } from './graphql/mutations';\nimport {\n  GET_API_CONFIGURATION,\n  GET_API_CONFIGURATIONS_NAMES,\n  GET_REFERENCE_DATA,\n} from './graphql/queries';\nimport { COMMA, ENTER, SPACE, TAB } from '@angular/cdk/keycodes';\nimport { takeUntil } from 'rxjs/operators';\nimport { firstValueFrom } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { inferTypeFromString } from './utils/inferTypeFromString';\nimport { cloneDeep, get } from 'lodash';\nimport { SnackbarService, TextareaComponent } from '@oort-front/ui';\nimport { GraphQLError } from 'graphql';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { DOCUMENT } from '@angular/common';\nimport { GridComponent } from '@progress/kendo-angular-grid';\n\n/** Default graphql query */\nconst DEFAULT_QUERY = `query {\\n  \\n}`;\n/** Default pagination parameter. */\nconst ITEMS_PER_PAGE = 10;\n/** Available separator for csv */\nconst SEPARATOR_KEYS_CODE = [ENTER, COMMA, TAB, SPACE];\n\n/**\n * Reference data page.\n */\n@Component({\n  selector: 'app-reference-data',\n  templateUrl: './reference-data.component.html',\n  styleUrls: ['./reference-data.component.scss'],\n})\nexport class ReferenceDataComponent\n  extends UnsubscribeComponent\n  implements OnInit, OnDestroy\n{\n  // === DATA ===\n  /**\n   * Loading state\n   */\n  public loading = true;\n  /** Reference data id */\n  public id = '';\n  /** Reference data */\n  public referenceData?: ReferenceData;\n\n  // === FORM ===\n  /** Reference data form */\n  public referenceForm!: ReturnType<typeof this.getRefDataForm>;\n  /** Reference data types */\n  public referenceTypeChoices = Object.values(referenceDataType);\n\n  // === API ===\n  /** Selected API configuration */\n  public selectedApiConfiguration?: ApiConfiguration;\n  /** Api configurations query */\n  public apiConfigurationsQuery!: QueryRef<ApiConfigurationsQueryResponse>;\n\n  // === FIELDS ===\n  /** Value fields */\n  public valueFields: NonNullable<ReferenceData['fields']> = [];\n  /** Payload */\n  public payload: any;\n  /** Loading state for the fields */\n  public loadingFields = false;\n  /** Separator keys code */\n  readonly separatorKeysCodes: number[] = SEPARATOR_KEYS_CODE;\n  /** Has the fields that's currently being edited, if any */\n  public currEditingField: NonNullable<ReferenceData['fields']>[number] | null =\n    null;\n  /** Form for the inline edition */\n  public inlineEditionForm = this.createEditionForm();\n  /** Valid json types */\n  public validJsonTypes = [\n    'string',\n    'number',\n    'boolean',\n    'object',\n    'array',\n    'null',\n  ];\n\n  // === CSV ===\n  /** CSV value */\n  public csvValue = '';\n  /** New data */\n  public newData: any = [];\n  /** CSV loading state */\n  public csvLoading = false;\n  /** CSV separator */\n  public separator = new FormControl(',');\n  /** Timeout to form */\n  private formTimeoutListener!: NodeJS.Timeout;\n  /** Timeout to init editor */\n  private initEditorTimeoutListener!: NodeJS.Timeout;\n  /** Timeout to add an object to the chip list. */\n  private addChipListTimeoutListener!: NodeJS.Timeout;\n\n  /**\n   * Reference to the field input.\n   */\n  @ViewChild('fieldInput') fieldInput?: ElementRef<HTMLInputElement>;\n  /**\n   * Reference to the csv data input.\n   */\n  @ViewChild('csvData') csvData?: TextareaComponent;\n  /**\n   * Reference to the kendo grid.\n   */\n  @ViewChild(GridComponent) kendoGrid!: GridComponent;\n\n  // === MONACO EDITOR ===\n  /** Editor options */\n  public editorOptions = {\n    theme: 'vs-dark',\n    language: 'graphql',\n    formatOnPaste: true,\n  };\n\n  /** Outside click listener for inline edition */\n  private inlineEditionOutsideClickListener!: any;\n\n  /** @returns the graphqlQuery form control */\n  get queryControl() {\n    return this.referenceForm.get('query') as FormControl | null;\n  }\n\n  /** @returns name of reference model */\n  get name(): AbstractControl | null {\n    return this.referenceForm.get('name');\n  }\n\n  /** @returns type of reference model */\n  get type(): string {\n    return this.referenceForm.get('type')?.value || '';\n  }\n\n  /** @returns admin can fetch fields */\n  get canFetchFields(): boolean {\n    const formValue = this.referenceForm.value;\n    return (\n      !!formValue.apiConfiguration && !!formValue.query && !!formValue.type\n    );\n  }\n\n  /**\n   * Reference data page.\n   *\n   * @param apollo Apollo service\n   * @param route Angular route\n   * @param snackBar Shared snackbar service\n   * @param router Angular router\n   * @param translateService Angular translate service\n   * @param breadcrumbService Setups the breadcrumb component variables\n   * @param refDataService Reference data service\n   * @param dialog dialog\n   * @param fb form builder\n   * @param renderer Angular Renderer2 service\n   * @param document Current document token\n   */\n  constructor(\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private snackBar: SnackbarService,\n    private router: Router,\n    private translateService: TranslateService,\n    private breadcrumbService: BreadcrumbService,\n    private refDataService: ReferenceDataService,\n    public dialog: Dialog,\n    private fb: FormBuilder,\n    private renderer: Renderer2,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    super();\n  }\n\n  /**\n   * Create a new edition form group.\n   *\n   * @returns the edition form group\n   */\n  private createEditionForm() {\n    return this.fb.group({\n      name: this.fb.control('', Validators.required),\n      type: this.fb.control('string', Validators.required),\n      index: this.fb.control(-1, Validators.required),\n    });\n  }\n\n  /**\n   * Build Reference data form group\n   *\n   * @returns Reference data form group\n   */\n  private getRefDataForm() {\n    const form = new FormGroup({\n      name: new FormControl(this.referenceData?.name, Validators.required),\n      type: new FormControl(this.referenceData?.type, Validators.required),\n      valueField: new FormControl(\n        this.referenceData?.valueField,\n        Validators.required\n      ),\n      fields: new FormControl(this.referenceData?.fields, Validators.required),\n      apiConfiguration: new FormControl(\n        this.referenceData?.apiConfiguration?.id\n      ),\n      query: new FormControl(this.referenceData?.query),\n      path: new FormControl(this.referenceData?.path),\n      data: new FormControl(this.referenceData?.data),\n    });\n\n    // Clear valueFields when type, apiConfiguration, path or query changes\n    const clearFields = () => {\n      this.payload = null;\n      this.valueFields = [];\n      form.get('fields')?.setValue([]);\n    };\n\n    // Wait for the form to be initialized before subscribing to changes\n    if (this.formTimeoutListener) {\n      clearTimeout(this.formTimeoutListener);\n    }\n    this.formTimeoutListener = setTimeout(() => {\n      form\n        .get('type')\n        ?.valueChanges.pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          clearFields();\n\n          // Clear the query field if the type is not GraphQL\n          if (this.type !== referenceDataType.graphql)\n            form.get('query')?.setValue('');\n\n          // Set the default query if the type is GraphQL\n          if (this.type === referenceDataType.graphql)\n            form\n              .get('query')\n              ?.setValue(\n                `# ${this.translateService.instant(\n                  'pages.referenceData.tooltip.graphQLFilter'\n                )}\\n\\n${DEFAULT_QUERY}`\n              );\n        });\n\n      form\n        .get('apiConfiguration')\n        ?.valueChanges.pipe(takeUntil(this.destroy$))\n        .subscribe(clearFields);\n\n      form\n        .get('query')\n        ?.valueChanges.pipe(takeUntil(this.destroy$))\n        .subscribe(clearFields);\n    }, 100);\n\n    return form;\n  }\n\n  /**\n   * Create the Reference data query, and subscribe to the query changes.\n   */\n  ngOnInit(): void {\n    this.inlineEditionOutsideClickListener = this.renderer.listen(\n      this.document,\n      'click',\n      (event) => {\n        // If there is a current inline edition on going, trigger check\n        if (this.currEditingField) {\n          const gridRows = this.kendoGrid.ariaRoot.nativeElement\n            .querySelector('kendo-grid-list')\n            .querySelectorAll('tr');\n          // If current inline edition row does not contain the target element\n          if (\n            !gridRows[\n              this.inlineEditionForm.get('index')?.value as number\n            ]?.contains(event.target)\n          ) {\n            // Cancel edition\n            this.currEditingField = null;\n          }\n        }\n      }\n    );\n    this.id = this.route.snapshot.paramMap.get('id') || '';\n    if (this.id) {\n      this.apollo\n        .watchQuery<ReferenceDataQueryResponse>({\n          query: GET_REFERENCE_DATA,\n          variables: {\n            id: this.id,\n          },\n        })\n        .valueChanges.pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: ({ data, loading }) => {\n            if (data.referenceData) {\n              this.referenceData = data.referenceData;\n              this.breadcrumbService.setBreadcrumb(\n                '@referenceData',\n                this.referenceData.name as string\n              );\n              this.csvValue =\n                this.referenceData?.data && this.referenceData?.data.length > 0\n                  ? this.convertToCSV(this.referenceData?.data)\n                  : '';\n              this.newData =\n                this.referenceData?.data && this.referenceData?.data.length > 0\n                  ? this.referenceData?.data\n                  : [];\n              this.referenceForm = this.getRefDataForm();\n              this.valueFields = this.referenceForm?.get('fields')?.value || [];\n              this.loadApiConfigurations(\n                this.referenceForm?.get('type')?.value\n              );\n              // Adapt validators to the type of reference data\n              this.referenceForm.get('type')?.valueChanges.subscribe((type) => {\n                this.loadApiConfigurations(type);\n              });\n              this.loading = loading;\n            } else {\n              this.snackBar.openSnackBar(\n                this.translateService.instant(\n                  'common.notifications.accessNotProvided',\n                  {\n                    type: this.translateService\n                      .instant('notification.term.resource')\n                      .toLowerCase(),\n                    error: '',\n                  }\n                ),\n                { error: true }\n              );\n              this.router.navigate(['/referencedata']);\n            }\n          },\n          error: (err) => {\n            this.snackBar.openSnackBar(err.message, { error: true });\n            this.router.navigate(['/referencedata']);\n          },\n        });\n    }\n  }\n\n  /**\n   * Load all Api Configurations.\n   *\n   * @param type type of API configuration\n   */\n  loadApiConfigurations(type?: any): void {\n    if (['graphql', 'rest'].includes(type)) {\n      this.referenceForm\n        .get('apiConfiguration')\n        ?.setValidators(Validators.required);\n      this.referenceForm.get('query')?.setValidators(Validators.required);\n      this.referenceForm.get('fields')?.setValidators(Validators.required);\n      if (this.referenceForm.value.apiConfiguration) {\n        this.apollo\n          .query<ApiConfigurationQueryResponse>({\n            query: GET_API_CONFIGURATION,\n            variables: {\n              id: this.referenceForm.value.apiConfiguration,\n            },\n          })\n          .subscribe(({ data }) => {\n            if (data.apiConfiguration) {\n              this.selectedApiConfiguration = data.apiConfiguration;\n            }\n          });\n      }\n\n      this.apiConfigurationsQuery =\n        this.apollo.watchQuery<ApiConfigurationsQueryResponse>({\n          query: GET_API_CONFIGURATIONS_NAMES,\n          variables: {\n            first: ITEMS_PER_PAGE,\n          },\n        });\n      // this.apiConfigurationsQuery.valueChanges.subscribe(({ loading }) => {\n      //   this.loading = loading;\n      // });\n    } else {\n      this.referenceForm.get('apiConfiguration')?.clearValidators();\n      this.referenceForm.get('query')?.clearValidators();\n      this.referenceForm.get('fields')?.clearValidators();\n    }\n    this.referenceForm?.get('apiConfiguration')?.updateValueAndValidity();\n    this.referenceForm?.get('query')?.updateValueAndValidity();\n    this.referenceForm?.get('fields')?.updateValueAndValidity();\n  }\n\n  /**\n   * Edit the permissions layer.\n   *\n   * @param e permission event\n   */\n  saveAccess(e: any): void {\n    this.loading = true;\n    this.apollo\n      .mutate<EditReferenceDataMutationResponse>({\n        mutation: EDIT_REFERENCE_DATA,\n        variables: {\n          id: this.id,\n          permissions: e,\n        },\n      })\n      .subscribe({\n        next: ({ errors, data, loading }) => {\n          this.handleEditReferenceDataResponse(data, errors, loading);\n        },\n        error: (err) => {\n          this.snackBar.openSnackBar(err.message, { error: true });\n        },\n      });\n  }\n\n  /**\n   * Handles the reference data mutation response\n   *\n   * @param {EditReferenceDataMutationResponse} data save mutation data\n   * @param {GraphQLError[]} errors save mutation errors\n   * @param {boolean} loading save mutation loading state\n   * @param {boolean} usingForm if saved data comes from the reference data form\n   */\n  private handleEditReferenceDataResponse(\n    data: EditReferenceDataMutationResponse | null | undefined,\n    errors: readonly GraphQLError[] | undefined,\n    loading: boolean,\n    usingForm: boolean = false\n  ) {\n    if (errors) {\n      this.snackBar.openSnackBar(\n        this.translateService.instant('common.notifications.objectNotUpdated', {\n          type: this.translateService.instant('common.referenceData.one'),\n          error: errors ? errors[0].message : '',\n        }),\n        { error: true }\n      );\n    } else {\n      if (data) {\n        this.snackBar.openSnackBar(\n          this.translateService.instant('common.notifications.objectUpdated', {\n            type: this.translateService.instant('common.referenceData.one'),\n            value: '',\n          })\n        );\n        this.referenceData = data.editReferenceData;\n      }\n      if (usingForm) {\n        this.referenceForm.markAsPristine();\n      }\n    }\n    this.loading = loading;\n  }\n\n  /**\n   * Edit the Reference data using referenceForm changes.\n   */\n  onSave(): void {\n    this.loading = true;\n    const variables = { id: this.id };\n    Object.assign(\n      variables,\n      this.referenceForm.value.name !== this.referenceData?.name && {\n        name: this.referenceForm.value.name,\n      },\n      this.referenceForm.value.type !== this.referenceData?.type && {\n        type: this.referenceForm.value.type,\n      },\n      this.referenceForm.value.valueField !==\n        this.referenceData?.valueField && {\n        valueField: this.referenceForm.value.valueField,\n      },\n      this.referenceForm.value.fields !== this.referenceData?.fields && {\n        fields: this.referenceForm.value.fields,\n      }\n    );\n    if (\n      ['graphql', 'rest'].includes(get(this.referenceForm, 'value.type', ''))\n    ) {\n      Object.assign(\n        variables,\n        this.referenceForm.value.apiConfiguration !==\n          this.referenceData?.apiConfiguration?.id && {\n          apiConfiguration: this.referenceForm.value.apiConfiguration,\n        },\n        this.referenceForm.value.path !== this.referenceData?.path && {\n          path: this.referenceForm.value.path,\n        },\n        this.referenceForm.value.query !== this.referenceData?.query && {\n          query: this.referenceForm.value.query,\n        }\n      );\n    } else {\n      // Maps each field to its type\n      const typePerField = (this.referenceForm.value.fields ?? []).reduce(\n        (acc: any, field: any) => {\n          acc[field.name] = field.type;\n          return acc;\n        },\n        {}\n      );\n\n      // Parsed data is the array with the field types enforced\n      // If a field of an element is not of the expected type, the field is skipped\n      const parsedData: any[] = [];\n      if (this.referenceForm.value.data) {\n        this.referenceForm.value.data.forEach((element: any) => {\n          if (typeof element !== 'object' || element === null) {\n            return;\n          }\n          for (const key in element) {\n            const type = typePerField[key];\n            // If the field has an unknown type, skip it\n            if (!type) {\n              continue;\n            }\n\n            switch (type) {\n              case 'number':\n                const numberValue = parseFloat(element[key]);\n                if (!isNaN(numberValue)) {\n                  element[key] = numberValue;\n                }\n                break;\n              case 'boolean':\n                if (element[key] === 'false' || element[key] === 'true') {\n                  element[key] = element[key] === 'true';\n                }\n                break;\n              case 'array':\n              case 'object':\n                try {\n                  element[key] = JSON.parse(element[key]);\n                } catch (e) {\n                  // If the JSON is invalid, skip it\n                  return;\n                }\n                break;\n              case 'null':\n                element[key] = null;\n                break;\n            }\n          }\n          parsedData.push(element);\n        });\n      }\n      Object.assign(\n        variables,\n        this.referenceForm.value.data !== this.referenceData?.data && {\n          data: this.referenceForm.value.data,\n        }\n      );\n    }\n    this.apollo\n      .mutate<EditReferenceDataMutationResponse>({\n        mutation: EDIT_REFERENCE_DATA,\n        variables,\n      })\n      .subscribe({\n        next: ({ errors, data, loading }) => {\n          this.handleEditReferenceDataResponse(data, errors, loading, true);\n        },\n        error: (err) => {\n          this.snackBar.openSnackBar(err.message, { error: true });\n        },\n      });\n  }\n\n  /**\n   * Add an object to the chip list.\n   *\n   * @param event input event.\n   */\n  add(event: string | any): void {\n    // use setTimeout to prevent add input value on focusout\n    if (this.addChipListTimeoutListener) {\n      clearTimeout(this.addChipListTimeoutListener);\n    }\n    this.addChipListTimeoutListener = setTimeout(\n      () => {\n        const input =\n          event.type === 'focusout'\n            ? this.fieldInput?.nativeElement\n            : event.input;\n        const value =\n          event.type === 'focusout'\n            ? this.fieldInput?.nativeElement.value\n            : event.value;\n\n        // Add the mail\n        if ((value || '').trim()) {\n          // Deep copy needed for the edition\n          const valueFieldsCopy = [...this.valueFields];\n          valueFieldsCopy.push(value.trim());\n          this.valueFields = valueFieldsCopy;\n        }\n        this.setReferenceFormValue();\n        // Reset the input value\n        if (input) {\n          input.value = '';\n        }\n      },\n      event.type === 'focusout' ? 500 : 0\n    );\n  }\n\n  /**\n   * Update reference form value programmatically with the current value fields\n   */\n  private setReferenceFormValue() {\n    this.referenceForm?.get('fields')?.setValue(this.valueFields);\n    this.referenceForm?.get('fields')?.updateValueAndValidity();\n    this.referenceForm?.markAsDirty();\n  }\n\n  /**\n   * Remove an object from the chip list.\n   *\n   * @param field field to remove.\n   */\n  remove(field: string): void {\n    const index = this.valueFields.findIndex((x) => x.name === field);\n    if (index >= 0) {\n      // Deep copy needed for the edition\n      const valueFieldsCopy = [...this.valueFields];\n      valueFieldsCopy.splice(index, 1);\n      this.valueFields = valueFieldsCopy;\n    }\n    this.setReferenceFormValue();\n  }\n\n  /**\n   * Validate the CSV input and transform it into JSON object.\n   */\n  onValidateCSV(): void {\n    this.csvLoading = true;\n    const dataTemp = this.csvData?.value || '';\n    if (dataTemp !== this.csvValue) {\n      this.csvValue = dataTemp;\n      this.newData = [];\n      const lines = dataTemp.split('\\n');\n      const headers = lines[0]\n        .split(this.separator.value || ',')\n        .map((x: string) => x.trim());\n      if (lines.length < 2) return;\n      // Infer types from first line\n      const fields = headers.reduce((acc: any, header: any) => {\n        const value = lines[1]\n          .split(this.separator.value || ',')\n          [headers.indexOf(header)].trim();\n        const type = inferTypeFromString(value);\n        acc.push({ name: header, type });\n        return acc;\n      }, [] as { name: string; type: string }[]);\n      this.valueFields = fields;\n      for (let i = 1; i < lines.length; i++) {\n        if (!lines[i]) continue;\n        const obj: any = {};\n        const currentline = lines[i]\n          .split(this.separator.value || ',')\n          .map((x: string) => x.trim());\n        for (let j = 0; j < headers.length; j++) {\n          obj[headers[j]] = currentline[j];\n        }\n        this.newData.push(obj);\n      }\n      this.referenceForm?.get('data')?.setValue(this.newData);\n      this.referenceForm?.get('data')?.updateValueAndValidity();\n      this.referenceForm?.get('fields')?.setValue(this.valueFields);\n      this.referenceForm?.get('fields')?.updateValueAndValidity();\n      this.referenceForm?.markAsDirty();\n    }\n    this.csvLoading = false;\n  }\n\n  /**\n   * Convert the JSON into a csv format.\n   *\n   * @param obj json to convert\n   * @returns csv\n   */\n  convertToCSV(obj: any): string {\n    const array = [Object.keys(obj[0])].concat(obj);\n    return array.map((it) => Object.values(it).toString()).join('\\n');\n  }\n\n  /** Uses the API Configuration to get the fields and parse their types. */\n  public async getFields() {\n    const apiConfID = this.referenceForm.value.apiConfiguration;\n    const path = this.referenceForm.value.path;\n    const query = this.referenceForm.value.query;\n    const type = this.referenceForm.value.type;\n    if (!apiConfID || !query || !type) {\n      const missingField = !this.referenceForm.value.apiConfiguration\n        ? 'common.apiConfiguration.one'\n        : !this.referenceForm.value.query\n        ? 'pages.referenceData.queryName'\n        : 'pages.referenceData.type';\n\n      this.snackBar.openSnackBar(\n        this.translateService.instant(\n          'pages.referenceData.fields.missingConfig',\n          {\n            config: this.translateService.instant(missingField),\n          }\n        ),\n        { error: true }\n      );\n      return;\n    }\n    // get the api configuration\n    this.loadingFields = true;\n    const query$ = this.apollo.query<ApiConfigurationQueryResponse>({\n      query: GET_API_CONFIGURATION,\n      variables: {\n        id: apiConfID,\n      },\n    });\n\n    const { data: apiConfData } = await firstValueFrom(query$);\n    if (!apiConfData?.apiConfiguration) {\n      this.loadingFields = false;\n      return;\n    }\n    try {\n      // get the fields & payload\n      const result = await this.refDataService.getFields(\n        apiConfData.apiConfiguration,\n        path || '',\n        query,\n        type\n      );\n      this.valueFields = result.fields;\n      this.payload = result.payload;\n      this.referenceForm?.get('fields')?.setValue(this.valueFields);\n      this.referenceForm.get('fields')?.markAsDirty();\n    } catch (e) {\n      if (e instanceof HttpErrorResponse) {\n        this.snackBar.openSnackBar(e.message, { error: true });\n      }\n    }\n    this.loadingFields = false;\n  }\n\n  /**\n   * Remove a field from the list.\n   *\n   * @param field field to remove.\n   */\n  onRemoveField(field: any) {\n    this.valueFields = this.valueFields.filter((x) => x.name !== field.name);\n    this.referenceForm?.get('fields')?.setValue(this.valueFields);\n  }\n\n  /**\n   * On initialization of editor, format code\n   *\n   * @param editor monaco editor used for scss edition\n   */\n  public initEditor(editor: any): void {\n    const queryControl = this.queryControl;\n    if (!queryControl) return;\n    if (editor) {\n      if (this.initEditorTimeoutListener) {\n        clearTimeout(this.initEditorTimeoutListener);\n      }\n      this.initEditorTimeoutListener = setTimeout(() => {\n        editor\n          .getAction('editor.action.formatDocument')\n          .run()\n          .finally(() => {\n            queryControl.markAsPristine();\n          });\n      }, 100);\n    }\n  }\n\n  /** Open payload modal */\n  public async onOpenPayload() {\n    const { PayloadModalComponent } = await import('@oort-front/shared');\n    this.dialog.open(PayloadModalComponent, {\n      data: {\n        payload: this.payload,\n      },\n    });\n  }\n\n  /**\n   * Toggles the inline editor for the field\n   *\n   * @param field field to edit\n   */\n  public toggleInlineEditor(field: typeof this.currEditingField) {\n    // Start the edition\n    if (field) {\n      this.inlineEditionForm.reset();\n      const index = this.valueFields.indexOf(field);\n\n      this.inlineEditionForm.patchValue({\n        name: field.name,\n        type: field.type,\n        index,\n      });\n    }\n    // Close the edition (null as parameter)\n    else {\n      const isValid = this.inlineEditionForm.valid;\n      if (isValid && this.currEditingField) {\n        const { name, type } = this.inlineEditionForm.value;\n        const index = this.valueFields.indexOf(this.currEditingField);\n        const fieldsCopy = cloneDeep(this.valueFields);\n\n        // Update the field in the list\n        if (index >= 0 && !!name && type) {\n          fieldsCopy[index].name = name;\n          fieldsCopy[index].type = type;\n        }\n        this.valueFields = fieldsCopy;\n        this.inlineEditionForm.reset();\n\n        // Update the fields in the form\n        this.referenceForm.get('fields')?.setValue(this.valueFields);\n        this.referenceForm.get('fields')?.markAsDirty();\n      }\n    }\n\n    // Store the field we're currently editing or null if we're not editing any\n    this.currEditingField = field;\n  }\n\n  /** Adds a new field to the field list */\n  public addField() {\n    // Save any field that's currently being edited\n    this.toggleInlineEditor(null);\n\n    this.inlineEditionForm.patchValue({\n      index: this.valueFields.length,\n    });\n\n    // Add a new field to the list\n    this.valueFields = [\n      ...this.valueFields,\n      {\n        name: this.translateService.instant(\n          'components.referenceData.fields.new'\n        ),\n        type: 'string',\n      },\n    ];\n\n    // Start the edition\n    this.toggleInlineEditor(this.valueFields[this.valueFields.length - 1]);\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    if (this.addChipListTimeoutListener) {\n      clearTimeout(this.addChipListTimeoutListener);\n    }\n    if (this.initEditorTimeoutListener) {\n      clearTimeout(this.initEditorTimeoutListener);\n    }\n    if (this.formTimeoutListener) {\n      clearTimeout(this.formTimeoutListener);\n    }\n    if (this.inlineEditionOutsideClickListener) {\n      this.inlineEditionOutsideClickListener();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host ::ng-deep {\n  kendo-grid {\n    .k-grid-aria-root {\n      border-radius: inherit;\n    }\n  }\n}\n",
                    "styleUrl": "./reference-data.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Reference data page.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breadcrumbService",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "refDataService",
                        "type": "ReferenceDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 176,
                "rawdescription": "\n\nReference data page.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 5005,
                            "end": 5011,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4999,
                            "end": 5004,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5039,
                            "end": 5044,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5033,
                            "end": 5038,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5071,
                            "end": 5079,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5065,
                            "end": 5070,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5116,
                            "end": 5122,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5110,
                            "end": 5115,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5150,
                            "end": 5166,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translateService"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5144,
                            "end": 5149,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5205,
                            "end": 5222,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "breadcrumbService"
                        },
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5199,
                            "end": 5204,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Setups the breadcrumb component variables</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5277,
                            "end": 5291,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "refDataService"
                        },
                        "type": "ReferenceDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5271,
                            "end": 5276,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Reference data service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5327,
                            "end": 5333,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5321,
                            "end": 5326,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>dialog</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5353,
                            "end": 5355,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5347,
                            "end": 5352,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5381,
                            "end": 5389,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "renderer"
                        },
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5375,
                            "end": 5380,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular Renderer2 service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 5428,
                            "end": 5436,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "document"
                        },
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 5422,
                            "end": 5427,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Current document token</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "queryControl": {
                    "name": "queryControl",
                    "getSignature": {
                        "name": "queryControl",
                        "type": "",
                        "returnType": "",
                        "line": 156,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 4341,
                                "end": 4380,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 4342,
                                    "end": 4349,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>the graphqlQuery form control</p>\n"
                            }
                        ]
                    }
                },
                "name": {
                    "name": "name",
                    "getSignature": {
                        "name": "name",
                        "type": "",
                        "returnType": "AbstractControl | null",
                        "line": 161,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 4483,
                                "end": 4516,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 4484,
                                    "end": 4491,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>name of reference model</p>\n"
                            }
                        ]
                    }
                },
                "type": {
                    "name": "type",
                    "getSignature": {
                        "name": "type",
                        "type": "string",
                        "returnType": "string",
                        "line": 166,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 4612,
                                "end": 4645,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 4613,
                                    "end": 4620,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>type of reference model</p>\n"
                            }
                        ]
                    }
                },
                "canFetchFields": {
                    "name": "canFetchFields",
                    "getSignature": {
                        "name": "canFetchFields",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 171,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 4738,
                                "end": 4770,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 4739,
                                    "end": 4746,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>admin can fetch fields</p>\n"
                            }
                        ]
                    }
                }
            },
            "templateData": "<ui-spinner *ngIf=\"loading\"></ui-spinner>\n<ng-container *ngIf=\"!loading && referenceData\">\n  <!-- Header -->\n  <div class=\"flex justify-start items-center mb-5\">\n    <h1 class=\"overflow-hidden whitespace-nowrap text-ellipsis mb-0\">\n      {{ referenceData.name }}\n    </h1>\n    <shared-access\n      [access]=\"referenceData.permissions\"\n      [objectTypeName]=\"'common.referenceData.one' | translate\"\n      (save)=\"saveAccess($event)\"\n      *ngIf=\"referenceData?.canUpdate\"\n    ></shared-access>\n  </div>\n  <!-- Form -->\n  <form [formGroup]=\"referenceForm\" class=\"flex flex-col mb-8\">\n    <div class=\"flex gap-x-2\">\n      <!-- Name -->\n      <div uiFormFieldDirective class=\"flex-auto\">\n        <label>{{ 'common.name' | translate }}</label>\n        <input\n          formControlName=\"name\"\n          type=\"text\"\n          [placeholder]=\"'common.placeholder.name' | translate\"\n        />\n      </div>\n      <!-- Type selection -->\n      <div uiFormFieldDirective class=\"w-44\">\n        <label>{{ 'common.type.one' | translate }}</label>\n        <ui-select-menu formControlName=\"type\">\n          <ui-select-option\n            *ngFor=\"let referenceTypeChoice of referenceTypeChoices\"\n            [value]=\"referenceTypeChoice\"\n          >\n            {{ referenceTypeChoice }}\n          </ui-select-option>\n        </ui-select-menu>\n      </div>\n    </div>\n    <!-- Specific to GraphQL and Rest type -->\n    <div *ngIf=\"['rest', 'graphql'].includes(type)\" class=\"flex flex-col\">\n      <div class=\"flex gap-x-2\" [class.flex-col]=\"type === 'graphql'\">\n        <!-- API Configuration -->\n        <div uiFormFieldDirective class=\"flex-auto\">\n          <label>{{ 'common.apiConfiguration.one' | translate }}</label>\n          <ui-graphql-select\n            valueField=\"id\"\n            textField=\"name\"\n            [query]=\"apiConfigurationsQuery\"\n            formControlName=\"apiConfiguration\"\n            [selectedElements]=\"[selectedApiConfiguration]\"\n          >\n          </ui-graphql-select>\n        </div>\n        <!-- GraphQL Query -->\n        <div *ngIf=\"type === 'graphql' && queryControl; else restQueryTmpl\">\n          <label class=\"block text-sm font-medium leading-6 text-gray-900\"\n            >{{ 'pages.referenceData.queryName' | translate }} *</label\n          >\n          <ngx-monaco-editor\n            (onInit)=\"initEditor($event)\"\n            [options]=\"editorOptions\"\n            [formControl]=\"queryControl\"\n            class=\"mb-2\"\n          ></ngx-monaco-editor>\n        </div>\n        <!-- QueryName -->\n        <ng-template #restQueryTmpl>\n          <div uiFormFieldDirective class=\"flex-1\">\n            <label>{{ 'pages.referenceData.queryName' | translate }}</label>\n            <input\n              formControlName=\"query\"\n              type=\"text\"\n              [placeholder]=\"'common.placeholder.name' | translate\"\n            />\n          </div>\n        </ng-template>\n      </div>\n      <div class=\"flex gap-x-2\">\n        <!-- Path -->\n        <div\n          class=\"flex-auto\"\n          uiFormFieldDirective\n          *ngIf=\"['rest', 'graphql'].includes(type)\"\n        >\n          <label>{{ 'pages.referenceData.path' | translate }}</label>\n          <input\n            formControlName=\"path\"\n            type=\"text\"\n            [placeholder]=\"'common.placeholder.name' | translate\"\n          />\n          <ui-icon\n            icon=\"info_outline\"\n            class=\"cursor-pointer\"\n            variant=\"grey\"\n            uiSuffix\n            [uiTooltip]=\"'pages.referenceData.tooltip.path' | translate\"\n          ></ui-icon>\n        </div>\n        <!-- Value field to be displayed -->\n        <ng-container *ngTemplateOutlet=\"valueFieldTmpl\"></ng-container>\n      </div>\n      <ui-alert class=\"mb-4\">{{\n        'pages.referenceData.fields.help' | translate\n      }}</ui-alert>\n      <!-- Fields -->\n      <kendo-grid *ngIf=\"!loading\" [data]=\"valueFields\" class=\"rounded-md\">\n        <kendo-grid-column\n          field=\"name\"\n          title=\"{{ 'pages.referenceData.fields.title' | translate }}\"\n        >\n          <ng-template kendoGridCellTemplate let-dataItem>\n            <p *ngIf=\"currEditingField !== dataItem\">\n              {{ dataItem.name }}\n            </p>\n            <kendo-textbox\n              *ngIf=\"currEditingField === dataItem\"\n              [placeholder]=\"'models.form.field.name' | translate\"\n              [formControl]=\"inlineEditionForm.controls.name\"\n            ></kendo-textbox>\n          </ng-template>\n        </kendo-grid-column>\n        <kendo-grid-column\n          field=\"type\"\n          title=\"{{ 'pages.referenceData.type' | translate }}\"\n        >\n          <ng-template kendoGridCellTemplate let-dataItem>\n            <p *ngIf=\"currEditingField !== dataItem\">\n              {{ dataItem.type }}\n            </p>\n            <kendo-dropdownlist\n              *ngIf=\"currEditingField === dataItem\"\n              [data]=\"validJsonTypes\"\n              [formControl]=\"inlineEditionForm.controls.type\"\n            ></kendo-dropdownlist>\n          </ng-template>\n        </kendo-grid-column>\n        <!-- remove button -->\n        <kendo-grid-column\n          [columnMenu]=\"false\"\n          [width]=\"86\"\n          [resizable]=\"false\"\n        >\n          <ng-template kendoGridCellTemplate let-dataItem>\n            <div [ngClass]=\"{ hidden: currEditingField === dataItem }\">\n              <button\n                kendoButton\n                class=\"text-center\"\n                icon=\"edit\"\n                [look]=\"'flat'\"\n                (click)=\"toggleInlineEditor(dataItem)\"\n                [uiTooltip]=\"'common.edit' | translate\"\n              ></button>\n              <button\n                kendoButton\n                class=\"text-center\"\n                icon=\"delete\"\n                [look]=\"'flat'\"\n                (click)=\"onRemoveField(dataItem)\"\n                [uiTooltip]=\"'common.remove' | translate\"\n              ></button>\n            </div>\n            <div [ngClass]=\"{ hidden: currEditingField !== dataItem }\">\n              <button\n                kendoButton\n                class=\"text-center\"\n                icon=\"save\"\n                [look]=\"'flat'\"\n                (click)=\"toggleInlineEditor(null)\"\n                [uiTooltip]=\"'common.save' | translate\"\n              ></button>\n              <button\n                kendoButton\n                class=\"text-center\"\n                icon=\"cancel\"\n                [look]=\"'flat'\"\n                (click)=\"currEditingField = null\"\n                [uiTooltip]=\"'common.cancel' | translate\"\n              ></button>\n            </div>\n          </ng-template>\n        </kendo-grid-column>\n        <ng-template kendoGridNoRecordsTemplate>\n          {{ 'pages.referenceData.fields.noFields' | translate }}\n          <ui-spinner class=\"my-2\" *ngIf=\"loadingFields\"></ui-spinner>\n        </ng-template>\n      </kendo-grid>\n      <!-- Button to add new field -->\n      <button\n        kendoButton\n        class=\"text-center mt-2\"\n        icon=\"add\"\n        (click)=\"addField()\"\n      >\n        {{ 'components.referenceData.fields.add' | translate }}\n      </button>\n    </div>\n    <!-- CSV Input for static type -->\n    <div *ngIf=\"type === 'static'\" class=\"flex flex-col gap-2\">\n      <div uiFormFieldDirective class=\"flex-auto\">\n        <label>{{ 'pages.referenceData.csv' | translate }}</label>\n        <ui-textarea\n          #csvData\n          [placeholder]=\"'pages.referenceData.placeholder.csv' | translate\"\n          [value]=\"csvValue\"\n        >\n        </ui-textarea>\n      </div>\n      <div class=\"flex gap-2 items-center\">\n        <div uiFormFieldDirective class=\"flex-1\">\n          <label>{{ 'common.separator' | translate }}</label>\n          <ui-select-menu [formControl]=\"separator\">\n            <ui-select-option value=\",\">{{\n              'common.comma' | translate\n            }}</ui-select-option>\n            <ui-select-option value=\";\">{{\n              'common.semicolon' | translate\n            }}</ui-select-option>\n          </ui-select-menu>\n        </div>\n        <ui-button\n          category=\"secondary\"\n          variant=\"primary\"\n          (click)=\"onValidateCSV()\"\n        >\n          {{ 'pages.referenceData.validateCsv' | translate }}\n        </ui-button>\n      </div>\n      <!-- Value field to be displayed -->\n      <ng-container *ngTemplateOutlet=\"valueFieldTmpl\"></ng-container>\n    </div>\n    <ui-spinner *ngIf=\"csvLoading\"></ui-spinner>\n    <!-- For graphql -->\n    <!-- <div uiFormFieldDirective *ngIf=\"type === 'graphql'\">\n      <label>{{ 'pages.referenceData.graphQLFilter' | translate }} </label>\n      <input\n        formControlName=\"graphQLFilter\"\n        type=\"text\"\n        [placeholder]=\"\n          'pages.referenceData.placeholder.graphQLFilter' | translate\n        \"\n      />\n      <ui-icon\n        icon=\"info_outline\"\n        class=\"cursor-pointer\"\n        variant=\"grey\"\n        uiSuffix\n        [uiTooltip]=\"'pages.referenceData.tooltip.graphQLFilter' | translate\"\n      ></ui-icon>\n    </div> -->\n    <!-- Kendo grid to preview data on static type -->\n    <div *ngIf=\"!csvLoading && csvValue && type === 'static'\">\n      <kendo-grid [data]=\"newData\">\n        <kendo-grid-column\n          *ngFor=\"let field of valueFields\"\n          [field]=\"field.name\"\n          [title]=\"field.name + ' (' + field.type + ')'\"\n        ></kendo-grid-column>\n      </kendo-grid>\n    </div>\n\n    <!-- Value field selection template -->\n    <ng-template #valueFieldTmpl>\n      <div\n        uiFormFieldDirective\n        class=\"flex-1\"\n        *ngIf=\"!csvLoading && type && valueFields.length > 0\"\n      >\n        <label>{{ 'pages.referenceData.valueField' | translate }}</label>\n        <ui-select-menu formControlName=\"valueField\">\n          <ui-select-option\n            *ngFor=\"let value of valueFields\"\n            [value]=\"value.name\"\n            >{{ value.name }}</ui-select-option\n          >\n        </ui-select-menu>\n      </div>\n    </ng-template>\n  </form>\n  <!-- Floating div for actions buttons -->\n  <ui-fixed-wrapper>\n    <div *ngIf=\"canFetchFields\" class=\"flex gap-1 mr-auto items-center\">\n      <!-- Fetch fields -->\n      <ui-button\n        [disabled]=\"loadingFields\"\n        category=\"secondary\"\n        variant=\"primary\"\n        (click)=\"getFields()\"\n      >\n        {{ 'pages.referenceData.fields.fetch' | translate }}\n      </ui-button>\n      <!-- Show payload -->\n      <ui-button\n        *ngIf=\"payload && !loadingFields\"\n        category=\"secondary\"\n        variant=\"primary\"\n        (click)=\"onOpenPayload()\"\n      >\n        {{ 'pages.referenceData.payload.show' | translate }}\n      </ui-button>\n    </div>\n    <!-- Submit button -->\n    <ui-button\n      category=\"secondary\"\n      variant=\"primary\"\n      (click)=\"onSave()\"\n      [disabled]=\"referenceForm.invalid || !referenceForm.dirty\"\n    >\n      {{ 'common.save' | translate }}\n    </ui-button>\n  </ui-fixed-wrapper>\n</ng-container>\n"
        },
        {
            "name": "ReferenceDatasComponent",
            "id": "component-ReferenceDatasComponent-899f5dc9e4f7cbd13fedeb79a685d7519b8bb658dea98e48527d15af48b6c9ef98129ed876d002b1886c227730117ee6d16551fbea1a6d3ac29d07f500e407fb",
            "file": "apps/back-office/src/app/dashboard/pages/reference-datas/reference-datas.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reference-datas",
            "styleUrls": [
                "./reference-datas.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reference-datas.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cachedReferenceDatas",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReferenceData[]",
                    "optional": false,
                    "description": "<p>Cached table data</p>\n",
                    "line": 59,
                    "rawdescription": "\nCached table data",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dataSource",
                    "defaultValue": "new Array<ReferenceData>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Table data</p>\n",
                    "line": 57,
                    "rawdescription": "\nTable data",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 89,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\n    'name',\n    'type',\n    'apiConfiguration',\n    'modifiedAt',\n    'actions',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Available columns</p>\n",
                    "line": 49,
                    "rawdescription": "\nAvailable columns",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filter",
                    "defaultValue": "{\n    filters: [],\n    logic: 'and',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Query filters</p>\n",
                    "line": 61,
                    "rawdescription": "\nQuery filters",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading status</p>\n",
                    "line": 45,
                    "rawdescription": "\nLoading status",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageInfo",
                    "defaultValue": "{\n    pageIndex: 0,\n    pageSize: ITEMS_PER_PAGE,\n    length: 0,\n    endCursor: '',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Pagination info</p>\n",
                    "line": 66,
                    "rawdescription": "\nPagination info",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "referenceDatasQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<ReferenceDatasQueryResponse>",
                    "optional": false,
                    "description": "<p>Reference data apollo query</p>\n",
                    "line": 73,
                    "rawdescription": "\nReference data apollo query",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableSort",
                    "optional": false,
                    "description": "<p>Table sorting</p>\n",
                    "line": 75,
                    "rawdescription": "\nTable sorting",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updating",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Updating status</p>\n",
                    "line": 47,
                    "rawdescription": "\nUpdating status",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchReferenceDatas",
                    "args": [
                        {
                            "name": "refetch",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 306,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate reference datas query.\n\n",
                    "description": "<p>Update reference datas query.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8605,
                                "end": 8612,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "refetch"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 8599,
                                "end": 8604,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>erase previous query results</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates the Reference data query, and subscribes to the query changes.\n",
                    "description": "<p>Creates the Reference data query, and subscribes to the query changes.</p>\n"
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplays the AddReferenceData modal.\nCreates a new reference data on closed if result.\n",
                    "description": "<p>Displays the AddReferenceData modal.\nCreates a new reference data on closed if result.</p>\n",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemoves a reference data if authorized.\n\n",
                    "description": "<p>Removes a reference data if authorized.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5595,
                                "end": 5602,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "element"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5589,
                                "end": 5594,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Reference data to delete.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 5641,
                                "end": 5642,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5635,
                                "end": 5640,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>click event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onFilter",
                    "args": [
                        {
                            "name": "filter",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFilter data query\n\n",
                    "description": "<p>Filter data query</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3812,
                                "end": 3818,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "filter"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3806,
                                "end": 3811,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Filter to apply</p>\n"
                        }
                    ]
                },
                {
                    "name": "onPage",
                    "args": [
                        {
                            "name": "e",
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles page event.\n\n",
                    "description": "<p>Handles page event.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3429,
                                "end": 3430,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3423,
                                "end": 3428,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>page event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onSort",
                    "args": [
                        {
                            "name": "event",
                            "type": "TableSort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 274,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle sort change.\n\n",
                    "description": "<p>Handle sort change.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7676,
                                "end": 7681,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "TableSort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7670,
                                "end": 7675,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>sort event</p>\n"
                        }
                    ]
                },
                {
                    "name": "updateValues",
                    "args": [
                        {
                            "name": "data",
                            "type": "ReferenceDatasQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 285,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate ref data value\n\n",
                    "description": "<p>Update ref data value</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7848,
                                "end": 7852,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "ReferenceDatasQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7842,
                                "end": 7847,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>query response data</p>\n"
                        },
                        {
                            "name": {
                                "pos": 7885,
                                "end": 7892,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "loading"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7879,
                                "end": 7884,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>loading status</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>List of Reference data page.</p>\n",
            "rawdescription": "\n\nList of Reference data page.\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Apollo, QueryRef } from 'apollo-angular';\nimport {\n  AddReferenceDataMutationResponse,\n  DeleteReferenceDataMutationResponse,\n  ReferenceData,\n  ConfirmService,\n  UnsubscribeComponent,\n  ReferenceDatasQueryResponse,\n} from '@oort-front/shared';\nimport { GET_REFERENCE_DATAS } from './graphql/queries';\nimport { ADD_REFERENCE_DATA, DELETE_REFERENCE_DATA } from './graphql/mutations';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  getCachedValues,\n  updateQueryUniqueValues,\n} from '../../../utils/update-queries';\nimport { Dialog } from '@angular/cdk/dialog';\nimport {\n  TableSort,\n  UIPageChangeEvent,\n  handleTablePageEvent,\n} from '@oort-front/ui';\nimport { ApolloQueryResult } from '@apollo/client';\nimport { SnackbarService } from '@oort-front/ui';\n\n/** Default pagination settings. */\nconst ITEMS_PER_PAGE = 10;\n\n/**\n * List of Reference data page.\n */\n@Component({\n  selector: 'app-reference-datas',\n  templateUrl: './reference-datas.component.html',\n  styleUrls: ['./reference-datas.component.scss'],\n})\nexport class ReferenceDatasComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  /** Loading status */\n  public loading = true;\n  /** Updating status */\n  public updating = false;\n  /** Available columns */\n  public displayedColumns = [\n    'name',\n    'type',\n    'apiConfiguration',\n    'modifiedAt',\n    'actions',\n  ];\n  /** Table data */\n  public dataSource = new Array<ReferenceData>();\n  /** Cached table data */\n  public cachedReferenceDatas: ReferenceData[] = [];\n  /** Query filters */\n  public filter: any = {\n    filters: [],\n    logic: 'and',\n  };\n  /** Pagination info */\n  public pageInfo = {\n    pageIndex: 0,\n    pageSize: ITEMS_PER_PAGE,\n    length: 0,\n    endCursor: '',\n  };\n  /** Reference data apollo query */\n  private referenceDatasQuery!: QueryRef<ReferenceDatasQueryResponse>;\n  /** Table sorting */\n  private sort!: TableSort;\n\n  /**\n   * List of Reference data page.\n   *\n   * @param apollo Apollo service\n   * @param dialog Dialog service\n   * @param snackBar Shared snackbar service\n   * @param confirmService Shared confirm service\n   * @param router Angular router\n   * @param translate Angular translation service\n   */\n  constructor(\n    private apollo: Apollo,\n    public dialog: Dialog,\n    private snackBar: SnackbarService,\n    private confirmService: ConfirmService,\n    private router: Router,\n    private translate: TranslateService\n  ) {\n    super();\n  }\n\n  /**\n   * Creates the Reference data query, and subscribes to the query changes.\n   */\n  ngOnInit(): void {\n    this.referenceDatasQuery =\n      this.apollo.watchQuery<ReferenceDatasQueryResponse>({\n        query: GET_REFERENCE_DATAS,\n        variables: {\n          first: ITEMS_PER_PAGE,\n          afterCursor: this.pageInfo.endCursor,\n          filter: this.filter,\n          sortField: this.sort?.sortDirection && this.sort.active,\n          sortOrder: this.sort?.sortDirection,\n        },\n      });\n\n    this.referenceDatasQuery.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ data, loading }) => {\n        this.updateValues(data, loading);\n      });\n\n    // Initializing sort to an empty one\n    this.sort = {\n      active: '',\n      sortDirection: '',\n    };\n  }\n\n  /**\n   * Handles page event.\n   *\n   * @param e page event.\n   */\n  onPage(e: UIPageChangeEvent): void {\n    const cachedData = handleTablePageEvent(\n      e,\n      this.pageInfo,\n      this.cachedReferenceDatas\n    );\n    if (cachedData && cachedData.length === this.pageInfo.pageSize) {\n      this.dataSource = cachedData;\n    } else {\n      this.fetchReferenceDatas();\n    }\n  }\n\n  /**\n   * Filter data query\n   *\n   * @param filter Filter to apply\n   */\n  onFilter(filter: any) {\n    this.filter = filter;\n    this.fetchReferenceDatas(true);\n  }\n\n  /**\n   * Displays the AddReferenceData modal.\n   * Creates a new reference data on closed if result.\n   */\n  async onAdd(): Promise<void> {\n    const { AddReferenceDataComponent } = await import(\n      './add-reference-data/add-reference-data.component'\n    );\n    const dialogRef = this.dialog.open(AddReferenceDataComponent);\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.apollo\n          .mutate<AddReferenceDataMutationResponse>({\n            mutation: ADD_REFERENCE_DATA,\n            variables: {\n              name: value.name,\n            },\n          })\n          .subscribe({\n            next: ({ errors, data }) => {\n              if (errors) {\n                this.snackBar.openSnackBar(\n                  this.translate.instant(\n                    'common.notifications.objectNotCreated',\n                    {\n                      type: this.translate\n                        .instant('common.referenceData.one')\n                        .toLowerCase(),\n                      error: errors ? errors[0].message : '',\n                    }\n                  ),\n                  { error: true }\n                );\n              } else {\n                if (data) {\n                  this.router.navigate([\n                    '/referencedata',\n                    data.addReferenceData.id,\n                  ]);\n                }\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n\n  /**\n   * Removes a reference data if authorized.\n   *\n   * @param element Reference data to delete.\n   * @param e click event.\n   */\n  onDelete(element: any, e: any): void {\n    e.stopPropagation();\n    const dialogRef = this.confirmService.openConfirmModal({\n      title: this.translate.instant('components.referenceData.delete.title'),\n      content: this.translate.instant(\n        'components.referenceData.delete.confirmationMessage',\n        {\n          name: element.name,\n        }\n      ),\n      confirmText: this.translate.instant('common.delete'),\n      confirmVariant: 'danger',\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.apollo\n          .mutate<DeleteReferenceDataMutationResponse>({\n            mutation: DELETE_REFERENCE_DATA,\n            variables: {\n              id: element.id,\n            },\n          })\n          .subscribe({\n            next: (res) => {\n              if (res && !res.errors) {\n                this.snackBar.openSnackBar(\n                  this.translate.instant('common.notifications.objectDeleted', {\n                    value: this.translate.instant('common.referenceData.one'),\n                  })\n                );\n                this.dataSource = this.dataSource.filter(\n                  (x) => x.id !== element.id\n                );\n              } else {\n                if (res.errors) {\n                  this.snackBar.openSnackBar(\n                    this.translate.instant(\n                      'common.notifications.objectNotDeleted',\n                      {\n                        value: this.translate.instant(\n                          'common.referenceData.one'\n                        ),\n                        error: res.errors ? res.errors[0] : '',\n                      }\n                    ),\n                    { error: true }\n                  );\n                }\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n\n  /**\n   * Handle sort change.\n   *\n   * @param event sort event\n   */\n  onSort(event: TableSort): void {\n    this.sort = event;\n    this.fetchReferenceDatas(true);\n  }\n\n  /**\n   * Update ref data value\n   *\n   * @param data query response data\n   * @param loading loading status\n   */\n  private updateValues(data: ReferenceDatasQueryResponse, loading: boolean) {\n    const mappedValues = data.referenceDatas.edges.map((x) => x.node);\n    this.cachedReferenceDatas = updateQueryUniqueValues(\n      this.cachedReferenceDatas,\n      mappedValues\n    );\n    this.pageInfo.length = data.referenceDatas.totalCount;\n    this.pageInfo.endCursor = data.referenceDatas.pageInfo.endCursor;\n    this.dataSource = this.cachedReferenceDatas.slice(\n      this.pageInfo.pageSize * this.pageInfo.pageIndex,\n      this.pageInfo.pageSize * (this.pageInfo.pageIndex + 1)\n    );\n    this.loading = loading;\n    this.updating = false;\n  }\n\n  /**\n   * Update reference datas query.\n   *\n   * @param refetch erase previous query results\n   */\n  private fetchReferenceDatas(refetch?: boolean): void {\n    this.updating = true;\n    const variables = {\n      first: this.pageInfo.pageSize,\n      afterCursor: refetch ? null : this.pageInfo.endCursor,\n      filter: this.filter,\n      sortField: this.sort?.sortDirection && this.sort.active,\n      sortOrder: this.sort?.sortDirection,\n    };\n    const cachedValues: ReferenceDatasQueryResponse = getCachedValues(\n      this.apollo.client,\n      GET_REFERENCE_DATAS,\n      variables\n    );\n    if (refetch) {\n      this.cachedReferenceDatas = [];\n      this.pageInfo.pageIndex = 0;\n    }\n    if (cachedValues) {\n      this.updateValues(cachedValues, false);\n    } else {\n      if (refetch) {\n        // Rebuild the query\n        this.referenceDatasQuery.refetch(variables);\n      } else {\n        // Fetch more records\n        this.referenceDatasQuery\n          .fetchMore({\n            variables,\n          })\n          .then((results: ApolloQueryResult<ReferenceDatasQueryResponse>) => {\n            this.updateValues(results.data, results.loading);\n          });\n      }\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./reference-datas.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>List of Reference data page.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 75,
                "rawdescription": "\n\nList of Reference data page.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2101,
                            "end": 2107,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2095,
                            "end": 2100,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2135,
                            "end": 2141,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2129,
                            "end": 2134,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2169,
                            "end": 2177,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2163,
                            "end": 2168,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2214,
                            "end": 2228,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2208,
                            "end": 2213,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2264,
                            "end": 2270,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2258,
                            "end": 2263,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2298,
                            "end": 2307,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2292,
                            "end": 2297,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translation service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex gap-8 justify-between mb-8 flex-col sm:flex-row\">\n  <app-reference-data-filter\n    (filter)=\"onFilter($event)\"\n    [loading]=\"updating\"\n  ></app-reference-data-filter>\n  <!-- Actions -->\n  <ui-button\n    icon=\"add\"\n    category=\"secondary\"\n    variant=\"primary\"\n    (click)=\"onAdd()\"\n    *ngIf=\"'create' | able : 'ReferenceData'\"\n  >\n    {{ 'models.referenceData.add' | translate }}\n  </ui-button>\n</div>\n\n<!-- Table container -->\n<div class=\"overflow-x-hidden shadow-2lg\">\n  <!-- Table scroll container -->\n  <div class=\"overflow-x-auto\">\n    <table\n      *ngIf=\"!loading\"\n      cdk-table\n      uiTableWrapper\n      [dataSource]=\"dataSource\"\n      (sortChange)=\"onSort($event)\"\n    >\n      <ng-container cdkColumnDef=\"name\">\n        <th uiTableHeaderSort=\"name\" uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          <span class=\"headerTitle\">\n            {{ 'common.name' | translate }}\n          </span>\n        </th>\n        <td\n          uiCell\n          *cdkCellDef=\"let element\"\n          class=\"!text-gray-900 !font-medium max-w-[30vw]\"\n        >\n          {{ element.name }}\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"type\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          <span class=\"headerTitle\">\n            {{ 'pages.referenceData.type' | translate }}\n          </span>\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">{{ element.type }}</td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"apiConfiguration\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          <span class=\"headerTitle\">\n            {{ 'common.apiConfiguration.one' | translate }}\n          </span>\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">\n          {{ element.apiConfiguration ? element.apiConfiguration.name : '' }}\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"modifiedAt\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          <span class=\"headerTitle\">\n            {{ 'common.modifiedOn' | translate }}\n          </span>\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">\n          {{ element.modifiedAt | sharedDate : 'medium' }}\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"actions\" [stickyEnd]=\"true\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\" class=\"w-16\"></th>\n        <td uiCell *cdkCellDef=\"let element\">\n          <ui-button\n            [isIcon]=\"true\"\n            icon=\"more_vert\"\n            [uiMenuTriggerFor]=\"menu\"\n            (click)=\"$event.stopPropagation()\"\n            [disabled]=\"!(element.canUpdate || element.canDelete)\"\n            [uiTooltip]=\"'common.actions' | translate\"\n          >\n          </ui-button>\n          <ui-menu #menu>\n            <button\n              uiMenuItem\n              (click)=\"onDelete(element, $event)\"\n              *ngIf=\"element.canDelete\"\n            >\n              <ui-icon icon=\"delete\" variant=\"danger\"></ui-icon>\n              {{ 'common.delete' | translate }}\n            </button>\n          </ui-menu>\n        </td>\n      </ng-container>\n\n      <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        cdk-row\n        *cdkRowDef=\"let row; columns: displayedColumns\"\n        class=\"cursor-pointer\"\n        [routerLink]=\"['/referencedata', row.id]\"\n      ></tr>\n    </table>\n    <!-- Skeleton table when loading -->\n    <shared-skeleton-table\n      *ngIf=\"loading\"\n      [columns]=\"[\n        'common.name',\n        'pages.referenceData.type',\n        'common.apiConfiguration.one',\n        'common.modifiedOn'\n      ]\"\n      [actions]=\"true\"\n    >\n    </shared-skeleton-table>\n  </div>\n</div>\n<ui-paginator\n  [disabled]=\"loading || updating\"\n  [pageIndex]=\"pageInfo.pageIndex\"\n  [pageSize]=\"pageInfo.pageSize\"\n  [pageSizeOptions]=\"[10, 25, 50]\"\n  [totalItems]=\"pageInfo.length\"\n  [ariaLabel]=\"'components.referenceData.paginator.ariaLabel' | translate\"\n  (pageChange)=\"onPage($event)\"\n>\n</ui-paginator>\n"
        },
        {
            "name": "ResourceComponent",
            "id": "component-ResourceComponent-0e1b454a178042d7902c086a13a35b15f5cd1e162f20e8cada1229d810c626ace0a141b9046944b5eefcea841f3d442daa575765ade12785807ecd1cba6ff59a",
            "file": "apps/back-office/src/app/dashboard/pages/resource/resource.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-resource",
            "styleUrls": [
                "./resource.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./resource.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Resource id</p>\n",
                    "line": 42,
                    "rawdescription": "\n\nResource id\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 38,
                    "rawdescription": "\n\nLoading state\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "resource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Resource</p>\n",
                    "line": 46,
                    "rawdescription": "\n\nResource\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedTab",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>Selected tab</p>\n",
                    "line": 50,
                    "rawdescription": "\n\nSelected tab\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getResourceData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLoads resource data.\n",
                    "description": "<p>Loads resource data.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLoad data from the id of the resource passed as a parameter.",
                    "description": "<p>Load data from the id of the resource passed as a parameter.</p>\n"
                },
                {
                    "name": "saveAccess",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdits the permissions layer.\n\n",
                    "description": "<p>Edits the permissions layer.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3452,
                                "end": 3453,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3446,
                                "end": 3451,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>New permissions.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Component used to display resource in a table.</p>\n",
            "rawdescription": "\n\nComponent used to display resource in a table.\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  EditResourceMutationResponse,\n  ResourceQueryResponse,\n  BreadcrumbService,\n} from '@oort-front/shared';\nimport { EDIT_RESOURCE } from './graphql/mutations';\nimport { GET_RESOURCE_BY_ID } from './graphql/queries';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SnackbarService } from '@oort-front/ui';\n\n/**\n * Array of tab names sorted by position index.\n */\nconst ROUTE_TABS: string[] = [\n  'forms',\n  'layouts',\n  'aggregations',\n  'calculated-fields',\n  'records',\n];\n\n/**\n * Component used to display resource in a table.\n */\n@Component({\n  selector: 'app-resource',\n  templateUrl: './resource.component.html',\n  styleUrls: ['./resource.component.scss'],\n})\nexport class ResourceComponent implements OnInit {\n  // === DATA ===\n  /**\n   * Loading state\n   */\n  public loading = true;\n  /**\n   * Resource id\n   */\n  public id = '';\n  /**\n   * Resource\n   */\n  public resource: any;\n  /**\n   * Selected tab\n   */\n  public selectedTab = 0;\n\n  /**\n   * ResourceComponent constructor.\n   *\n   * @param apollo Used to load the resources.\n   * @param route Used to get route arguments.\n   * @param router Used to change app route.\n   * @param snackBar Service used to show a snackbar.\n   * @param translate Service used to get translations.\n   * @param breadcrumbService Shared breadcrumb service\n   */\n  constructor(\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private router: Router,\n    private snackBar: SnackbarService,\n    private translate: TranslateService,\n    private breadcrumbService: BreadcrumbService\n  ) {}\n\n  /** Load data from the id of the resource passed as a parameter. */\n  ngOnInit(): void {\n    const routeTab: string = this.router.url.split('/').pop() || '';\n    this.selectedTab = ROUTE_TABS.findIndex((tab) => tab === routeTab);\n    this.id = this.route.snapshot.paramMap.get('id') || '';\n    if (this.id !== null) {\n      this.getResourceData();\n    } else {\n      this.router.navigate(['/resources']);\n    }\n  }\n\n  /**\n   * Loads resource data.\n   */\n  private getResourceData(): void {\n    this.loading = true;\n\n    // get the resource and the form linked\n    this.apollo\n      .query<ResourceQueryResponse>({\n        query: GET_RESOURCE_BY_ID,\n        variables: {\n          id: this.id,\n        },\n      })\n      .subscribe({\n        next: ({ data, loading }) => {\n          if (data.resource) {\n            this.resource = data.resource;\n            this.breadcrumbService.setBreadcrumb(\n              '@resource',\n              this.resource.name as string\n            );\n            history.pushState({ resource: this.resource }, '');\n            this.loading = loading;\n          } else {\n            this.snackBar.openSnackBar(\n              this.translate.instant('common.notifications.accessNotProvided', {\n                type: this.translate\n                  .instant('common.resource.one')\n                  .toLowerCase(),\n                error: '',\n              }),\n              { error: true }\n            );\n            this.router.navigate(['/resources']);\n          }\n        },\n        error: (err) => {\n          this.snackBar.openSnackBar(err.message, { error: true });\n          this.router.navigate(['/resources']);\n        },\n      });\n  }\n\n  /**\n   * Edits the permissions layer.\n   *\n   * @param e New permissions.\n   */\n  saveAccess(e: any): void {\n    this.apollo\n      .mutate<EditResourceMutationResponse>({\n        mutation: EDIT_RESOURCE,\n        variables: {\n          id: this.id,\n          permissions: e,\n        },\n      })\n      .subscribe({\n        next: ({ errors, data }) => {\n          if (errors) {\n            this.snackBar.openSnackBar(\n              this.translate.instant('common.notifications.objectNotUpdated', {\n                type: this.translate.instant('common.resource.one'),\n                error: errors ? errors[0].message : '',\n              }),\n              { error: true }\n            );\n          } else {\n            this.snackBar.openSnackBar(\n              this.translate.instant('common.notifications.objectUpdated', {\n                type: this.translate.instant('common.resource.one'),\n                value: '',\n              })\n            );\n            if (data) {\n              this.resource = data.editResource;\n            }\n          }\n        },\n        error: (err) => {\n          this.snackBar.openSnackBar(err.message, { error: true });\n        },\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./resource.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>ResourceComponent constructor.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breadcrumbService",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 50,
                "rawdescription": "\n\nResourceComponent constructor.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1179,
                            "end": 1185,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1173,
                            "end": 1178,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Used to load the resources.</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1226,
                            "end": 1231,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1220,
                            "end": 1225,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Used to get route arguments.</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1273,
                            "end": 1279,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1267,
                            "end": 1272,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Used to change app route.</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1318,
                            "end": 1326,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1312,
                            "end": 1317,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Service used to show a snackbar.</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1372,
                            "end": 1381,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1366,
                            "end": 1371,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Service used to get translations.</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1428,
                            "end": 1445,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "breadcrumbService"
                        },
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1422,
                            "end": 1427,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared breadcrumb service</p>\n"
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ui-spinner *ngIf=\"loading\"></ui-spinner>\n<ng-container *ngIf=\"!loading && resource\">\n  <div class=\"flex justify-start items-center mb-5\">\n    <h1 class=\"overflow-hidden whitespace-nowrap text-ellipsis mb-0\">\n      {{ resource.name }}\n    </h1>\n    <shared-access\n      [access]=\"resource.permissions\"\n      [objectTypeName]=\"'common.resource.one' | translate\"\n      (save)=\"saveAccess($event)\"\n      *ngIf=\"resource.canUpdate\"\n    >\n    </shared-access>\n  </div>\n  <ui-tabs [selectedIndex]=\"selectedTab\">\n    <ui-tab\n      (click)=\"selectedTab = 0\"\n      routerLink=\"./forms\"\n      [state]=\"{ resource }\"\n    >\n      <ng-container ngProjectAs=\"label\">{{\n        'common.form.few' | translate\n      }}</ng-container>\n    </ui-tab>\n    <ui-tab\n      (click)=\"selectedTab = 1\"\n      routerLink=\"./layouts\"\n      [state]=\"{ resource }\"\n    >\n      <ng-container ngProjectAs=\"label\">{{\n        'common.layout.few' | translate\n      }}</ng-container>\n    </ui-tab>\n    <ui-tab\n      (click)=\"selectedTab = 2\"\n      routerLink=\"./aggregations\"\n      [state]=\"{ resource }\"\n    >\n      <ng-container ngProjectAs=\"label\">{{\n        'common.aggregation.few' | translate\n      }}</ng-container>\n    </ui-tab>\n    <ui-tab\n      (click)=\"selectedTab = 3\"\n      routerLink=\"./calculated-fields\"\n      [state]=\"{ resource }\"\n    >\n      <ng-container ngProjectAs=\"label\">{{\n        'common.calculatedField.few' | translate\n      }}</ng-container>\n    </ui-tab>\n    <ui-tab\n      (click)=\"selectedTab = 4\"\n      routerLink=\"./records\"\n      [state]=\"{ resource }\"\n    >\n      <ng-container ngProjectAs=\"label\">{{\n        'common.record.few' | translate\n      }}</ng-container>\n    </ui-tab>\n  </ui-tabs>\n  <router-outlet></router-outlet>\n</ng-container>\n"
        },
        {
            "name": "ResourcesComponent",
            "id": "component-ResourcesComponent-26013f66f840df28c61112923949112b7a6181259c577a7909a6bed5afdbd8c2978b2e17601d2d79e56741558238baa1c418e037eff1739081244696e185de35",
            "file": "apps/back-office/src/app/dashboard/pages/resources/resources.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-resources",
            "styleUrls": [
                "./resources.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./resources.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cachedResources",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Resource[]",
                    "optional": false,
                    "description": "<p>Cached resources</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nCached resources\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['name', 'createdAt', 'recordsCount', 'actions']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "<p>Columns to display</p>\n",
                    "line": 58,
                    "rawdescription": "\n\nColumns to display\n"
                },
                {
                    "name": "filter",
                    "defaultValue": "{\n    filters: [],\n    logic: 'and',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Filter state</p>\n",
                    "line": 82,
                    "rawdescription": "\n\nFilter state\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filterLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Filter loading state</p>\n",
                    "line": 50,
                    "rawdescription": "\n\nFilter loading state\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 46,
                    "rawdescription": "\n\nLoading state\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageInfo",
                    "defaultValue": "{\n    pageIndex: 0,\n    pageSize: DEFAULT_PAGE_SIZE,\n    length: 0,\n    endCursor: '',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Page info</p>\n",
                    "line": 91,
                    "rawdescription": "\n\nPage info\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "resources",
                    "defaultValue": "new Array<Resource>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Resources list</p>\n",
                    "line": 66,
                    "rawdescription": "\n\nResources list\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "resourcesQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<ResourcesQueryResponse>",
                    "optional": false,
                    "description": "<p>Resources query</p>\n",
                    "line": 54,
                    "rawdescription": "\n\nResources query\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "sort",
                    "defaultValue": "{ active: '', sortDirection: '' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableSort",
                    "optional": false,
                    "description": "<p>Sort state</p>\n",
                    "line": 76,
                    "rawdescription": "\n\nSort state\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updating",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Sorting state</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nSorting state\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchResources",
                    "args": [
                        {
                            "name": "refetch",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "filter",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate resources query.\n\n",
                    "description": "<p>Update resources query.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4081,
                                "end": 4088,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "refetch"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 4075,
                                "end": 4080,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>erase previous query results</p>\n"
                        },
                        {
                            "name": {
                                "pos": 4130,
                                "end": 4136,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "filter"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 4124,
                                "end": 4129,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>filter value</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLoad the resources.",
                    "description": "<p>Load the resources.</p>\n"
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 280,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplays the AddForm modal.\nCreates a new form on closed if result.\n",
                    "description": "<p>Displays the AddForm modal.\nCreates a new form on closed if result.</p>\n",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "resource",
                            "type": "Resource",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 225,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemoves a resource.\n\n",
                    "description": "<p>Removes a resource.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5331,
                                "end": 5339,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "resource"
                            },
                            "type": "Resource",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5325,
                                "end": 5330,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Resource to delete.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onFilter",
                    "args": [
                        {
                            "name": "filter",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFilters applications and updates table.\n\n",
                    "description": "<p>Filters applications and updates table.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3704,
                                "end": 3710,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "filter"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3698,
                                "end": 3703,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>filter event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onPage",
                    "args": [
                        {
                            "name": "e",
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles page event.\n\n",
                    "description": "<p>Handles page event.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3310,
                                "end": 3311,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "UIPageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3304,
                                "end": 3309,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>page event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onSort",
                    "args": [
                        {
                            "name": "event",
                            "type": "TableSort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle sort change.\n\n",
                    "description": "<p>Handle sort change.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3912,
                                "end": 3917,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "TableSort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3906,
                                "end": 3911,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>sort event</p>\n"
                        }
                    ]
                },
                {
                    "name": "updateValues",
                    "args": [
                        {
                            "name": "data",
                            "type": "ResourcesQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 329,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate resource data value\n\n",
                    "description": "<p>Update resource data value</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8603,
                                "end": 8607,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "ResourcesQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8597,
                                "end": 8602,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>query response data</p>\n"
                        },
                        {
                            "name": {
                                "pos": 8640,
                                "end": 8647,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "loading"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8634,
                                "end": 8639,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>loading status</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Component which will show all the resources in the app.</p>\n",
            "rawdescription": "\n\nComponent which will show all the resources in the app.\n",
            "type": "component",
            "sourceCode": "import { Apollo, QueryRef } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport { DELETE_RESOURCE, ADD_FORM } from './graphql/mutations';\nimport { GET_RESOURCES_EXTENDED } from './graphql/queries';\nimport {\n  AddFormMutationResponse,\n  DeleteResourceMutationResponse,\n  Resource,\n  ConfirmService,\n  UnsubscribeComponent,\n  ResourcesQueryResponse,\n} from '@oort-front/shared';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  getCachedValues,\n  updateQueryUniqueValues,\n} from '../../../utils/update-queries';\nimport { Dialog } from '@angular/cdk/dialog';\nimport {\n  TableSort,\n  UIPageChangeEvent,\n  handleTablePageEvent,\n} from '@oort-front/ui';\nimport { SnackbarService } from '@oort-front/ui';\nimport { takeUntil } from 'rxjs';\n\n/**\n * Default number of resources that will be shown at once.\n */\nconst DEFAULT_PAGE_SIZE = 10;\n\n/**\n * Component which will show all the resources in the app.\n */\n@Component({\n  selector: 'app-resources',\n  templateUrl: './resources.component.html',\n  styleUrls: ['./resources.component.scss'],\n})\nexport class ResourcesComponent extends UnsubscribeComponent implements OnInit {\n  // === DATA ===\n  /**\n   * Loading state\n   */\n  public loading = true;\n  /**\n   * Filter loading state\n   */\n  public filterLoading = false;\n  /**\n   * Resources query\n   */\n  private resourcesQuery!: QueryRef<ResourcesQueryResponse>;\n  /**\n   * Columns to display\n   */\n  displayedColumns: string[] = ['name', 'createdAt', 'recordsCount', 'actions'];\n  /**\n   * Cached resources\n   */\n  public cachedResources: Resource[] = [];\n  /**\n   * Resources list\n   */\n  public resources = new Array<Resource>();\n\n  // === SORTING ===\n  /**\n   * Sorting state\n   */\n  public updating = false;\n  /**\n   * Sort state\n   */\n  private sort: TableSort = { active: '', sortDirection: '' };\n\n  // === FILTERING ===\n  /**\n   * Filter state\n   */\n  public filter: any = {\n    filters: [],\n    logic: 'and',\n  };\n\n  // === PAGINATION ===\n  /**\n   * Page info\n   */\n  public pageInfo = {\n    pageIndex: 0,\n    pageSize: DEFAULT_PAGE_SIZE,\n    length: 0,\n    endCursor: '',\n  };\n\n  /**\n   * ResourcesComponent constructor.\n   *\n   * @param dialog Used for opening a dialog.\n   * @param apollo Used for loading the resources.\n   * @param snackBar Service used to show the snackbar,\n   * @param confirmService Service used to show the confirmation window\n   * @param translate Service used to get translations\n   * @param router Used to change the app route.\n   */\n  constructor(\n    private dialog: Dialog,\n    private apollo: Apollo,\n    private snackBar: SnackbarService,\n    private confirmService: ConfirmService,\n    private translate: TranslateService,\n    private router: Router\n  ) {\n    super();\n  }\n\n  /** Load the resources. */\n  ngOnInit(): void {\n    this.resourcesQuery = this.apollo.watchQuery<ResourcesQueryResponse>({\n      query: GET_RESOURCES_EXTENDED,\n      variables: {\n        first: DEFAULT_PAGE_SIZE,\n        sortField: 'name',\n        sortOrder: 'asc',\n        afterCursor: null,\n        filter: this.filter,\n      },\n    });\n\n    this.resourcesQuery.valueChanges.subscribe(({ data, loading }) => {\n      this.updateValues(data, loading);\n    });\n  }\n\n  /**\n   * Handles page event.\n   *\n   * @param e page event.\n   */\n  onPage(e: UIPageChangeEvent): void {\n    const cachedData = handleTablePageEvent(\n      e,\n      this.pageInfo,\n      this.cachedResources\n    );\n    if (cachedData && cachedData.length === this.pageInfo.pageSize) {\n      this.resources = cachedData;\n    } else {\n      this.fetchResources();\n    }\n  }\n\n  /**\n   * Filters applications and updates table.\n   *\n   * @param filter filter event.\n   */\n  onFilter(filter: any): void {\n    this.filterLoading = true;\n    this.filter = filter;\n    this.fetchResources(true, filter);\n  }\n\n  /**\n   * Handle sort change.\n   *\n   * @param event sort event\n   */\n  onSort(event: TableSort): void {\n    this.sort = event;\n    this.fetchResources(true);\n  }\n\n  /**\n   * Update resources query.\n   *\n   * @param refetch erase previous query results\n   * @param filter filter value\n   */\n  private fetchResources(refetch?: boolean, filter?: any): void {\n    this.updating = true;\n    const variables = {\n      first: this.pageInfo.pageSize,\n      afterCursor: refetch ? null : this.pageInfo.endCursor,\n      filter: filter ?? this.filter,\n      sortField:\n        (this.sort?.sortDirection && this.sort.active) !== ''\n          ? this.sort?.sortDirection && this.sort.active\n          : 'name',\n      sortOrder:\n        this.sort?.sortDirection !== '' ? this.sort?.sortDirection : 'asc',\n    };\n    const cachedValues: ResourcesQueryResponse = getCachedValues(\n      this.apollo.client,\n      GET_RESOURCES_EXTENDED,\n      variables\n    );\n    if (refetch) {\n      this.cachedResources = [];\n      this.pageInfo.pageIndex = 0;\n    }\n    if (cachedValues) {\n      this.updateValues(cachedValues, false);\n    } else {\n      if (refetch) {\n        this.resourcesQuery.refetch(variables);\n      } else {\n        this.loading = true;\n        this.resourcesQuery\n          .fetchMore({\n            variables,\n          })\n          .then((results) => this.updateValues(results.data, results.loading));\n      }\n    }\n  }\n\n  /**\n   * Removes a resource.\n   *\n   * @param resource Resource to delete.\n   */\n  onDelete(resource: Resource): void {\n    const dialogRef = this.confirmService.openConfirmModal({\n      title: this.translate.instant('common.deleteObject', {\n        name: this.translate.instant('common.resource.one'),\n      }),\n      content: this.translate.instant(\n        'components.resource.delete.confirmationMessage',\n        {\n          name: resource.name,\n        }\n      ),\n      confirmText: this.translate.instant('components.confirmModal.delete'),\n      confirmVariant: 'danger',\n    });\n\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.apollo\n          .mutate<DeleteResourceMutationResponse>({\n            mutation: DELETE_RESOURCE,\n            variables: {\n              id: resource.id,\n            },\n          })\n          .subscribe(({ errors }) => {\n            if (!errors) {\n              this.resources = this.resources.filter(\n                (x) => x.id !== resource.id\n              );\n              this.snackBar.openSnackBar(\n                this.translate.instant('common.notifications.objectDeleted', {\n                  value: this.translate.instant('common.resource.one'),\n                })\n              );\n            } else {\n              this.snackBar.openSnackBar(\n                this.translate.instant(\n                  'common.notifications.objectNotDeleted',\n                  {\n                    value: this.translate.instant('common.resource.one'),\n                    error: errors[0].message,\n                  }\n                ),\n                { error: true }\n              );\n            }\n          });\n      }\n    });\n  }\n\n  /**\n   * Displays the AddForm modal.\n   * Creates a new form on closed if result.\n   */\n  async onAdd(): Promise<void> {\n    const { AddResourceModalComponent } = await import(\n      '../../../components/add-resource-modal/add-resource-modal.component'\n    );\n    const dialogRef = this.dialog.open(AddResourceModalComponent);\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        const variablesData = { name: value.name };\n        this.apollo\n          .mutate<AddFormMutationResponse>({\n            mutation: ADD_FORM,\n            variables: variablesData,\n          })\n          .subscribe({\n            next: ({ errors, data }) => {\n              if (errors) {\n                this.snackBar.openSnackBar(\n                  this.translate.instant(\n                    'common.notifications.objectNotCreated',\n                    {\n                      type: this.translate\n                        .instant('common.form.one')\n                        .toLowerCase(),\n                      error: errors[0].message,\n                    }\n                  ),\n                  { error: true }\n                );\n              } else {\n                if (data) {\n                  const { id } = data.addForm;\n                  this.router.navigate(['/forms/builder', id]);\n                }\n              }\n            },\n            error: (err) => {\n              this.snackBar.openSnackBar(err.message, { error: true });\n            },\n          });\n      }\n    });\n  }\n\n  /**\n   * Update resource data value\n   *\n   * @param data query response data\n   * @param loading loading status\n   */\n  updateValues(data: ResourcesQueryResponse, loading: boolean) {\n    const mappedValues = data.resources?.edges?.map((x) => x.node);\n    this.cachedResources = updateQueryUniqueValues(\n      this.cachedResources,\n      mappedValues\n    );\n    this.pageInfo.length = data.resources.totalCount;\n    this.pageInfo.endCursor = data.resources.pageInfo.endCursor;\n    this.loading = loading;\n    this.updating = loading;\n    this.resources = this.cachedResources.slice(\n      this.pageInfo.pageSize * this.pageInfo.pageIndex,\n      this.pageInfo.pageSize * (this.pageInfo.pageIndex + 1)\n    );\n    this.filterLoading = false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./resources.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>ResourcesComponent constructor.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 96,
                "rawdescription": "\n\nResourcesComponent constructor.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2226,
                            "end": 2232,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2220,
                            "end": 2225,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Used for opening a dialog.</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2272,
                            "end": 2278,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2266,
                            "end": 2271,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Used for loading the resources.</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2323,
                            "end": 2331,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2317,
                            "end": 2322,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Service used to show the snackbar,</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2379,
                            "end": 2393,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2373,
                            "end": 2378,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Service used to show the confirmation window</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2451,
                            "end": 2460,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2445,
                            "end": 2450,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Service used to get translations</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2506,
                            "end": 2512,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2500,
                            "end": 2505,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Used to change the app route.</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"mb-8 flex flex-col gap-2\">\n  <div class=\"flex gap-8 justify-between flex-col sm:flex-row\">\n    <!-- FILTERING -->\n    <app-resources-filter\n      #filter\n      (filter)=\"onFilter($event)\"\n      [loading]=\"filterLoading\"\n    ></app-resources-filter>\n    <!-- ACTIONS -->\n    <ui-button\n      icon=\"add\"\n      category=\"secondary\"\n      variant=\"primary\"\n      (click)=\"onAdd()\"\n    >\n      {{ 'models.resource.create' | translate }}\n    </ui-button>\n  </div>\n  <ng-container *ngTemplateOutlet=\"filter.expandedFilter\"></ng-container>\n</div>\n<!-- Table container -->\n<div class=\"overflow-x-hidden shadow-2lg\">\n  <!-- Table scroll container -->\n  <div class=\"overflow-x-auto\">\n    <table\n      *ngIf=\"!loading\"\n      cdk-table\n      uiTableWrapper\n      [dataSource]=\"resources\"\n      (sortChange)=\"onSort($event)\"\n    >\n      <ng-container cdkColumnDef=\"name\">\n        <th uiTableHeaderSort=\"name\" uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          <span class=\"headerTitle\">\n            {{ 'common.name' | translate }}\n          </span>\n        </th>\n        <td\n          uiCell\n          *cdkCellDef=\"let element\"\n          class=\"!text-gray-900 !font-medium max-w-[30vw]\"\n        >\n          {{ element.name }}\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"createdAt\">\n        <th\n          uiTableHeaderSort=\"createdAt\"\n          uiCellHeader\n          *cdkHeaderCellDef\n          scope=\"col\"\n        >\n          <span class=\"headerTitle\">\n            {{ 'common.createdOn' | translate }}\n          </span>\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">\n          {{ element.createdAt | sharedDate }}\n        </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"recordsCount\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\">\n          <span class=\"headerTitle\">\n            {{ 'common.record.few' | translate }}\n          </span>\n        </th>\n        <td uiCell *cdkCellDef=\"let element\">{{ element.recordsCount }}</td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"actions\" [stickyEnd]=\"true\">\n        <th uiCellHeader *cdkHeaderCellDef scope=\"col\" class=\"w-16\"></th>\n        <td uiCell *cdkCellDef=\"let element\">\n          <ui-button\n            [isIcon]=\"true\"\n            icon=\"more_vert\"\n            [uiMenuTriggerFor]=\"menu\"\n            (click)=\"$event.stopPropagation()\"\n            [disabled]=\"!element.canDelete\"\n            [uiTooltip]=\"'common.actions' | translate\"\n          >\n          </ui-button>\n          <ui-menu #menu>\n            <button uiMenuItem (click)=\"onDelete(element)\">\n              <ui-icon icon=\"delete\" variant=\"danger\"></ui-icon>\n              {{ 'common.delete' | translate }}\n            </button>\n          </ui-menu>\n        </td>\n      </ng-container>\n\n      <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        class=\"cursor-pointer\"\n        cdk-row\n        *cdkRowDef=\"let row; columns: displayedColumns\"\n        [routerLink]=\"['/resources', row.id]\"\n      ></tr>\n    </table>\n    <!-- Loading indicator -->\n    <shared-skeleton-table\n      *ngIf=\"loading\"\n      [columns]=\"['common.name', 'common.createdOn', 'common.record.few']\"\n      [actions]=\"true\"\n    >\n    </shared-skeleton-table>\n  </div>\n</div>\n<!-- Pagination -->\n<ui-paginator\n  [disabled]=\"loading || updating\"\n  [pageIndex]=\"pageInfo.pageIndex\"\n  [pageSize]=\"pageInfo.pageSize\"\n  [pageSizeOptions]=\"[10, 25, 50]\"\n  [totalItems]=\"pageInfo.length\"\n  [ariaLabel]=\"'components.resource.paginator.ariaLabel' | translate\"\n  (pageChange)=\"onPage($event)\"\n>\n</ui-paginator>\n"
        },
        {
            "name": "RolesComponent",
            "id": "component-RolesComponent-bed14e53af57ff88197900e230bbb4dd1a7a14300ae13536a7c6e8ce499ae291b0ff827893d8b852c8a24124c1818633a597b0925c020a40ceb0a5e3956e7912",
            "file": "apps/back-office/src/app/shared/pages/roles/roles.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-roles",
            "styleUrls": [
                "./roles.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./roles.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inApplication",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>If application view would be displayed or not</p>\n",
                    "line": 16,
                    "rawdescription": "\nIf application view would be displayed or not"
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Application roles page component.</p>\n",
            "rawdescription": "\n\nApplication roles page component.\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UnsubscribeComponent } from '@oort-front/shared';\nimport { takeUntil } from 'rxjs';\n\n/**\n * Application roles page component.\n */\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.scss'],\n})\nexport class RolesComponent extends UnsubscribeComponent {\n  /** If application view would be displayed or not */\n  inApplication = true;\n\n  /**\n   * Role list constructor\n   * Display role list in case it's an application related role list or a main role list view\n   *\n   * @param {ActivatedRoute} router Activated route containing the route data\n   */\n  constructor(private router: ActivatedRoute) {\n    super();\n    this.router.data.pipe(takeUntil(this.destroy$)).subscribe((data) => {\n      this.inApplication = Boolean(data.inApplication);\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./roles.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Role list constructor\nDisplay role list in case it&#39;s an application related role list or a main role list view</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "rawdescription": "\n\nRole list constructor\nDisplay role list in case it's an application related role list or a main role list view\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 655,
                            "end": 661,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 632,
                            "end": 637,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Activated route containing the route data</p>\n",
                        "typeExpression": {
                            "pos": 638,
                            "end": 654,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 312,
                            "type": {
                                "pos": 639,
                                "end": 653,
                                "flags": 8388608,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 180,
                                "typeName": {
                                    "pos": 639,
                                    "end": 653,
                                    "flags": 8388608,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "ActivatedRoute"
                                }
                            }
                        }
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "templateData": "<shared-roles [inApplication]=\"inApplication\"></shared-roles>\n"
        },
        {
            "name": "RoleSummaryComponent",
            "id": "component-RoleSummaryComponent-10df32d09a51dfed16ed1a06c04bbed05fbcedfff9e7d2db55d7ac00c416166168ea80b553e96e003e7f64472a7b9b69dfd1480b16a38b9e9dfbdb81ac77de2a",
            "file": "apps/back-office/src/app/shared/pages/role-summary/role-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-role-summary",
            "styleUrls": [
                "./role-summary.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./role-summary.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "application",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Application",
                    "optional": false,
                    "description": "<p>Application</p>\n",
                    "line": 29,
                    "rawdescription": "\n\nApplication\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "applicationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationService",
                    "optional": false,
                    "description": "Shared application service",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Role id</p>\n",
                    "line": 25,
                    "rawdescription": "\n\nRole id\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Role summary page</p>\n",
            "rawdescription": "\n\nRole summary page\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  Application,\n  ApplicationService,\n  UnsubscribeComponent,\n} from '@oort-front/shared';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Role summary page\n */\n@Component({\n  selector: 'app-role-summary',\n  templateUrl: './role-summary.component.html',\n  styleUrls: ['./role-summary.component.scss'],\n})\nexport class RoleSummaryComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  /**\n   * Role id\n   */\n  public id = '';\n  /**\n   * Application\n   */\n  public application!: Application;\n\n  /**\n   * Role summary page\n   *\n   * @param route Angular current route\n   * @param applicationService Shared application service\n   */\n  constructor(\n    private route: ActivatedRoute,\n    public applicationService: ApplicationService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.route.params.pipe(takeUntil(this.destroy$)).subscribe((val: any) => {\n      this.id = val.id;\n    });\n    this.applicationService.application$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((application: Application | null) => {\n        if (application) {\n          this.application = application;\n        }\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./role-summary.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Role summary page</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "rawdescription": "\n\nRole summary page\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 660,
                            "end": 665,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 654,
                            "end": 659,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular current route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 700,
                            "end": 718,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 694,
                            "end": 699,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<shared-role-summary\n  [id]=\"id\"\n  [application]=\"application\"\n></shared-role-summary>\n"
        },
        {
            "name": "SettingsComponent",
            "id": "component-SettingsComponent-f79d3a2f1ef91f077c2b91ae39ac0c3fd3bd56023ac2628264b840a5a25250c93d97a90cf93f1176aa723ba0546df9615b8fd82cff326b25af7053ac3ae4eb8a",
            "file": "apps/back-office/src/app/application/pages/settings/settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-settings",
            "styleUrls": [
                "./settings.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./settings.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "application",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Application",
                    "optional": true,
                    "description": "<p>Current application</p>\n",
                    "line": 36,
                    "rawdescription": "\nCurrent application",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "applications",
                    "defaultValue": "new Array<Application>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Application list</p>\n",
                    "line": 30,
                    "rawdescription": "\nApplication list",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 64,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "locked",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "<p>Is application locked for edition</p>\n",
                    "line": 40,
                    "rawdescription": "\nIs application locked for edition",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "lockedByUser",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "<p>Is application locked for edition by current user</p>\n",
                    "line": 42,
                    "rawdescription": "\nIs application locked for edition by current user",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "settingsForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Application settings form</p>\n",
                    "line": 32,
                    "rawdescription": "\nApplication settings form",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "statusChoices",
                    "defaultValue": "Object.values(status)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Status choices</p>\n",
                    "line": 34,
                    "rawdescription": "\nStatus choices",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Current user</p>\n",
                    "line": 38,
                    "rawdescription": "\nCurrent user",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createSettingsForm",
                    "args": [
                        {
                            "name": "application",
                            "type": "Application",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreate Settings form\n\n",
                    "description": "<p>Create Settings form</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2842,
                                "end": 2853,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "application"
                            },
                            "type": "Application",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2836,
                                "end": 2841,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Current application</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 2880,
                                "end": 2887,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>form group</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDelete application.\nPrompt modal to confirm.\n",
                    "description": "<p>Delete application.\nPrompt modal to confirm.</p>\n"
                },
                {
                    "name": "onDuplicate",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDuplicate application.\n",
                    "description": "<p>Duplicate application.</p>\n",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "onOpenStyle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 206,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOpens right sidenav with custom css editor",
                    "description": "<p>Opens right sidenav with custom css editor</p>\n"
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit settings form.\n",
                    "description": "<p>Submit settings form.</p>\n"
                },
                {
                    "name": "saveAccess",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 218,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdit the permissions layer.\n\n",
                    "description": "<p>Edit the permissions layer.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6857,
                                "end": 6858,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6851,
                                "end": 6856,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>permissions.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Application settings page component.</p>\n",
            "rawdescription": "\n\nApplication settings page component.\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {\n  Application,\n  ApplicationService,\n  ConfirmService,\n  UnsubscribeComponent,\n  DeleteApplicationMutationResponse,\n  status,\n} from '@oort-front/shared';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { DELETE_APPLICATION } from './graphql/mutations';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { CustomStyleComponent } from '../../../components/custom-style/custom-style.component';\nimport { SnackbarService, UILayoutService } from '@oort-front/ui';\n\n/**\n * Application settings page component.\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n})\nexport class SettingsComponent extends UnsubscribeComponent implements OnInit {\n  /** Application list */\n  public applications = new Array<Application>();\n  /** Application settings form */\n  public settingsForm!: ReturnType<typeof this.createSettingsForm>;\n  /** Status choices */\n  public statusChoices = Object.values(status);\n  /** Current application */\n  public application?: Application;\n  /** Current user */\n  public user: any;\n  /** Is application locked for edition */\n  public locked: boolean | undefined = undefined;\n  /** Is application locked for edition by current user */\n  public lockedByUser: boolean | undefined = undefined;\n\n  /**\n   * Application settings page component.\n   *\n   * @param fb Angular form builder\n   * @param apollo Apollo service\n   * @param router Angular router\n   * @param snackBar Shared snackbar service\n   * @param applicationService Shared application service\n   * @param confirmService Shared confirm service\n   * @param dialog Dialog service\n   * @param translate Angular translate service\n   * @param layoutService UI layout service\n   */\n  constructor(\n    private fb: FormBuilder,\n    private apollo: Apollo,\n    private router: Router,\n    private snackBar: SnackbarService,\n    private applicationService: ApplicationService,\n    private confirmService: ConfirmService,\n    public dialog: Dialog,\n    private translate: TranslateService,\n    private layoutService: UILayoutService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.applicationService.application$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((application: Application | null) => {\n        if (application) {\n          this.application = application;\n          this.settingsForm = this.createSettingsForm(application);\n          this.locked = this.application?.locked;\n          this.lockedByUser = this.application?.lockedByUser;\n        }\n      });\n  }\n\n  /**\n   * Create Settings form\n   *\n   * @param application Current application\n   * @returns form group\n   */\n  private createSettingsForm(application: Application) {\n    return this.fb.group({\n      id: [{ value: application.id, disabled: true }],\n      name: [application.name, Validators.required],\n      sideMenu: [application.sideMenu],\n      hideMenu: [application.hideMenu],\n      description: [application.description],\n      status: [application.status],\n    });\n  }\n\n  /**\n   * Submit settings form.\n   */\n  onSubmit(): void {\n    this.applicationService.editApplication(this.settingsForm?.value);\n    this.settingsForm?.markAsPristine();\n  }\n\n  /**\n   * Duplicate application.\n   */\n  async onDuplicate(): Promise<void> {\n    if (this.locked && !this.lockedByUser) {\n      this.snackBar.openSnackBar(\n        this.translate.instant('common.notifications.objectLocked', {\n          name: this.application?.name,\n        })\n      );\n    } else {\n      const { DuplicateApplicationModalComponent } = await import(\n        '../../../components/duplicate-application-modal/duplicate-application-modal.component'\n      );\n      this.dialog.open(DuplicateApplicationModalComponent, {\n        data: {\n          id: this.application?.id,\n          name: this.application?.name,\n        },\n      });\n    }\n  }\n\n  /**\n   * Delete application.\n   * Prompt modal to confirm.\n   */\n  onDelete(): void {\n    if (this.locked && !this.lockedByUser) {\n      this.snackBar.openSnackBar(\n        this.translate.instant('common.notifications.objectLocked', {\n          name: this.application?.name,\n        })\n      );\n    } else {\n      const dialogRef = this.confirmService.openConfirmModal({\n        title: this.translate.instant('common.deleteObject', {\n          name: this.translate.instant('common.application.one'),\n        }),\n        content: this.translate.instant(\n          'components.application.delete.confirmationMessage',\n          { name: this.application?.name }\n        ),\n        confirmText: this.translate.instant('components.confirmModal.delete'),\n        confirmVariant: 'danger',\n      });\n      dialogRef.closed\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((value: any) => {\n          if (value) {\n            const id = this.application?.id;\n            this.apollo\n              .mutate<DeleteApplicationMutationResponse>({\n                mutation: DELETE_APPLICATION,\n                variables: {\n                  id,\n                },\n              })\n              .subscribe({\n                next: ({ errors }) => {\n                  if (errors) {\n                    this.snackBar.openSnackBar(\n                      this.translate.instant(\n                        'common.notifications.objectNotDeleted',\n                        {\n                          value: this.translate.instant(\n                            'common.application.one'\n                          ),\n                          error: errors ? errors[0].message : '',\n                        }\n                      ),\n                      { error: true }\n                    );\n                  } else {\n                    this.snackBar.openSnackBar(\n                      this.translate.instant(\n                        'common.notifications.objectDeleted',\n                        {\n                          value: this.translate.instant(\n                            'common.application.one'\n                          ),\n                        }\n                      )\n                    );\n                  }\n                },\n                error: (err) => {\n                  this.snackBar.openSnackBar(err.message, { error: true });\n                },\n              });\n            this.router.navigate(['/applications']);\n          }\n        });\n    }\n  }\n\n  /** Opens right sidenav with custom css editor */\n  onOpenStyle(): void {\n    this.layoutService.setRightSidenav({\n      component: CustomStyleComponent,\n    });\n    this.layoutService.closeRightSidenav = false;\n  }\n\n  /**\n   * Edit the permissions layer.\n   *\n   * @param e permissions.\n   */\n  saveAccess(e: any): void {\n    this.applicationService.editPermissions(e);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./settings.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Application settings page component.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "layoutService",
                        "type": "UILayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "rawdescription": "\n\nApplication settings page component.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1616,
                            "end": 1618,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1610,
                            "end": 1615,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1652,
                            "end": 1658,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1646,
                            "end": 1651,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1686,
                            "end": 1692,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1680,
                            "end": 1685,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1720,
                            "end": 1728,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1714,
                            "end": 1719,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1765,
                            "end": 1783,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1759,
                            "end": 1764,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1823,
                            "end": 1837,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1817,
                            "end": 1822,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1873,
                            "end": 1879,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1867,
                            "end": 1872,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1907,
                            "end": 1916,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1901,
                            "end": 1906,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1955,
                            "end": 1968,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "layoutService"
                        },
                        "type": "UILayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1949,
                            "end": 1954,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>UI layout service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"settingsForm\" *ngIf=\"settingsForm\">\n  <!-- Header -->\n  <div class=\"flex gap-2 flex-wrap justify-between items-start\">\n    <div class=\"flex items-center gap-1\">\n      <h1 class=\"!m-0\">{{ 'common.general' | translate }}</h1>\n      <!-- Access -->\n      <shared-access\n        [access]=\"application?.permissions\"\n        [objectTypeName]=\"'common.application.one' | translate\"\n        (save)=\"saveAccess($event)\"\n      ></shared-access>\n    </div>\n    <!-- Selection of status -->\n    <div uiFormFieldDirective [outline]=\"false\" class=\"p-0\">\n      <label>{{ 'common.status' | translate }}</label>\n      <ui-select-menu\n        formControlName=\"status\"\n        [customTemplate]=\"{\n          template: statusTemplate,\n          context: { $implicit: settingsForm.get('status')!.value }\n        }\"\n      >\n        <ui-select-option *ngFor=\"let status of statusChoices\" [value]=\"status\">\n          <ng-container\n            *ngTemplateOutlet=\"statusTemplate; context: { $implicit: status }\"\n          ></ng-container>\n        </ui-select-option>\n      </ui-select-menu>\n    </div>\n  </div>\n  <!-- Settings -->\n  <div class=\"flex flex-col gap-4\">\n    <div class=\"flex gap-x-2 flex-wrap\">\n      <div uiFormFieldDirective class=\"flex-auto\">\n        <label>\n          {{ 'common.name' | translate }}\n        </label>\n        <input\n          formControlName=\"name\"\n          type=\"text\"\n          [placeholder]=\"'common.placeholder.name' | translate\"\n        />\n      </div>\n      <div uiFormFieldDirective class=\"flex-1\">\n        <label>\n          {{ 'models.application.id' | translate }}\n        </label>\n        <input formControlName=\"id\" type=\"text\" />\n      </div>\n    </div>\n    <div uiFormFieldDirective>\n      <label>\n        {{ 'models.application.description' | translate }}\n      </label>\n      <ui-textarea\n        formControlName=\"description\"\n        [placeholder]=\"\n          'components.application.update.placeholder.description' | translate\n        \"\n        [minRows]=\"2\"\n        [maxRows]=\"5\"\n        name=\"textarea\"\n      >\n      </ui-textarea>\n    </div>\n    <!-- Side menu -->\n    <div class=\"mb-6\">\n      <ui-toggle formControlName=\"sideMenu\">\n        <ng-container ngProjectAs=\"label\">\n          {{\n            'components.application.update.sideMenu' | translate\n          }}</ng-container\n        >\n      </ui-toggle>\n    </div>\n    <!-- Default hide menu -->\n    <div class=\"mb-6\">\n      <ui-toggle\n        formControlName=\"hideMenu\"\n      >\n        <ng-container ngProjectAs=\"label\">\n          {{ 'components.application.update.hideMenu' | translate\n          }}<ui-icon\n            class=\"ml-1 cursor-help self-center\"\n            variant=\"grey\"\n            [size]=\"18\"\n            icon=\"info_outline\"\n            [uiTooltip]=\"\n              'components.application.update.tooltip.hideMenu' | translate\n            \"\n          ></ui-icon\n        ></ng-container>\n      </ui-toggle>\n    </div>\n  </div>\n</form>\n<!-- Actions -->\n<div\n  *ngIf=\"\n    application &&\n    (application.canUpdate || application.canDelete || 'create'\n      | able : 'Application')\n  \"\n  class=\"mt-2\"\n>\n  <h1>{{ 'pages.application.settings.actions' | translate }}</h1>\n  <div class=\"flex gap-2 flex-wrap\">\n    <!-- Styling -->\n    <ui-button\n      *ngIf=\"application.canUpdate\"\n      category=\"secondary\"\n      variant=\"primary\"\n      (click)=\"onOpenStyle()\"\n    >\n      {{ 'components.application.customStyling' | translate }}\n    </ui-button>\n    <ui-button\n      icon=\"file_copy\"\n      category=\"tertiary\"\n      variant=\"primary\"\n      (click)=\"onDuplicate()\"\n      *ngIf=\"'create' | able : 'Application'\"\n    >\n      {{ 'common.duplicate' | translate }}\n    </ui-button>\n    <ui-button\n      icon=\"delete\"\n      category=\"tertiary\"\n      variant=\"danger\"\n      (click)=\"onDelete()\"\n      *ngIf=\"application.canDelete\"\n    >\n      {{ 'common.delete' | translate }}\n    </ui-button>\n  </div>\n</div>\n<!-- Floating div for actions buttons -->\n<ui-fixed-wrapper>\n  <!-- Save button -->\n  <ui-button\n    category=\"secondary\"\n    variant=\"primary\"\n    (click)=\"onSubmit()\"\n    [disabled]=\"settingsForm.invalid || !settingsForm.dirty\"\n  >\n    {{ 'common.saveChanges' | translate }}\n  </ui-button>\n</ui-fixed-wrapper>\n<ng-template #statusTemplate let-status>\n  <shared-status-options [status]=\"status\"></shared-status-options>\n</ng-template>\n"
        },
        {
            "name": "SubscriptionModalComponent",
            "id": "component-SubscriptionModalComponent-f3a3c74db10b339abb9a20945fc346f8edf49dd00859d44df0059c107e8279a9fcd60f84accfce847ce27b34cf20a56f87348aa3b642bf01d9bfb5f14db248b2",
            "file": "apps/back-office/src/app/application/pages/subscriptions/components/subscription-modal/subscription-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-subscription-modal",
            "styleUrls": [
                "./subscription-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./subscription-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "applications",
                    "defaultValue": "new BehaviorSubject<Application[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Available applications</p>\n",
                    "line": 99,
                    "rawdescription": "\nAvailable applications",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "applications$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Application[]>",
                    "optional": false,
                    "description": "<p>Applications as observable</p>\n",
                    "line": 103,
                    "rawdescription": "\nApplications as observable",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "applicationsLoading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading indicator for applications</p>\n",
                    "line": 114,
                    "rawdescription": "\nLoading indicator for applications",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "applicationsPageInfo",
                    "defaultValue": "{\n    endCursor: '',\n    hasNextPage: true,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Applications query pagination info</p>\n",
                    "line": 109,
                    "rawdescription": "\nApplications query pagination info",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "applicationsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<ApplicationsApplicationNodesQueryResponse>",
                    "optional": false,
                    "description": "<p>GraphQL applications query</p>\n",
                    "line": 105,
                    "rawdescription": "\nGraphQL applications query",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "cachedApplications",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Application[]",
                    "optional": false,
                    "description": "<p>Cached applications</p>\n",
                    "line": 107,
                    "rawdescription": "\nCached applications",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "Injected dialog data",
                    "line": 147,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogRef<SubscriptionModalComponent>",
                    "optional": false,
                    "description": "Dialog ref",
                    "line": 144,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filteredApplications$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Application[]>",
                    "optional": false,
                    "description": "<p>Filtered applications as observable</p>\n",
                    "line": 101,
                    "rawdescription": "\nFiltered applications as observable",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formsQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryRef<FormsQueryResponse>",
                    "optional": false,
                    "description": "<p>GraphQL forms query</p>\n",
                    "line": 97,
                    "rawdescription": "\nGraphQL forms query",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "subscriptionForm",
                    "defaultValue": "this.fb.group({\n    routingKey: [\n      this.data.subscription ? this.data.subscription.routingKey : '',\n      Validators.required,\n    ],\n    title: [\n      this.data.subscription ? this.data.subscription.title : '',\n      Validators.required,\n    ],\n    convertTo: [\n      this.data.subscription && this.data.subscription.convertTo\n        ? this.data.subscription.convertTo.id\n        : '',\n    ],\n    channel: [\n      this.data.subscription && this.data.subscription.channel\n        ? this.data.subscription.channel.id\n        : '',\n    ],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Subscription reactive form group</p>\n",
                    "line": 76,
                    "rawdescription": "\nSubscription reactive form group"
                }
            ],
            "methodsClass": [
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Application[]",
                    "typeParameters": [],
                    "line": 189,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFilter list of applications\n\n",
                    "description": "<p>Filter list of applications</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5355,
                                "end": 5360,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "string | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5349,
                                "end": 5354,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>value to search with</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 5388,
                                "end": 5395,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>filtered list of applications.</p>\n"
                        }
                    ]
                },
                {
                    "name": "loadOnScrollApplication",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 218,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFetches more applications on scroll.\n\n",
                    "description": "<p>Fetches more applications on scroll.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6179,
                                "end": 6180,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6173,
                                "end": 6178,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>scroll event.</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOpenApplicationSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 206,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdds scroll listener to auto complete.\n",
                    "description": "<p>Adds scroll listener to auto complete.</p>\n"
                },
                {
                    "name": "onSearchChange",
                    "args": [
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 253,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChanges the query according to search text\n\n",
                    "description": "<p>Changes the query according to search text</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7260,
                                "end": 7266,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "search"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7254,
                                "end": 7259,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Search text from the graphql select</p>\n"
                        }
                    ]
                },
                {
                    "name": "updateValues",
                    "args": [
                        {
                            "name": "data",
                            "type": "ApplicationsApplicationNodesQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 276,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdates local list with given data\n\n",
                    "description": "<p>Updates local list with given data</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7715,
                                "end": 7719,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "ApplicationsApplicationNodesQueryResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7709,
                                "end": 7714,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>New values to update forms</p>\n"
                        },
                        {
                            "name": {
                                "pos": 7759,
                                "end": 7766,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "loading"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7753,
                                "end": 7758,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Loading state</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SubscriptionsRoutingModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "IconModule",
                    "type": "module"
                },
                {
                    "name": "SpinnerModule",
                    "type": "module"
                },
                {
                    "name": "MenuModule",
                    "type": "module"
                },
                {
                    "name": "DividerModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "GraphQLSelectModule",
                    "type": "module"
                },
                {
                    "name": "DialogModule",
                    "type": "module"
                },
                {
                    "name": "TooltipModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "AutocompleteModule",
                    "type": "module"
                },
                {
                    "name": "SelectMenuModule",
                    "type": "module"
                },
                {
                    "name": "FormWrapperModule",
                    "type": "module"
                }
            ],
            "description": "<p>Subscription modal component</p>\n",
            "rawdescription": "\n\nSubscription modal component\n",
            "type": "component",
            "sourceCode": "import { Apollo, QueryRef } from 'apollo-angular';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {\n  Application,\n  Channel,\n  Form,\n  Subscription,\n  UnsubscribeComponent,\n  FormsQueryResponse,\n  ApplicationsApplicationNodesQueryResponse,\n} from '@oort-front/shared';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GET_ROUTING_KEYS, GET_FORM_NAMES } from '../../graphql/queries';\nimport { map, startWith, takeUntil } from 'rxjs/operators';\nimport get from 'lodash/get';\nimport { ApolloQueryResult } from '@apollo/client';\nimport {\n  getCachedValues,\n  updateQueryUniqueValues,\n} from '../../../../../utils/update-queries';\nimport { CommonModule, DOCUMENT } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IconModule } from '@oort-front/ui';\nimport { SubscriptionsRoutingModule } from '../../subscriptions-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  SpinnerModule,\n  DividerModule,\n  MenuModule,\n  TooltipModule,\n  ButtonModule,\n  SelectMenuModule,\n  FormWrapperModule,\n  AutocompleteModule,\n  GraphQLSelectModule,\n} from '@oort-front/ui';\nimport { DialogModule } from '@oort-front/ui';\nimport { DialogRef, DIALOG_DATA } from '@angular/cdk/dialog';\n\n/** Items per query for pagination */\nconst ITEMS_PER_PAGE = 10;\n\n/**\n * Subscription modal component\n */\n@Component({\n  standalone: true,\n  imports: [\n    CommonModule,\n    SubscriptionsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IconModule,\n    SpinnerModule,\n    MenuModule,\n    DividerModule,\n    TranslateModule,\n    GraphQLSelectModule,\n    DialogModule,\n    TooltipModule,\n    ButtonModule,\n    AutocompleteModule,\n    SelectMenuModule,\n    FormWrapperModule,\n  ],\n  selector: 'app-subscription-modal',\n  templateUrl: './subscription-modal.component.html',\n  styleUrls: ['./subscription-modal.component.scss'],\n})\nexport class SubscriptionModalComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  /** Subscription reactive form group */\n  subscriptionForm = this.fb.group({\n    routingKey: [\n      this.data.subscription ? this.data.subscription.routingKey : '',\n      Validators.required,\n    ],\n    title: [\n      this.data.subscription ? this.data.subscription.title : '',\n      Validators.required,\n    ],\n    convertTo: [\n      this.data.subscription && this.data.subscription.convertTo\n        ? this.data.subscription.convertTo.id\n        : '',\n    ],\n    channel: [\n      this.data.subscription && this.data.subscription.channel\n        ? this.data.subscription.channel.id\n        : '',\n    ],\n  });\n  /** GraphQL forms query */\n  public formsQuery!: QueryRef<FormsQueryResponse>;\n  /** Available applications */\n  private applications = new BehaviorSubject<Application[]>([]);\n  /** Filtered applications as observable */\n  public filteredApplications$!: Observable<Application[]>;\n  /** Applications as observable */\n  public applications$!: Observable<Application[]>;\n  /** GraphQL applications query */\n  private applicationsQuery!: QueryRef<ApplicationsApplicationNodesQueryResponse>;\n  /** Cached applications */\n  private cachedApplications: Application[] = [];\n  /** Applications query pagination info */\n  private applicationsPageInfo = {\n    endCursor: '',\n    hasNextPage: true,\n  };\n  /** Loading indicator for applications */\n  private applicationsLoading = true;\n\n  /** @returns subscription routing key */\n  get routingKey(): string | null | undefined {\n    return this.subscriptionForm.value.routingKey;\n  }\n\n  /** Set subscription key */\n  set routingKey(value: string | null | undefined) {\n    this.subscriptionForm.controls.routingKey.setValue(value);\n  }\n\n  /** @returns default convert to form */\n  get defaultForm(): Form | null {\n    return get(this.data, 'subscription.convertTo', null);\n  }\n\n  /**\n   * Subscription modal component\n   *\n   * @param fb Angular form builder\n   * @param dialogRef Dialog ref\n   * @param apollo Apollo service\n   * @param data Injected dialog data\n   * @param data.channels list of channels\n   * @param data.subscription subscription\n   * @param document Document\n   */\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: DialogRef<SubscriptionModalComponent>,\n    private apollo: Apollo,\n    @Inject(DIALOG_DATA)\n    public data: {\n      channels: Channel[];\n      subscription?: Subscription;\n    },\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    // Get applications and set pagination logic\n    this.applicationsQuery =\n      this.apollo.watchQuery<ApplicationsApplicationNodesQueryResponse>({\n        query: GET_ROUTING_KEYS,\n        variables: {\n          first: ITEMS_PER_PAGE,\n          afterCursor: this.applicationsPageInfo.endCursor,\n        },\n      });\n\n    // this.applications$ = this.applications.asObservable();\n    this.applicationsQuery.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((results) => {\n        this.updateValues(results.data, results.loading);\n      });\n\n    this.formsQuery = this.apollo.watchQuery<FormsQueryResponse>({\n      query: GET_FORM_NAMES,\n      variables: {\n        first: ITEMS_PER_PAGE,\n        sortField: 'name',\n      },\n    });\n  }\n\n  /**\n   * Filter list of applications\n   *\n   * @param value value to search with\n   * @returns filtered list of applications.\n   */\n  private filter(value: string | null | undefined): Application[] {\n    if (value) {\n      const filterValue = value.toLowerCase();\n      const applications = this.applications.getValue();\n      return applications\n        ? applications.filter(\n            (x) => x.name?.toLowerCase().indexOf(filterValue) === 0\n          )\n        : applications;\n    } else {\n      return this.applications.getValue();\n    }\n  }\n\n  /**\n   * Adds scroll listener to auto complete.\n   */\n  onOpenApplicationSelect(): void {\n    const panel = this.document.getElementById('autocompleteList');\n    if (panel) {\n      panel.onscroll = (event: any) => this.loadOnScrollApplication(event);\n    }\n  }\n\n  /**\n   * Fetches more applications on scroll.\n   *\n   * @param e scroll event.\n   */\n  private loadOnScrollApplication(e: any): void {\n    if (\n      e.target.scrollHeight - (e.target.clientHeight + e.target.scrollTop) <\n      50\n    ) {\n      if (!this.applicationsLoading && this.applicationsPageInfo.hasNextPage) {\n        this.applicationsLoading = true;\n        const variables = {\n          first: ITEMS_PER_PAGE,\n          afterCursor: this.applicationsPageInfo.endCursor,\n        };\n        const cachedValues: ApplicationsApplicationNodesQueryResponse =\n          getCachedValues(this.apollo.client, GET_ROUTING_KEYS, variables);\n        if (cachedValues) {\n          this.updateValues(cachedValues, false);\n        } else {\n          this.applicationsQuery\n            .fetchMore({ variables })\n            .then(\n              (\n                results: ApolloQueryResult<ApplicationsApplicationNodesQueryResponse>\n              ) => {\n                this.updateValues(results.data, results.loading);\n              }\n            );\n        }\n      }\n    }\n  }\n\n  /**\n   * Changes the query according to search text\n   *\n   * @param search Search text from the graphql select\n   */\n  onSearchChange(search: string): void {\n    const variables = this.formsQuery.variables;\n    this.formsQuery.refetch({\n      ...variables,\n      filter: {\n        logic: 'and',\n        filters: [\n          {\n            field: 'name',\n            operator: 'contains',\n            value: search,\n          },\n        ],\n      },\n    });\n  }\n\n  /**\n   * Updates local list with given data\n   *\n   * @param data New values to update forms\n   * @param loading Loading state\n   */\n  private updateValues(\n    data: ApplicationsApplicationNodesQueryResponse,\n    loading: boolean\n  ) {\n    this.cachedApplications = updateQueryUniqueValues(\n      this.cachedApplications,\n      data.applications.edges\n        .map((x) => x.node)\n        .filter((x) => (x.channels ? x.channels.length > 0 : false))\n    );\n    this.applications.next(this.cachedApplications);\n    this.applicationsPageInfo = data.applications.pageInfo;\n    this.applicationsLoading = loading;\n    this.applications$ =\n      this.subscriptionForm.controls.routingKey.valueChanges.pipe(\n        startWith(''),\n        map((x) => this.filter(x))\n      );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./subscription-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Subscription modal component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "DialogRef<SubscriptionModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 129,
                "rawdescription": "\n\nSubscription modal component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 3951,
                            "end": 3953,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3945,
                            "end": 3950,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 3987,
                            "end": 3996,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialogRef"
                        },
                        "type": "DialogRef<SubscriptionModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3981,
                            "end": 3986,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog ref</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4020,
                            "end": 4026,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4014,
                            "end": 4019,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4054,
                            "end": 4058,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "data"
                        },
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4048,
                            "end": 4053,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Injected dialog data</p>\n"
                    },
                    {
                        "name": {
                            "pos": 4178,
                            "end": 4186,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "document"
                        },
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 4172,
                            "end": 4177,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Document</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "routingKey": {
                    "name": "routingKey",
                    "setSignature": {
                        "name": "routingKey",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | null | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 122,
                        "rawdescription": "\nSet subscription key",
                        "description": "<p>Set subscription key</p>\n",
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | null | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "routingKey",
                        "type": "",
                        "returnType": "string | null | undefined",
                        "line": 117,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 3461,
                                "end": 3495,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 3462,
                                    "end": 3469,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>subscription routing key</p>\n"
                            }
                        ]
                    }
                },
                "defaultForm": {
                    "name": "defaultForm",
                    "getSignature": {
                        "name": "defaultForm",
                        "type": "",
                        "returnType": "Form | null",
                        "line": 127,
                        "rawdescription": "",
                        "description": "",
                        "jsdoctags": [
                            {
                                "pos": 3759,
                                "end": 3792,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 345,
                                "tagName": {
                                    "pos": 3760,
                                    "end": 3767,
                                    "flags": 8421376,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>default convert to form</p>\n"
                            }
                        ]
                    }
                }
            },
            "templateData": "<ui-dialog size=\"medium\">\n  <ng-container ngProjectAs=\"header\">\n    <h3 class=\"font-semibold\">\n      {{\n        data.subscription\n          ? ('models.subscription.edit' | translate)\n          : ('models.subscription.new' | translate)\n      }}\n    </h3>\n  </ng-container>\n  <ng-container ngProjectAs=\"content\">\n    <form [formGroup]=\"subscriptionForm\">\n      <div class=\"flex flex-col\">\n        <div uiFormFieldDirective>\n          <label>{{ 'common.title' | translate }}</label>\n          <input\n            type=\"text\"\n            [placeholder]=\"'common.placeholder.title' | translate\"\n            formControlName=\"title\"\n          />\n        </div>\n        <div uiFormFieldDirective>\n          <label>{{\n            'components.application.subscription.modal.listenTo' | translate\n          }}</label>\n          <input\n            type=\"text\"\n            [placeholder]=\"\n              'components.application.subscription.modal.placeholder.listenTo'\n                | translate\n            \"\n            formControlName=\"routingKey\"\n            [uiAutocomplete]=\"auto\"\n            (opened)=\"onOpenApplicationSelect()\"\n          />\n          <ui-autocomplete #auto>\n            <ui-option\n              [isGroup]=\"true\"\n              [label]=\"application.name || ''\"\n              *ngFor=\"let application of applications$ | async\"\n            >\n              {{ application.name || '' }}\n              <ui-option\n                *ngFor=\"let channel of application.channels\"\n                [value]=\"channel.routingKey\"\n                [label]=\"channel.title ?? ''\"\n              >\n                {{ channel.title ?? '' }}\n              </ui-option>\n            </ui-option>\n          </ui-autocomplete>\n          <ui-button\n            *ngIf=\"routingKey\"\n            uiSuffix\n            [isIcon]=\"true\"\n            icon=\"close\"\n            variant=\"primary\"\n            uiSuffix\n            [uiTooltip]=\"\n              'components.application.subscription.modal.routingKey.clear.ariaLabel'\n                | translate\n            \"\n            (click)=\"routingKey = ''\"\n          ></ui-button>\n          <ui-icon\n            icon=\"info\"\n            class=\"cursor-pointer\"\n            variant=\"grey\"\n            uiSuffix\n            [uiTooltip]=\"\n              'components.application.subscription.modal.hint.listenTo'\n                | translate\n            \"\n          ></ui-icon>\n        </div>\n        <div uiFormFieldDirective>\n          <label>{{ 'components.record.convert.select' | translate }}</label>\n          <ui-graphql-select\n            formControlName=\"convertTo\"\n            valueField=\"id\"\n            textField=\"name\"\n            [query]=\"formsQuery\"\n            [selectedElements]=\"[defaultForm]\"\n            (searchChange)=\"onSearchChange($event)\"\n            [filterable]=\"true\"\n          ></ui-graphql-select>\n        </div>\n        <div uiFormFieldDirective>\n          <label>{{ 'components.channel.dropdown.select' | translate }}</label>\n          <ui-select-menu\n            formControlName=\"channel\"\n            [placeholder]=\"'components.channel.selectChannel' | translate\"\n          >\n            <ui-select-option\n              *ngFor=\"let channel of data.channels\"\n              [value]=\"channel.id\"\n            >\n              {{ channel.title }}\n            </ui-select-option>\n          </ui-select-menu>\n        </div>\n      </div>\n    </form>\n  </ng-container>\n  <ng-container ngProjectAs=\"actions\">\n    <ui-button [uiDialogClose] variant=\"default\">{{\n      'common.close' | translate\n    }}</ui-button>\n    <ui-button\n      category=\"secondary\"\n      variant=\"primary\"\n      [uiDialogClose]=\"subscriptionForm.value\"\n      cdkFocusInitial\n      [disabled]=\"!subscriptionForm.valid\"\n    >\n      {{ (data.subscription ? 'common.update' : 'common.create') | translate }}\n    </ui-button>\n  </ng-container>\n</ui-dialog>\n"
        },
        {
            "name": "SubscriptionsComponent",
            "id": "component-SubscriptionsComponent-598da34c18e057d775f85999b56494163fd45744703a8fb4d50c5c3414093af3c03591ec2154800602bc2bf45eb4de82369d177da21c221e6d32c0e53dbbf08c",
            "file": "apps/back-office/src/app/application/pages/subscriptions/subscriptions.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-subscriptions",
            "styleUrls": [
                "./subscriptions.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./subscriptions.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "channels",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Channel[]",
                    "optional": false,
                    "description": "<p>Channels list</p>\n",
                    "line": 40,
                    "rawdescription": "\nChannels list",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 51,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\n    'title',\n    'convertTo',\n    'channel',\n    'actions',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "<p>Table columns</p>\n",
                    "line": 31,
                    "rawdescription": "\nTable columns",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 29,
                    "rawdescription": "\nLoading state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationSubscription[]",
                    "optional": false,
                    "description": "<p>Application subscriptions</p>\n",
                    "line": 27,
                    "rawdescription": "\nApplication subscriptions",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplay the AddSubscription modal.\nCreate a new subscription linked to this application on close.\n",
                    "description": "<p>Display the AddSubscription modal.\nCreate a new subscription linked to this application on close.</p>\n",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDelete subscription\n\n",
                    "description": "<p>Delete subscription</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2379,
                                "end": 2386,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "element"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2373,
                                "end": 2378,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>subscription to delete</p>\n"
                        }
                    ]
                },
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEdit subscription\n\n",
                    "description": "<p>Edit subscription</p>\n",
                    "modifierKind": [
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2595,
                                "end": 2602,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "element"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2589,
                                "end": 2594,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>subscription to edit</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Application subscriptions page component.</p>\n",
            "rawdescription": "\n\nApplication subscriptions page component.\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport { Dialog } from '@angular/cdk/dialog';\nimport {\n  Application,\n  Channel,\n  Subscription as ApplicationSubscription,\n  ApplicationService,\n  UnsubscribeComponent,\n} from '@oort-front/shared';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Application subscriptions page component.\n */\n@Component({\n  selector: 'app-subscriptions',\n  templateUrl: './subscriptions.component.html',\n  styleUrls: ['./subscriptions.component.scss'],\n})\nexport class SubscriptionsComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  // === DATA ===\n  /** Application subscriptions */\n  public subscriptions: ApplicationSubscription[] = [];\n  /** Loading state */\n  public loading = true;\n  /** Table columns */\n  public displayedColumns: string[] = [\n    'title',\n    'convertTo',\n    'channel',\n    'actions',\n  ];\n\n  // === SUBSCRIPTIONS ===\n  /** Channels list */\n  private channels: Channel[] = [];\n\n  /**\n   * Application subscriptions page component\n   *\n   * @param applicationService Shared application service\n   * @param dialog Dialog service\n   * @param apollo Apollo service\n   */\n  constructor(\n    private applicationService: ApplicationService,\n    public dialog: Dialog,\n    private apollo: Apollo\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.loading = false;\n    this.applicationService.application$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((application: Application | null) => {\n        if (application) {\n          this.subscriptions = application.subscriptions || [];\n          this.channels = application.channels || [];\n        } else {\n          this.subscriptions = [];\n        }\n      });\n  }\n\n  /**\n   * Display the AddSubscription modal.\n   * Create a new subscription linked to this application on close.\n   */\n  async onAdd(): Promise<void> {\n    const { SubscriptionModalComponent } = await import(\n      './components/subscription-modal/subscription-modal.component'\n    );\n    const dialogRef = this.dialog.open(SubscriptionModalComponent, {\n      data: {\n        channels: this.channels,\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.applicationService.addSubscription(value);\n      }\n    });\n  }\n\n  /**\n   * Delete subscription\n   *\n   * @param element subscription to delete\n   */\n  onDelete(element: any): void {\n    if (element) {\n      this.applicationService.deleteSubscription(element.routingKey);\n    }\n  }\n\n  /**\n   * Edit subscription\n   *\n   * @param element subscription to edit\n   */\n  async onEdit(element: any): Promise<void> {\n    const { SubscriptionModalComponent } = await import(\n      './components/subscription-modal/subscription-modal.component'\n    );\n    const dialogRef = this.dialog.open(SubscriptionModalComponent, {\n      data: {\n        channels: this.channels,\n        subscription: element,\n      },\n    });\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe((value: any) => {\n      if (value) {\n        this.applicationService.editSubscription(value, element.routingKey);\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./subscriptions.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Application subscriptions page component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 40,
                "rawdescription": "\n\nApplication subscriptions page component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1067,
                            "end": 1085,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1061,
                            "end": 1066,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1125,
                            "end": 1131,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1119,
                            "end": 1124,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1159,
                            "end": 1165,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1153,
                            "end": 1158,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!loading; else loadingTmpl\">\n  <ng-container *ngIf=\"subscriptions.length\">\n    <div class=\"flex justify-end\">\n      <ng-container *ngTemplateOutlet=\"newSubscription\"></ng-container>\n    </div>\n  </ng-container>\n  <ng-template #newSubscription>\n    <ui-button\n      icon=\"add\"\n      category=\"secondary\"\n      variant=\"primary\"\n      (click)=\"onAdd()\"\n    >\n      {{ 'models.application.subscription.create' | translate }}\n    </ui-button>\n  </ng-template>\n  <ng-container *ngIf=\"subscriptions.length; else emptyTmpl\">\n    <!-- Table container -->\n    <div class=\"mt-4 overflow-x-hidden shadow-2lg\">\n      <!-- Table scroll container -->\n      <div class=\"overflow-x-auto\">\n        <table cdk-table uiTableWrapper [dataSource]=\"subscriptions\">\n          <ng-container cdkColumnDef=\"title\">\n            <th uiCellHeader *cdkHeaderCellDef>\n              {{ 'common.title' | translate }}\n            </th>\n            <td\n              uiCell\n              *cdkCellDef=\"let element\"\n              class=\"!text-gray-900 !font-medium max-w-[30vw]\"\n            >\n              {{ element.title }}\n            </td>\n          </ng-container>\n          <ng-container cdkColumnDef=\"convertTo\">\n            <th uiCellHeader *cdkHeaderCellDef>\n              {{ 'components.record.convert.select' | translate }}\n            </th>\n            <td uiCell *cdkCellDef=\"let element\">\n              {{ element.convertTo ? element.convertTo.name : '-' }}\n            </td>\n          </ng-container>\n          <ng-container cdkColumnDef=\"channel\">\n            <th uiCellHeader *cdkHeaderCellDef>\n              {{ 'components.channel.dropdown.select' | translate }}\n            </th>\n            <td uiCell *cdkCellDef=\"let element\">\n              {{ element.channel ? element.channel.title : '-' }}\n            </td>\n          </ng-container>\n          <ng-container cdkColumnDef=\"actions\" [stickyEnd]=\"true\">\n            <th uiCellHeader *cdkHeaderCellDef class=\"w-16\"></th>\n            <td uiCell *cdkCellDef=\"let element\">\n              <ui-button\n                [isIcon]=\"true\"\n                icon=\"more_vert\"\n                [uiMenuTriggerFor]=\"menu\"\n                (click)=\"$event.stopPropagation()\"\n                [uiTooltip]=\"'common.actions' | translate\"\n              >\n              </ui-button>\n              <ui-menu #menu>\n                <button uiMenuItem (click)=\"onEdit(element)\">\n                  <ui-icon icon=\"edit\" variant=\"grey\"></ui-icon>\n                  {{ 'common.edit' | translate }}\n                </button>\n                <ui-divider class=\"py-1\"></ui-divider>\n                <button uiMenuItem (click)=\"onDelete(element)\">\n                  <ui-icon icon=\"delete\" variant=\"danger\"></ui-icon>\n                  {{ 'common.delete' | translate }}\n                </button>\n              </ui-menu>\n            </td>\n          </ng-container>\n          <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n          <tr *cdkRowDef=\"let row; columns: displayedColumns\" cdk-row></tr>\n        </table>\n      </div>\n    </div>\n  </ng-container>\n  <ng-template #emptyTmpl>\n    <!-- Empty indicator -->\n    <shared-empty\n      [title]=\"'common.subscription.none' | translate\"\n      [footerTemplate]=\"newSubscription\"\n    ></shared-empty>\n  </ng-template>\n</ng-container>\n<ng-template #loadingTmpl>\n  <!-- Loading indicator -->\n  <shared-skeleton-table [columns]=\"displayedColumns\" [actions]=\"true\">\n  </shared-skeleton-table>\n</ng-template>\n"
        },
        {
            "name": "UpdateRecordComponent",
            "id": "component-UpdateRecordComponent-defc3800cc70970cf1020ecf736aae85e93db9164d0baec108a15a70f7ba4908bb0a8aec7c123373ffd3682f6634637bad6a5dd3540b2f058c4072657c6bdfbe",
            "file": "apps/back-office/src/app/dashboard/pages/update-record/update-record.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-update-record",
            "styleUrls": [
                "./update-record.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./update-record.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Form",
                    "optional": true,
                    "description": "<p>Current form</p>\n",
                    "line": 29,
                    "rawdescription": "\nCurrent form",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Current record id</p>\n",
                    "line": 25,
                    "rawdescription": "\nCurrent record id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading indicator</p>\n",
                    "line": 23,
                    "rawdescription": "\nLoading indicator",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "record",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record",
                    "optional": true,
                    "description": "<p>Current record</p>\n",
                    "line": 27,
                    "rawdescription": "\nCurrent record",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Update record view.</p>\n",
            "rawdescription": "\n\nUpdate record view.\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport {\n  Record,\n  Form,\n  BreadcrumbService,\n  FormQueryResponse,\n  RecordQueryResponse,\n} from '@oort-front/shared';\nimport { ActivatedRoute } from '@angular/router';\nimport { GET_FORM_STRUCTURE, GET_RECORD_BY_ID } from './graphql/queries';\n\n/**\n * Update record view.\n */\n@Component({\n  selector: 'app-update-record',\n  templateUrl: './update-record.component.html',\n  styleUrls: ['./update-record.component.scss'],\n})\nexport class UpdateRecordComponent implements OnInit {\n  /** Loading indicator */\n  public loading = true;\n  /** Current record id */\n  public id = '';\n  /** Current record */\n  public record?: Record;\n  /** Current form */\n  public form?: Form;\n\n  /**\n   * Update record view.\n   *\n   * @param apollo Used to get the form and the record data\n   * @param route Used to get url params.\n   * @param breadcrumbService Shared breadcrumb service\n   */\n  constructor(\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private breadcrumbService: BreadcrumbService\n  ) {}\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id') || '';\n    const template = history.state?.template;\n    if (template) {\n      this.apollo\n        .watchQuery<FormQueryResponse>({\n          query: GET_FORM_STRUCTURE,\n          variables: {\n            id: template,\n          },\n        })\n        .valueChanges.subscribe(({ data, loading }) => {\n          this.form = data.form;\n          this.breadcrumbService.setBreadcrumb(\n            '@resource',\n            this.form.name as string\n          );\n          this.loading = loading;\n        });\n    }\n    if (this.id !== null) {\n      this.apollo\n        .watchQuery<RecordQueryResponse>({\n          query: GET_RECORD_BY_ID,\n          variables: {\n            id: this.id,\n          },\n        })\n        .valueChanges.subscribe(({ data, loading }) => {\n          this.record = data.record;\n          this.breadcrumbService.setBreadcrumb(\n            '@record',\n            this.record.incrementalId as string\n          );\n          this.breadcrumbService.setBreadcrumb(\n            '@form',\n            this.record.form?.name as string\n          );\n          this.breadcrumbService.setBreadcrumb(\n            '@resource',\n            this.record.form?.name as string\n          );\n          if (!template) {\n            this.form = this.record.form || {};\n            this.loading = loading;\n          }\n        });\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./update-record.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Update record view.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breadcrumbService",
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "rawdescription": "\n\nUpdate record view.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 811,
                            "end": 817,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 805,
                            "end": 810,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Used to get the form and the record data</p>\n"
                    },
                    {
                        "name": {
                            "pos": 871,
                            "end": 876,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 865,
                            "end": 870,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Used to get url params.</p>\n"
                    },
                    {
                        "name": {
                            "pos": 913,
                            "end": 930,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "breadcrumbService"
                        },
                        "type": "BreadcrumbService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 907,
                            "end": 912,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared breadcrumb service</p>\n"
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex justify-start items-center mb-5\">\n  <h1 class=\"overflow-hidden whitespace-nowrap text-ellipsis mb-0\">\n    {{\n      'common.updateObject'\n        | translate : { name: 'common.record.one' | translate }\n    }}\n  </h1>\n</div>\n<ng-container *ngIf=\"!loading && form\">\n  <shared-form [form]=\"form\" [record]=\"record\"></shared-form>\n</ng-container>\n"
        },
        {
            "name": "UploadMenuComponent",
            "id": "component-UploadMenuComponent-69ba8673b6cc7092f212ecfe75a02a137c52b82611f125bfdf052739419e314c119f07a22582b7e1647d8b88ba6d0d2818cd4179e33bc73579facd197bf134e6",
            "file": "apps/back-office/src/app/components/upload-menu/upload-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-upload-menu",
            "styleUrls": [
                "./upload-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./upload-menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nClose event emitter",
                    "description": "<p>Close event emitter</p>\n",
                    "line": 26,
                    "type": "EventEmitter<>"
                },
                {
                    "name": "download",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nDownload event emitter, for template",
                    "description": "<p>Download event emitter, for template</p>\n",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "upload",
                    "defaultValue": "new EventEmitter<File>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nUpload event emitter",
                    "description": "<p>Upload event emitter</p>\n",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "maxFileSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>File size limit, in MB</p>\n",
                    "line": 28,
                    "rawdescription": "\nFile size limit, in MB",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "show",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Show upload menu</p>\n",
                    "line": 30,
                    "rawdescription": "\nShow upload menu",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clickInside",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nListen to click event on the document",
                    "description": "<p>Listen to click event on the document</p>\n",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "clickout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nListen to document click event and close the component if outside of it",
                    "description": "<p>Listen to document click event and close the component if outside of it</p>\n",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "onDownloadTemplate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles download template event.\nEvent is transmitted by the component to other components.\n",
                    "description": "<p>Handles download template event.\nEvent is transmitted by the component to other components.</p>\n"
                },
                {
                    "name": "onUpload",
                    "args": [
                        {
                            "name": "e",
                            "type": "UploadEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandles upload event.\nEvent is transmitted by the component to other components.\n\n",
                    "description": "<p>Handles upload event.\nEvent is transmitted by the component to other components.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1584,
                                "end": 1585,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "e"
                            },
                            "type": "UploadEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1578,
                                "end": 1583,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>kendo upload event</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nListen to click event on the document",
                    "description": "<p>Listen to click event on the document</p>\n",
                    "line": 34
                },
                {
                    "name": "document:click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nListen to document click event and close the component if outside of it",
                    "description": "<p>Listen to document click event and close the component if outside of it</p>\n",
                    "line": 40
                }
            ],
            "standalone": false,
            "imports": [],
            "description": "<p>Upload Menu to be displayed in overlay container.\nContains file upload and template download.</p>\n",
            "rawdescription": "\n\nUpload Menu to be displayed in overlay container.\nContains file upload and template download.\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Output,\n} from '@angular/core';\nimport { UploadEvent } from '@progress/kendo-angular-upload';\n\n/**\n * Upload Menu to be displayed in overlay container.\n * Contains file upload and template download.\n */\n@Component({\n  selector: 'app-upload-menu',\n  templateUrl: './upload-menu.component.html',\n  styleUrls: ['./upload-menu.component.scss'],\n})\nexport class UploadMenuComponent {\n  /** Upload event emitter */\n  @Output() upload = new EventEmitter<File>();\n  /** Download event emitter, for template */\n  @Output() download = new EventEmitter();\n  /** Close event emitter */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() close: EventEmitter<null> = new EventEmitter();\n  /** File size limit, in MB */\n  public maxFileSize: number;\n  /** Show upload menu */\n  private show = true;\n\n  /** Listen to click event on the document */\n  @HostListener('click')\n  clickInside() {\n    this.show = true;\n  }\n\n  /** Listen to document click event and close the component if outside of it */\n  @HostListener('document:click')\n  clickout() {\n    if (!this.show) {\n      this.close.emit();\n    }\n    this.show = false;\n  }\n\n  /**\n   * Upload Menu to be displayed in overlay container.\n   * Contains file upload and template download.\n   *\n   * @param environment environment\n   */\n  constructor(@Inject('environment') environment: any) {\n    this.maxFileSize = environment.maxFileSize;\n  }\n\n  /**\n   * Handles upload event.\n   * Event is transmitted by the component to other components.\n   *\n   * @param e kendo upload event\n   */\n  onUpload(e: UploadEvent): void {\n    e.preventDefault();\n    const file = e.files[0].rawFile;\n    this.upload.emit(file);\n  }\n\n  /**\n   * Handles download template event.\n   * Event is transmitted by the component to other components.\n   */\n  onDownloadTemplate(): void {\n    this.download.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./upload-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Upload Menu to be displayed in overlay container.\nContains file upload and template download.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "environment",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "rawdescription": "\n\nUpload Menu to be displayed in overlay container.\nContains file upload and template download.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1330,
                            "end": 1341,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "environment"
                        },
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1324,
                            "end": 1329,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>environment</p>\n"
                    }
                ]
            },
            "templateData": "<div\n  class=\"flex flex-col items-center shadow-lg bg-white rounded p-2 ring-1 ring-gray-900/5 mb-2\"\n>\n  <div class=\"flex justify-between gap-2 flex-wrap items-center mb-2\">\n    <kendo-upload\n      class=\"flex-1\"\n      #fileReader\n      name=\"Upload XLSX\"\n      [restrictions]=\"{ maxFileSize: maxFileSize * 1024 * 1024 }\"\n      (upload)=\"onUpload($event)\"\n      accept=\".xlsx\"\n      [multiple]=\"false\"\n    >\n    </kendo-upload>\n    <ui-button\n      variant=\"primary\"\n      category=\"tertiary\"\n      (click)=\"onDownloadTemplate()\"\n    >\n      {{ 'common.downloadTemplate' | translate }}\n    </ui-button>\n  </div>\n  <span class=\"text-gray-700 text-xs\">\n    {{\n      'common.notifications.file.upload.maxFileSize'\n        | translate : { size: maxFileSize }\n    }}\n  </span>\n</div>\n"
        },
        {
            "name": "UsersComponent",
            "id": "component-UsersComponent-e1e829192ff8836ac40929bf5b96c6ecca2459c31f54adc72511c5a60bc179cd0834786ff168b013f57acb058571228bbd4453bc954b167e484b243f45e7023e",
            "file": "apps/back-office/src/app/dashboard/pages/users/users.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-users",
            "styleUrls": [
                "./users.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./users.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayedColumns",
                    "defaultValue": "['name', 'username', 'oid', 'roles', 'actions']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns to display</p>\n",
                    "line": 38,
                    "rawdescription": "\n\nColumns to display\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 26,
                    "rawdescription": "\n\nLoading state\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "roles",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Role[]",
                    "optional": false,
                    "description": "<p>Roles list</p>\n",
                    "line": 34,
                    "rawdescription": "\n\nRoles list\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "users",
                    "defaultValue": "new Array<User>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Users list</p>\n",
                    "line": 30,
                    "rawdescription": "\n\nUsers list\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLoad the users",
                    "description": "<p>Load the users</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Component which will show all the user in the app.\nAccessible with &#39;/settings/users&#39; route.\nManagement of users.</p>\n",
            "rawdescription": "\n\nComponent which will show all the user in the app.\nAccessible with '/settings/users' route.\nManagement of users.\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport { GET_USERS, GET_ROLES } from './graphql/queries';\nimport {\n  Role,\n  RolesQueryResponse,\n  User,\n  UsersQueryResponse,\n} from '@oort-front/shared';\n\n/**\n * Component which will show all the user in the app.\n * Accessible with '/settings/users' route.\n * Management of users.\n */\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n})\nexport class UsersComponent implements OnInit {\n  // === DATA ===\n  /**\n   * Loading state\n   */\n  public loading = true;\n  /**\n   * Users list\n   */\n  public users = new Array<User>();\n  /**\n   * Roles list\n   */\n  public roles: Role[] = [];\n  /**\n   * Columns to display\n   */\n  public displayedColumns = ['name', 'username', 'oid', 'roles', 'actions'];\n\n  /**\n   * UsersComponent constructor.\n   *\n   * @param apollo Used to load the users.\n   */\n  constructor(private apollo: Apollo) {}\n\n  /** Load the users */\n  ngOnInit(): void {\n    this.apollo\n      .watchQuery<UsersQueryResponse>({\n        query: GET_USERS,\n      })\n      .valueChanges.subscribe((resUsers) => {\n        this.loading = true;\n        this.users = resUsers.data.users;\n        this.apollo\n          .watchQuery<RolesQueryResponse>({\n            query: GET_ROLES,\n          })\n          .valueChanges.subscribe(({ data, loading }) => {\n            this.roles = data.roles;\n            this.loading = loading;\n          });\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./users.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>UsersComponent constructor.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "rawdescription": "\n\nUsersComponent constructor.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 915,
                            "end": 921,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 909,
                            "end": 914,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Used to load the users.</p>\n"
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<shared-users\n  [loading]=\"loading\"\n  [users]=\"users\"\n  [roles]=\"roles\"\n></shared-users>\n"
        },
        {
            "name": "UserSummaryComponent",
            "id": "component-UserSummaryComponent-2140e94ad84f63ca7f07a400a6c450de6ea3e3fa9e366a5f76907722c362e20f4edf4c052c036daf8b87c6ea0b746ab00dfea3d3b305de79154861c25ffa25e1",
            "file": "apps/back-office/src/app/shared/pages/user-summary/user-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-summary",
            "styleUrls": [
                "./user-summary.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-summary.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "application",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Application",
                    "optional": false,
                    "description": "<p>Application</p>\n",
                    "line": 29,
                    "rawdescription": "\n\nApplication\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "applicationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationService",
                    "optional": false,
                    "description": "Shared application service",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>User id</p>\n",
                    "line": 25,
                    "rawdescription": "\n\nUser id\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>User Summary page component.</p>\n",
            "rawdescription": "\n\nUser Summary page component.\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  Application,\n  ApplicationService,\n  UnsubscribeComponent,\n} from '@oort-front/shared';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * User Summary page component.\n */\n@Component({\n  selector: 'app-user-summary',\n  templateUrl: './user-summary.component.html',\n  styleUrls: ['./user-summary.component.scss'],\n})\nexport class UserSummaryComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  /**\n   * User id\n   */\n  public id = '';\n  /**\n   * Application\n   */\n  public application!: Application;\n\n  /**\n   * User summary page component.\n   *\n   * @param route Angular active route\n   * @param applicationService Shared application service\n   */\n  constructor(\n    private route: ActivatedRoute,\n    public applicationService: ApplicationService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    const routeSubscription = this.route.params.subscribe((val: any) => {\n      this.id = val.id;\n    });\n    routeSubscription.unsubscribe();\n    this.applicationService.application$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((application: Application | null) => {\n        if (application) {\n          this.application = application;\n        }\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./user-summary.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>User summary page component.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "rawdescription": "\n\nUser summary page component.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 682,
                            "end": 687,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 676,
                            "end": 681,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular active route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 721,
                            "end": 739,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 715,
                            "end": 720,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<shared-user-summary\n  [id]=\"id\"\n  [application]=\"application\"\n></shared-user-summary>\n"
        },
        {
            "name": "ViewIconSelectorComponent",
            "id": "component-ViewIconSelectorComponent-27e8616298a7ad79fdbb861ab039646be4cd6f9a8a5cedd03ff66e88b90b6647d3a205712de64fca459bf029bf8aebe262dd4b0182ad8b6bda08c5acc5df2985",
            "file": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-view-icon-selector",
            "styleUrls": [
                "./view-icon-selector.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view-icon-selector.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "iconControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIcon name form control",
                    "description": "<p>Icon name form control</p>\n",
                    "line": 27,
                    "type": "FormControl",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "IconPickerModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormWrapperModule",
                    "type": "module"
                }
            ],
            "description": "<p>Icon chooser of pages / steps.\nUse shared icon picker.</p>\n",
            "rawdescription": "\n\nIcon chooser of pages / steps.\nUse shared icon picker.\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormWrapperModule } from '@oort-front/ui';\nimport { IconPickerModule } from '@oort-front/shared';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\n\n/**\n * Icon chooser of pages / steps.\n * Use shared icon picker.\n */\n@Component({\n  selector: 'app-view-icon-selector',\n  standalone: true,\n  imports: [\n    CommonModule,\n    IconPickerModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    FormWrapperModule,\n  ],\n  templateUrl: './view-icon-selector.component.html',\n  styleUrls: ['./view-icon-selector.component.scss'],\n})\nexport class ViewIconSelectorComponent {\n  /** Icon name form control */\n  @Input() iconControl!: FormControl;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./view-icon-selector.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div uiFormFieldDirective>\n  <label>\n    {{ 'components.application.pages.settings.selectIcon' | translate }}\n  </label>\n  <shared-icon-picker\n    [formControl]=\"iconControl\"\n    [placeholder]=\"\n      'components.widget.settings.iconPicker.placeholder' | translate\n    \"\n  ></shared-icon-picker>\n</div>\n"
        },
        {
            "name": "ViewSettingsModalComponent",
            "id": "component-ViewSettingsModalComponent-fcfeba3684417bcc05401a75c510fc6f8b0d36463b6082ad63c461951c836d2300f2c6bba4ce8b2ea49b0ba6bb1d6d6c639f18b9d54fa7fecc746a9b1c1b97cb",
            "file": "apps/back-office/src/app/components/view-settings-modal/view-settings-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-view-settings",
            "styleUrls": [
                "./view-settings-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view-settings-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "applications",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Application[]",
                    "optional": false,
                    "description": "<p>List of available applications</p>\n",
                    "line": 94,
                    "rawdescription": "\nList of available applications",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dashboard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dashboard",
                    "optional": true,
                    "description": "<p>Dashboard object</p>\n",
                    "line": 96,
                    "rawdescription": "\nDashboard object",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "Data that will be passed to the dialog",
                    "line": 123,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "defaultGridOptions",
                    "defaultValue": "{\n    minCols: 8,\n    fixedRowHeight: 200,\n    margin: 10,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>Default grid options</p>\n",
                    "line": 98,
                    "rawdescription": "\nDefault grid options",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogRef<ViewSettingsModalComponent>",
                    "optional": false,
                    "description": "Dialog ref",
                    "line": 122,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onUpdate",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Event to parent subscribe and update its own object after changes</p>\n",
                    "line": 90,
                    "rawdescription": "\nEvent to parent subscribe and update its own object after changes",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Page",
                    "optional": true,
                    "description": "<p>Page object</p>\n",
                    "line": 106,
                    "rawdescription": "\nPage object",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "settingsForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "<p>Reactive Form</p>\n",
                    "line": 88,
                    "rawdescription": "\nReactive Form",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showDuplicateMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Show duplicate menu</p>\n",
                    "line": 92,
                    "rawdescription": "\nShow duplicate menu",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Show dashboard filter</p>\n",
                    "line": 108,
                    "rawdescription": "\nShow dashboard filter",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "step",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Step",
                    "optional": true,
                    "description": "<p>Step object</p>\n",
                    "line": 104,
                    "rawdescription": "\nStep object",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createSettingsForm",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreate the settings form\n\n",
                    "description": "<p>Create the settings form</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 6812,
                                "end": 6819,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Form group</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAppSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 238,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggle visibility of application menu.\nGet applications to use duplicate setting.\n",
                    "description": "<p>Toggle visibility of application menu.\nGet applications to use duplicate setting.</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onDuplicate",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDuplicate page, in a new (or same) application\n\n",
                    "description": "<p>Duplicate page, in a new (or same) application</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6043,
                                "end": 6048,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6037,
                                "end": 6042,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>duplication event</p>\n"
                        }
                    ]
                },
                {
                    "name": "onUpdateAccess",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSave changes when access is updated.\n\n",
                    "description": "<p>Save changes when access is updated.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5024,
                                "end": 5029,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5018,
                                "end": 5023,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>new permissions object</p>\n"
                        }
                    ]
                },
                {
                    "name": "onUpdateGridOptions",
                    "args": [
                        {
                            "name": "gridOptions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 356,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSave grid settings on change.\n\n",
                    "description": "<p>Save grid settings on change.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9321,
                                "end": 9332,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "gridOptions"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9315,
                                "end": 9320,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>grid options</p>\n"
                        }
                    ]
                },
                {
                    "name": "onUpdateIcon",
                    "args": [
                        {
                            "name": "icon",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 296,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSave changes when icon is updated.\n\n",
                    "description": "<p>Save changes when icon is updated.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7976,
                                "end": 7980,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "icon"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7970,
                                "end": 7975,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>new icon name</p>\n"
                        }
                    ]
                },
                {
                    "name": "onUpdateVisibility",
                    "args": [
                        {
                            "name": "visible",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 332,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSave page visibility on change.\n\n",
                    "description": "<p>Save page visibility on change.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8840,
                                "end": 8847,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "visible"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8834,
                                "end": 8839,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>boolean</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "TabsModule",
                    "type": "module"
                },
                {
                    "name": "DialogModule",
                    "type": "module"
                },
                {
                    "name": "IconModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "TooltipModule",
                    "type": "module"
                },
                {
                    "name": "SelectMenuModule",
                    "type": "module"
                },
                {
                    "name": "FormWrapperModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "ViewIconSelectorComponent",
                    "type": "component"
                },
                {
                    "name": "AccessModule",
                    "type": "module"
                },
                {
                    "name": "ToggleModule",
                    "type": "module"
                },
                {
                    "name": "OverlayModule",
                    "type": "module"
                },
                {
                    "name": "SearchMenuModule",
                    "type": "module"
                },
                {
                    "name": "AlertModule",
                    "type": "module"
                },
                {
                    "name": "AbilityModule",
                    "type": "module"
                },
                {
                    "name": "DashboardFilterSettingsComponent",
                    "type": "component"
                }
            ],
            "description": "<p>Application page and step settings component.\nAvailable settings: icon, access, visibility and duplicate page.</p>\n",
            "rawdescription": "\n\nApplication page and step settings component.\nAvailable settings: icon, access, visibility and duplicate page.\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  TabsModule,\n  DialogModule,\n  ButtonModule,\n  TooltipModule,\n  SelectMenuModule,\n  FormWrapperModule,\n  IconModule,\n  ToggleModule,\n  AlertModule,\n} from '@oort-front/ui';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ViewIconSelectorComponent } from '../view-icon-selector/view-icon-selector.component';\nimport {\n  AccessModule,\n  ApplicationService,\n  Page,\n  Dashboard,\n  Step,\n  UnsubscribeComponent,\n  WorkflowService,\n  AccessData,\n  SearchMenuModule,\n  AuthService,\n  Application,\n  DashboardService,\n} from '@oort-front/shared';\nimport { debounceTime, takeUntil } from 'rxjs';\nimport { get, isNil } from 'lodash';\nimport { AbilityModule } from '@casl/angular';\nimport { DashboardFilterSettingsComponent } from '../dashboard-filter-settings/dashboard-filter-settings.component';\n\n/** Settings Dialog Data */\ninterface DialogData {\n  type: 'page' | 'step';\n  applicationId: string;\n  page?: Page;\n  step?: Step;\n  icon?: string;\n  visible?: boolean;\n  accessData: AccessData;\n  canUpdate: boolean;\n  dashboard?: Dashboard;\n}\n\n/**\n * Application page and step settings component.\n * Available settings: icon, access, visibility and duplicate page.\n */\n@Component({\n  selector: 'app-view-settings',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TabsModule,\n    DialogModule,\n    IconModule,\n    ButtonModule,\n    TooltipModule,\n    SelectMenuModule,\n    FormWrapperModule,\n    TranslateModule,\n    ViewIconSelectorComponent,\n    AccessModule,\n    ToggleModule,\n    OverlayModule,\n    SearchMenuModule,\n    AlertModule,\n    AbilityModule,\n    DashboardFilterSettingsComponent,\n  ],\n  templateUrl: './view-settings-modal.component.html',\n  styleUrls: ['./view-settings-modal.component.scss'],\n})\nexport class ViewSettingsModalComponent\n  extends UnsubscribeComponent\n  implements OnInit\n{\n  /** Reactive Form */\n  public settingsForm!: ReturnType<typeof this.createSettingsForm>;\n  /** Event to parent subscribe and update its own object after changes */\n  public onUpdate = new EventEmitter();\n  /** Show duplicate menu */\n  public showDuplicateMenu = false;\n  /** List of available applications */\n  public applications: Application[] = [];\n  /** Dashboard object */\n  public dashboard?: Dashboard;\n  /** Default grid options */\n  public defaultGridOptions = {\n    minCols: 8,\n    fixedRowHeight: 200,\n    margin: 10,\n  };\n  /** Step object */\n  private step?: Step;\n  /** Page object */\n  private page?: Page;\n  /** Show dashboard filter */\n  public showFilter!: boolean;\n\n  /**\n   * Common settings of pages / steps.\n   *\n   * @param dialogRef Dialog ref\n   * @param data Data that will be passed to the dialog\n   * @param fb Angular form builder\n   * @param workflowService Shared workflow service\n   * @param applicationService Shared application service\n   * @param authService Shared authentication service\n   * @param dashboardService Shared dashboard service\n   */\n  constructor(\n    public dialogRef: DialogRef<ViewSettingsModalComponent>,\n    @Inject(DIALOG_DATA) public data: DialogData,\n    private fb: FormBuilder,\n    private workflowService: WorkflowService,\n    private applicationService: ApplicationService,\n    private authService: AuthService,\n    private dashboardService: DashboardService\n  ) {\n    super();\n    if (this.data) {\n      this.page = this.data.page;\n      this.step = this.data.step;\n      this.dashboard = this.data.dashboard;\n    }\n  }\n\n  ngOnInit(): void {\n    this.settingsForm = this.createSettingsForm();\n    if (!this.data.canUpdate) {\n      this.settingsForm.disable();\n    }\n\n    // Listen to icon updates\n    this.settingsForm?.controls.icon.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value: string | null) => {\n        if (value) {\n          this.onUpdateIcon(value);\n        }\n      });\n\n    // Listen to visibility updates (only for pages)\n    if (this.data.type === 'page') {\n      this.settingsForm?.controls.visible.valueChanges\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((value: boolean | null) => {\n          if (!isNil(value)) {\n            this.onUpdateVisibility(value);\n          }\n        });\n    }\n\n    if (this.dashboard) {\n      // Listen to grid settings updates\n      this.settingsForm?.controls.gridOptions?.valueChanges\n        .pipe(debounceTime(500), takeUntil(this.destroy$))\n        .subscribe((value: any) => {\n          // update only if the form is valid\n          if (this.settingsForm?.controls.gridOptions?.valid) {\n            this.onUpdateGridOptions(value);\n          }\n        });\n    }\n  }\n\n  /**\n   * Save changes when access is updated.\n   *\n   * @param event new permissions object\n   */\n  public onUpdateAccess(event: any): void {\n    if (this.data.type === 'step' && this.step) {\n      const callback = (permissions: any) => {\n        // Updates parent component\n        const updates = { permissions };\n        this.onUpdate.emit(updates);\n      };\n      this.workflowService.updateStepPermissions(\n        this.step as Step,\n        event,\n        callback\n      );\n    } else {\n      const callback = (permissions: any) => {\n        this.page = {\n          ...this.page,\n          canDelete: permissions.canDelete,\n          canUpdate: permissions.canUpdate,\n          canSee: permissions.canSee,\n        };\n        // Updates parent component\n        const updates = { permissions };\n        this.onUpdate.emit(updates);\n      };\n      this.page &&\n        this.applicationService.updatePagePermissions(\n          this.page as Page,\n          event,\n          callback\n        );\n    }\n  }\n\n  /**\n   * Duplicate page, in a new (or same) application\n   *\n   * @param event duplication event\n   */\n  public onDuplicate(event: any): void {\n    const callback = () => {\n      this.dialogRef.close();\n    };\n    this.applicationService.duplicatePage(\n      event.id,\n      {\n        pageId: this.page?.id,\n        stepId: this.step?.id,\n      },\n      callback\n    );\n  }\n\n  /**\n   * Toggle visibility of application menu.\n   * Get applications to use duplicate setting.\n   */\n  public onAppSelection(): void {\n    this.showDuplicateMenu = !this.showDuplicateMenu;\n    const authSubscription = this.authService.user$.subscribe(\n      (user: any | null) => {\n        if (user) {\n          this.applications = user.applications;\n        }\n      }\n    );\n    authSubscription.unsubscribe();\n  }\n\n  /**\n   * Create the settings form\n   *\n   * @returns Form group\n   */\n  private createSettingsForm() {\n    return this.fb.group({\n      // initializes icon field with data info\n      icon: this.fb.control(this.data.icon ?? ''),\n      visible: this.fb.control(this.data.visible ?? true),\n      ...(this.dashboard && {\n        gridOptions: this.fb.group({\n          minCols: this.fb.control(\n            get<number>(\n              this.dashboard.gridOptions,\n              'minCols',\n              this.defaultGridOptions.minCols\n            ),\n            Validators.compose([Validators.min(4), Validators.max(24)])\n          ),\n          fixedRowHeight: this.fb.control(\n            get<number>(\n              this.dashboard.gridOptions,\n              'fixedRowHeight',\n              this.defaultGridOptions.fixedRowHeight\n            ),\n            Validators.min(50)\n          ),\n          margin: this.fb.control(\n            get<number>(\n              this.dashboard.gridOptions,\n              'margin',\n              this.defaultGridOptions.margin\n            ),\n            Validators.min(0)\n          ),\n        }),\n      }),\n    });\n  }\n\n  /**\n   * Save changes when icon is updated.\n   *\n   * @param icon new icon name\n   */\n  private onUpdateIcon(icon: string): void {\n    if (this.data.type === 'step' && this.step) {\n      const callback = () => {\n        this.step = {\n          ...this.step,\n          icon,\n        };\n        // Updates parent component\n        const updates = { icon };\n        this.onUpdate.emit(updates);\n      };\n      this.workflowService.updateStepIcon(this.step as Step, icon, callback);\n    } else {\n      const callback = () => {\n        this.page = {\n          ...this.page,\n          icon,\n        };\n        // Updates parent component\n        const updates = { icon };\n        this.onUpdate.emit(updates);\n      };\n      this.page &&\n        this.applicationService.changePageIcon(\n          this.page as Page,\n          icon,\n          callback\n        );\n    }\n  }\n\n  /**\n   * Save page visibility on change.\n   *\n   * @param visible boolean\n   */\n  private onUpdateVisibility(visible: boolean): void {\n    const callback = () => {\n      this.page = {\n        ...this.page,\n        visible,\n      };\n      // Updates parent component\n      const updates = { visible };\n      this.onUpdate.emit(updates);\n    };\n    this.applicationService.togglePageVisibility(\n      {\n        id: this.page?.id,\n        visible,\n      },\n      callback\n    );\n  }\n\n  /**\n   * Save grid settings on change.\n   *\n   * @param gridOptions grid options\n   */\n  public onUpdateGridOptions(gridOptions: any): void {\n    gridOptions = {\n      ...gridOptions,\n      // block adding more columns by dragging or resizing\n      maxCols: gridOptions.minCols,\n    };\n\n    const callback = () => {\n      this.dashboard = {\n        ...this.dashboard,\n        gridOptions,\n      };\n      // Updates parent component\n      const updates = { gridOptions };\n      this.onUpdate.emit(updates);\n    };\n    this.dashboardService.editGridOptions(gridOptions, callback);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./view-settings-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Common settings of pages / steps.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "DialogRef<ViewSettingsModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "workflowService",
                        "type": "WorkflowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dashboardService",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 108,
                "rawdescription": "\n\nCommon settings of pages / steps.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2982,
                            "end": 2991,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialogRef"
                        },
                        "type": "DialogRef<ViewSettingsModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2976,
                            "end": 2981,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog ref</p>\n"
                    },
                    {
                        "name": {
                            "pos": 3015,
                            "end": 3019,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "data"
                        },
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3009,
                            "end": 3014,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Data that will be passed to the dialog</p>\n"
                    },
                    {
                        "name": {
                            "pos": 3071,
                            "end": 3073,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "fb"
                        },
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3065,
                            "end": 3070,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular form builder</p>\n"
                    },
                    {
                        "name": {
                            "pos": 3107,
                            "end": 3122,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "workflowService"
                        },
                        "type": "WorkflowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3101,
                            "end": 3106,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared workflow service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 3159,
                            "end": 3177,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3153,
                            "end": 3158,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 3217,
                            "end": 3228,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "authService"
                        },
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3211,
                            "end": 3216,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared authentication service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 3271,
                            "end": 3287,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dashboardService"
                        },
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 3265,
                            "end": 3270,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared dashboard service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ui-dialog [closable]=\"true\" [size]=\"'medium'\">\n  <ng-container ngProjectAs=\"header\">\n    <div class=\"flex flex-row gap-2\">\n      <h3>{{ 'common.settings' | translate }}</h3>\n      <ui-icon\n        class=\"cursor-help\"\n        icon=\"info_outline\"\n        [size]=\"18\"\n        variant=\"grey\"\n        [uiTooltip]=\"\n          'components.application.pages.settings.tooltip.autoSave' | translate\n        \"\n      ></ui-icon>\n    </div>\n  </ng-container>\n  <ng-container ngProjectAs=\"content\">\n    <form [formGroup]=\"settingsForm\">\n      <ui-tabs [vertical]=\"true\">\n        <!-- General settings -->\n        <ui-tab>\n          <ng-container ngProjectAs=\"label\">\n            <ui-icon\n              icon=\"settings\"\n              [size]=\"18\"\n              uiTooltip=\"{{ 'common.general' | translate }}\"\n            ></ui-icon>\n            <span>{{ 'common.general' | translate }}</span>\n          </ng-container>\n          <!-- Tab content -->\n          <div class=\"flex gap-4 flex-col\" *ngIf=\"settingsForm\">\n            <!-- Page / step icon -->\n            <app-view-icon-selector\n              [iconControl]=\"this.settingsForm.controls.icon\"\n              [ngClass]=\"{\n                '-mb-4': data.type === 'page'\n              }\"\n            ></app-view-icon-selector>\n            <!-- Features available only for pages -->\n            <ng-container *ngIf=\"data.type === 'page'\">\n              <!-- Visibility -->\n              <ui-toggle formControlName=\"visible\" class=\"mb-2\">\n                <ng-container ngProjectAs=\"label\">\n                  {{ 'components.application.pages.show' | translate }}\n                </ng-container>\n              </ui-toggle>\n              <div>\n                <h4>\n                  {{\n                    'components.application.pages.settings.actions' | translate\n                  }}\n                </h4>\n                <!-- Duplicate page  -->\n                <ng-container *ngIf=\"'create' | able : 'Application'\">\n                  <ui-button\n                    variant=\"primary\"\n                    category=\"tertiary\"\n                    icon=\"file_copy\"\n                    (click)=\"onAppSelection()\"\n                    cdkOverlayOrigin\n                    #appMenuTrigger=\"cdkOverlayOrigin\"\n                  >\n                    {{ 'common.duplicate' | translate }}\n                  </ui-button>\n                  <ng-template #searchMenuHeaderTemplate>\n                    <ui-alert [closable]=\"true\">\n                      {{ 'models.page.tooltip.duplicate' | translate }}\n                    </ui-alert>\n                  </ng-template>\n                  <ng-template\n                    cdkConnectedOverlay\n                    [cdkConnectedOverlayOrigin]=\"appMenuTrigger\"\n                    [cdkConnectedOverlayOpen]=\"showDuplicateMenu\"\n                  >\n                    <shared-search-menu\n                      [headerTemplate]=\"searchMenuHeaderTemplate\"\n                      [currentApplicationId]=\"data.applicationId\"\n                      [applications]=\"applications\"\n                      (close)=\"showDuplicateMenu = false\"\n                      (open)=\"onDuplicate($event)\"\n                    ></shared-search-menu>\n                  </ng-template>\n                </ng-container>\n              </div>\n            </ng-container>\n          </div>\n        </ui-tab>\n        <!-- Access (visibility) settings -->\n        <ui-tab *ngIf=\"data.canUpdate\">\n          <ng-container ngProjectAs=\"label\">\n            <ui-icon\n              icon=\"visibility\"\n              [size]=\"18\"\n              uiTooltip=\"{{ 'common.access' | translate }}\"\n            ></ui-icon>\n            <span>{{ 'common.access' | translate }}</span>\n          </ng-container>\n          <!-- Tab content -->\n          <div class=\"flex flex-col\">\n            <!-- Edit access -->\n            <shared-edit-access\n              (updateAccess)=\"onUpdateAccess($event)\"\n            ></shared-edit-access>\n          </div>\n        </ui-tab>\n        <!-- Grid layout style settings -->\n        <ui-tab *ngIf=\"dashboard\">\n          <ng-container ngProjectAs=\"label\">\n            <ui-icon\n              icon=\"style\"\n              [size]=\"18\"\n              uiTooltip=\"{{\n                'components.application.dashboard.settings.gridOptions'\n                  | translate\n              }}\"\n            ></ui-icon>\n            <span>{{\n              'components.application.dashboard.settings.gridOptions'\n                | translate\n            }}</span>\n          </ng-container>\n          <!-- Tab content -->\n          <div class=\"flex gap-4 flex-col\" formGroupName=\"gridOptions\">\n            <!-- Number of columns -->\n            <div class=\"flex flex-col\">\n              <div uiFormFieldDirective>\n                <label class=\"flex items-center gap-1\">\n                  {{\n                    'components.application.dashboard.settings.minCols'\n                      | translate\n                  }}\n                  <ui-icon\n                    class=\"cursor-help self-center\"\n                    icon=\"info_outline\"\n                    variant=\"grey\"\n                    [size]=\"18\"\n                    [uiTooltip]=\"\n                      'components.application.dashboard.settings.tooltip.minCols'\n                        | translate\n                    \"\n                  ></ui-icon>\n                </label>\n                <input\n                  type=\"number\"\n                  formControlName=\"minCols\"\n                  min=\"4\"\n                  max=\"24\"\n                />\n                <ui-icon\n                  uiSuffix\n                  class=\"cursor-pointer\"\n                  icon=\"restart_alt\"\n                  variant=\"grey\"\n                  (click)=\"\n                    settingsForm\n                      .get('gridOptions.minCols')\n                      ?.setValue(defaultGridOptions.minCols)\n                  \"\n                  [uiTooltip]=\"\n                    'components.application.dashboard.settings.tooltip.reset'\n                      | translate\n                  \"\n                ></ui-icon>\n              </div>\n              <ui-alert>{{\n                'components.application.dashboard.settings.help.minCols'\n                  | translate\n              }}</ui-alert>\n            </div>\n            <!-- Change default size of rows -->\n            <div uiFormFieldDirective [outline]=\"false\">\n              <label class=\"flex items-center gap-1\">\n                {{\n                  'components.application.dashboard.settings.fixedRowHeight'\n                    | translate\n                }}\n                <!-- Tooltip -->\n                <ui-icon\n                  class=\"cursor-help self-center\"\n                  icon=\"info_outline\"\n                  variant=\"grey\"\n                  [size]=\"18\"\n                  [uiTooltip]=\"\n                    'components.application.dashboard.settings.tooltip.fixedRowHeight'\n                      | translate\n                  \"\n                ></ui-icon>\n              </label>\n              <input type=\"number\" formControlName=\"fixedRowHeight\" min=\"50\" />\n              <ui-icon\n                uiSuffix\n                class=\"cursor-pointer\"\n                icon=\"restart_alt\"\n                variant=\"grey\"\n                (click)=\"\n                  settingsForm\n                    .get('gridOptions.fixedRowHeight')\n                    ?.setValue(defaultGridOptions.fixedRowHeight)\n                \"\n                [uiTooltip]=\"\n                  'components.application.dashboard.settings.tooltip.reset'\n                    | translate\n                \"\n              ></ui-icon>\n            </div>\n            <!-- Specify inner gap -->\n            <div uiFormFieldDirective>\n              <label class=\"flex items-center gap-1\"\n                >{{\n                  'components.application.dashboard.settings.margin'\n                    | translate\n                }}<!-- Tooltip -->\n                <ui-icon\n                  class=\"cursor-help self-center\"\n                  icon=\"info_outline\"\n                  variant=\"grey\"\n                  [size]=\"18\"\n                  [uiTooltip]=\"\n                    'components.application.dashboard.settings.tooltip.margin'\n                      | translate\n                  \"\n                ></ui-icon>\n              </label>\n              <input type=\"number\" formControlName=\"margin\" min=\"0\" />\n              <ui-icon\n                uiSuffix\n                class=\"cursor-pointer\"\n                icon=\"restart_alt\"\n                variant=\"grey\"\n                (click)=\"\n                  settingsForm\n                    .get('gridOptions.margin')\n                    ?.setValue(defaultGridOptions.margin)\n                \"\n                [uiTooltip]=\"\n                  'components.application.dashboard.settings.tooltip.reset'\n                    | translate\n                \"\n              ></ui-icon>\n            </div>\n          </div>\n        </ui-tab>\n        <!-- Dashboard filter -->\n        <ui-tab *ngIf=\"dashboard\">\n          <ng-container ngProjectAs=\"label\">\n            <ui-icon\n              icon=\"filter_list\"\n              [size]=\"18\"\n              uiTooltip=\"{{ 'common.filter.one' | translate }}\"\n            ></ui-icon>\n            <span>{{ 'common.filter.one' | translate }}</span>\n          </ng-container>\n          <!-- Tab content -->\n          <div class=\"flex flex-col\">\n            <app-dashboard-filter-settings\n              [dashboard]=\"dashboard\"\n            ></app-dashboard-filter-settings>\n          </div>\n        </ui-tab>\n      </ui-tabs>\n    </form>\n  </ng-container>\n\n  <!-- Action buttons -->\n  <ng-container ngProjectAs=\"actions\">\n    <ui-button uiDialogClose variant=\"default\">\n      {{ 'common.cancel' | translate }}\n    </ui-button>\n  </ng-container>\n</ui-dialog>\n"
        },
        {
            "name": "WorkflowComponent",
            "id": "component-WorkflowComponent-b0de738e643bee8215a20eb00c9fda1825c6ede875d3796e2a4316ab786f223496ac7e32830c26d0d3bb6f3da5ca902b39d1499ee5cb7db91b4668767641e906",
            "file": "apps/back-office/src/app/app-preview/pages/workflow/workflow.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-workflow",
            "styleUrls": [
                "./workflow.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./workflow.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeStep",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>Current step index</p>\n",
                    "line": 36,
                    "rawdescription": "\nCurrent step index",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "changeStepSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "<p>Subscription to change step events</p>\n",
                    "line": 40,
                    "rawdescription": "\nSubscription to change step events",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Current workflow id</p>\n",
                    "line": 30,
                    "rawdescription": "\nCurrent workflow id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading indicator</p>\n",
                    "line": 28,
                    "rawdescription": "\nLoading indicator",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "role",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Role used for preview</p>\n",
                    "line": 38,
                    "rawdescription": "\nRole used for preview",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "steps",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Step[]",
                    "optional": false,
                    "description": "<p>Workflow steps</p>\n",
                    "line": 34,
                    "rawdescription": "\nWorkflow steps",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "workflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Workflow",
                    "optional": true,
                    "description": "<p>Current workflow</p>\n",
                    "line": 32,
                    "rawdescription": "\nCurrent workflow",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clearSubscriptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClear subscriptions set from the router-outlet\n",
                    "description": "<p>Clear subscriptions set from the router-outlet</p>\n"
                },
                {
                    "name": "goToNextStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNavigates to the next step if possible and change selected step / index consequently\n",
                    "description": "<p>Navigates to the next step if possible and change selected step / index consequently</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "goToPreviousStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNavigates to the previous step if possible and change selected step / index consequently\n",
                    "description": "<p>Navigates to the previous step if possible and change selected step / index consequently</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets the workflow from the route.\n",
                    "description": "<p>Gets the workflow from the route.</p>\n"
                },
                {
                    "name": "onActivate",
                    "args": [
                        {
                            "name": "elementRef",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nActivates the clicked element.\n\n",
                    "description": "<p>Activates the clicked element.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3416,
                                "end": 3426,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "elementRef"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3410,
                                "end": 3415,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Element ref.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onOpenStep",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 192,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNavigates to the new step.\n\n",
                    "description": "<p>Navigates to the new step.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5331,
                                "end": 5336,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "index"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5325,
                                "end": 5330,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Index of the step in the workflow.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Workflow page component for application preview.</p>\n",
            "rawdescription": "\n\nWorkflow page component for application preview.\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  ContentType,\n  Step,\n  Workflow,\n  UnsubscribeComponent,\n  WorkflowQueryResponse,\n} from '@oort-front/shared';\nimport { GET_WORKFLOW_BY_ID } from './graphql/queries';\nimport { TranslateService } from '@ngx-translate/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { SnackbarService } from '@oort-front/ui';\nimport { PreviewService } from '../../../services/preview.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * Workflow page component for application preview.\n */\n@Component({\n  selector: 'app-workflow',\n  templateUrl: './workflow.component.html',\n  styleUrls: ['./workflow.component.scss'],\n})\nexport class WorkflowComponent extends UnsubscribeComponent implements OnInit {\n  /** Loading indicator */\n  public loading = true;\n  /** Current workflow id */\n  public id = '';\n  /** Current workflow */\n  public workflow?: Workflow;\n  /** Workflow steps */\n  public steps: Step[] = [];\n  /** Current step index */\n  public activeStep = 0;\n  /** Role used for preview */\n  public role = '';\n  /** Subscription to change step events */\n  private changeStepSubscription!: Subscription;\n\n  /**\n   * Workflow page component for application preview\n   *\n   * @param apollo Apollo service\n   * @param route Angular activated route\n   * @param snackBar Shared snackbar service\n   * @param router Angular router\n   * @param previewService Shared preview service\n   * @param translate Angular translate service\n   */\n  constructor(\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private snackBar: SnackbarService,\n    private router: Router,\n    private previewService: PreviewService,\n    private translate: TranslateService\n  ) {\n    super();\n  }\n\n  /**\n   * Gets the workflow from the route.\n   */\n  ngOnInit(): void {\n    this.previewService.roleId$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((role) => {\n        this.role = role;\n      });\n    this.route.params.pipe(takeUntil(this.destroy$)).subscribe((params) => {\n      this.loading = true;\n      this.id = params.id;\n      this.apollo\n        .watchQuery<WorkflowQueryResponse>({\n          query: GET_WORKFLOW_BY_ID,\n          variables: {\n            id: this.id,\n            asRole: this.role,\n          },\n        })\n        .valueChanges.pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: ({ data, loading }) => {\n            if (data.workflow) {\n              this.workflow = data.workflow;\n              this.steps = data.workflow.steps || [];\n              this.loading = loading;\n              if (this.steps.length > 0) {\n                this.onOpenStep(0);\n              }\n            } else {\n              this.snackBar.openSnackBar(\n                this.translate.instant(\n                  'common.notifications.accessNotProvided',\n                  {\n                    type: this.translate\n                      .instant('common.workflow.one')\n                      .toLowerCase(),\n                    error: '',\n                  }\n                ),\n                { error: true }\n              );\n            }\n          },\n          error: (err) => {\n            this.snackBar.openSnackBar(err.message, { error: true });\n          },\n        });\n    });\n  }\n\n  /**\n   * Activates the clicked element.\n   *\n   * @param elementRef Element ref.\n   */\n  onActivate(elementRef: any): void {\n    if (elementRef.changeStep) {\n      this.changeStepSubscription = elementRef.changeStep.subscribe(\n        (event: any) => {\n          if (event > 0) {\n            this.goToNextStep();\n          } else {\n            this.goToPreviousStep();\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Clear subscriptions set from the router-outlet\n   */\n  clearSubscriptions() {\n    this.changeStepSubscription?.unsubscribe();\n  }\n\n  /**\n   * Navigates to the next step if possible and change selected step / index consequently\n   */\n  private goToNextStep(): void {\n    if (this.activeStep + 1 < this.steps.length) {\n      this.onOpenStep(this.activeStep + 1);\n    } else if (this.activeStep + 1 === this.steps.length) {\n      this.onOpenStep(0);\n      this.snackBar.openSnackBar(\n        this.translate.instant('models.workflow.notifications.goToStep', {\n          step: this.steps[0].name,\n        })\n      );\n    } else {\n      this.snackBar.openSnackBar(\n        this.translate.instant(\n          'models.workflow.notifications.cannotGoToNextStep'\n        ),\n        { error: true }\n      );\n    }\n  }\n\n  /**\n   * Navigates to the previous step if possible and change selected step / index consequently\n   */\n  private goToPreviousStep(): void {\n    if (this.activeStep > 0) {\n      this.onOpenStep(this.activeStep - 1);\n    } else if (this.activeStep === 0) {\n      this.onOpenStep(this.steps.length - 1);\n      this.snackBar.openSnackBar(\n        this.translate.instant('models.workflow.notifications.goToStep', {\n          step: this.steps[this.steps.length - 1].name,\n        })\n      );\n    } else {\n      this.snackBar.openSnackBar(\n        this.translate.instant(\n          'models.workflow.notifications.cannotGoToPreviousStep'\n        ),\n        { error: true }\n      );\n    }\n  }\n\n  /**\n   * Navigates to the new step.\n   *\n   * @param index Index of the step in the workflow.\n   */\n  public onOpenStep(index: number): void {\n    if (index >= 0 && index < this.steps.length) {\n      const step = this.steps[index];\n      this.activeStep = index;\n      if (step.type === ContentType.form) {\n        this.router.navigate(['./' + step.type + '/' + step.id], {\n          relativeTo: this.route,\n        });\n      } else {\n        this.router.navigate(['./' + step.type + '/' + step.content], {\n          relativeTo: this.route,\n        });\n      }\n    } else {\n      this.router.navigate(['./'], { relativeTo: this.route });\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./workflow.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Workflow page component for application preview</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "previewService",
                        "type": "PreviewService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 40,
                "rawdescription": "\n\nWorkflow page component for application preview\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1338,
                            "end": 1344,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1332,
                            "end": 1337,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1372,
                            "end": 1377,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1366,
                            "end": 1371,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular activated route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1414,
                            "end": 1422,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1408,
                            "end": 1413,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1459,
                            "end": 1465,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1453,
                            "end": 1458,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1493,
                            "end": 1507,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "previewService"
                        },
                        "type": "PreviewService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1487,
                            "end": 1492,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared preview service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1543,
                            "end": 1552,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1537,
                            "end": 1542,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate service</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- STEPS -->\n<shared-workflow-stepper\n  class=\"-mt-8 -mx-6 block\"\n  [loading]=\"loading\"\n  [steps]=\"steps\"\n  (openStep)=\"onOpenStep($event)\"\n  [activeStep]=\"activeStep\"\n>\n</shared-workflow-stepper>\n<router-outlet\n  (activate)=\"onActivate($event)\"\n  (deactivate)=\"clearSubscriptions()\"\n></router-outlet>\n"
        },
        {
            "name": "WorkflowComponent",
            "id": "component-WorkflowComponent-f8279710337ad188ae69fb995e717e70c5d5d00c67e7bdee57c90211f2ce9c31ebbf0aa464c55a6c8ffc8496a9fd1e0c3179d26dc7b1baf6e5823dfbabe70bcf-1",
            "file": "apps/back-office/src/app/application/pages/workflow/workflow.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-workflow",
            "styleUrls": [
                "./workflow.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./workflow.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeStep",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>Active step index</p>\n",
                    "line": 57,
                    "rawdescription": "\nActive step index",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "applicationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>Application id</p>\n",
                    "line": 41,
                    "rawdescription": "\nApplication id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "applications",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Application[]",
                    "optional": false,
                    "description": "<p>Application list</p>\n",
                    "line": 65,
                    "rawdescription": "\nApplication list",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "canEditName",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>True if the user can edit the workflow name</p>\n",
                    "line": 49,
                    "rawdescription": "\nTrue if the user can edit the workflow name",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "canUpdate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>True if the user can update the workflow</p>\n",
                    "line": 53,
                    "rawdescription": "\nTrue if the user can update the workflow",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "changeStepSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "<p>Subscription to change step events</p>\n",
                    "line": 59,
                    "rawdescription": "\nSubscription to change step events",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dialog",
                    "optional": false,
                    "description": "Dialog service",
                    "line": 87,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>True if the workflow name form is active</p>\n",
                    "line": 51,
                    "rawdescription": "\nTrue if the workflow name form is active",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Workflow id</p>\n",
                    "line": 39,
                    "rawdescription": "\nWorkflow id",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Loading state</p>\n",
                    "line": 35,
                    "rawdescription": "\nLoading state",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showAppMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>True if the application menu is open</p>\n",
                    "line": 63,
                    "rawdescription": "\nTrue if the application menu is open",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "steps",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Step[]",
                    "optional": false,
                    "description": "<p>Workflow steps</p>\n",
                    "line": 45,
                    "rawdescription": "\nWorkflow steps",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "workflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Workflow",
                    "optional": true,
                    "description": "<p>Workflow</p>\n",
                    "line": 43,
                    "rawdescription": "\nWorkflow",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clearSubscriptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 308,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClear subscriptions set from the router-outlet\n",
                    "description": "<p>Clear subscriptions set from the router-outlet</p>\n"
                },
                {
                    "name": "goToNextStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 360,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNavigates to the next step if possible and change selected step / index consequently\n",
                    "description": "<p>Navigates to the next step if possible and change selected step / index consequently</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "goToPreviousStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 383,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNavigates to the previous step if possible and change selected step / index consequently\n",
                    "description": "<p>Navigates to the previous step if possible and change selected step / index consequently</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onActivate",
                    "args": [
                        {
                            "name": "elementRef",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 291,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGo to next step\n\n",
                    "description": "<p>Go to next step</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9394,
                                "end": 9404,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "elementRef"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9388,
                                "end": 9393,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Element ref of workflow component</p>\n"
                        }
                    ]
                },
                {
                    "name": "onAddStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 282,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNavigate to the add-step component.\n",
                    "description": "<p>Navigate to the add-step component.</p>\n"
                },
                {
                    "name": "onDeleteStep",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDeletes a step if authorized.\n\n",
                    "description": "<p>Deletes a step if authorized.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6439,
                                "end": 6444,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "index"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6433,
                                "end": 6438,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>index of step to delete</p>\n"
                        }
                    ]
                },
                {
                    "name": "onOpenSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 429,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpen settings modal.\n",
                    "description": "<p>Open settings modal.</p>\n",
                    "modifierKind": [
                        123,
                        132
                    ]
                },
                {
                    "name": "onOpenStep",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 408,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpen selected step\n\n",
                    "description": "<p>Open selected step</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 12694,
                                "end": 12699,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "index"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 12688,
                                "end": 12693,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>index of selected step</p>\n"
                        }
                    ]
                },
                {
                    "name": "onReorderSteps",
                    "args": [
                        {
                            "name": "steps",
                            "type": "Step[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 317,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSaves the new ordering\n\n",
                    "description": "<p>Saves the new ordering</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9965,
                                "end": 9970,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "steps"
                            },
                            "type": "Step[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9959,
                                "end": 9964,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>steps order.</p>\n"
                        }
                    ]
                },
                {
                    "name": "saveName",
                    "args": [
                        {
                            "name": "workflowName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 185,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdates the name of the workflow and his linked page.\n\n",
                    "description": "<p>Updates the name of the workflow and his linked page.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5960,
                                "end": 5972,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "workflowName"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5954,
                                "end": 5959,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>new workflow name</p>\n"
                        }
                    ]
                },
                {
                    "name": "toggleFormActive",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggle workflow name form.\n",
                    "description": "<p>Toggle workflow name form.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Application workflow page component.</p>\n",
            "rawdescription": "\n\nApplication workflow page component.\n",
            "type": "component",
            "sourceCode": "import { Apollo } from 'apollo-angular';\nimport { Component, OnInit } from '@angular/core';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  Workflow,\n  Step,\n  ConfirmService,\n  ContentType,\n  ApplicationService,\n  WorkflowService,\n  AuthService,\n  Application,\n  UnsubscribeComponent,\n  DeleteStepMutationResponse,\n  EditWorkflowMutationResponse,\n} from '@oort-front/shared';\nimport { DELETE_STEP, EDIT_WORKFLOW } from './graphql/mutations';\nimport { TranslateService } from '@ngx-translate/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { SnackbarService } from '@oort-front/ui';\nimport { Subscription } from 'rxjs';\n\n/**\n * Application workflow page component.\n */\n@Component({\n  selector: 'app-workflow',\n  templateUrl: './workflow.component.html',\n  styleUrls: ['./workflow.component.scss'],\n})\nexport class WorkflowComponent extends UnsubscribeComponent implements OnInit {\n  // === DATA ===\n  /** Loading state */\n  public loading = true;\n\n  // === WORKFLOW ===\n  /** Workflow id */\n  public id = '';\n  /** Application id */\n  public applicationId?: string;\n  /** Workflow */\n  public workflow?: Workflow;\n  /** Workflow steps */\n  public steps: Step[] = [];\n\n  // === WORKFLOW EDITION ===\n  /** True if the user can edit the workflow name */\n  public canEditName = false;\n  /** True if the workflow name form is active */\n  public formActive = false;\n  /** True if the user can update the workflow */\n  public canUpdate = false;\n\n  // === ACTIVE STEP ===\n  /** Active step index */\n  public activeStep = 0;\n  /** Subscription to change step events */\n  private changeStepSubscription!: Subscription;\n\n  // === DUP APP SELECTION ===\n  /** True if the application menu is open */\n  public showAppMenu = false;\n  /** Application list */\n  public applications: Application[] = [];\n\n  /**\n   * Application workflow page component\n   *\n   * @param apollo Apollo service\n   * @param workflowService Shared workflow service\n   * @param applicationService Shared application service\n   * @param route Angular activated route\n   * @param router Angular router\n   * @param dialog Dialog service\n   * @param snackBar Shared snackbar service\n   * @param authService Shared authentication service\n   * @param confirmService Shared confirm service\n   * @param translate Angular translate module.\n   */\n  constructor(\n    private apollo: Apollo,\n    private workflowService: WorkflowService,\n    private applicationService: ApplicationService,\n    private route: ActivatedRoute,\n    private router: Router,\n    public dialog: Dialog,\n    private snackBar: SnackbarService,\n    private authService: AuthService,\n    private confirmService: ConfirmService,\n    private translate: TranslateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.formActive = false;\n    this.route.params.pipe(takeUntil(this.destroy$)).subscribe((params) => {\n      this.loading = true;\n      this.id = params.id;\n      this.workflowService.loadWorkflow(this.id);\n    });\n\n    this.workflowService.workflow$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((workflow: Workflow | null) => {\n        if (workflow) {\n          this.steps = workflow.steps || [];\n          this.loading = false;\n          if (!this.workflow || workflow.id !== this.workflow.id) {\n            const firstStep = this.steps[0];\n            if (firstStep) {\n              const firstStepIsForm = firstStep.type === ContentType.form;\n              const currentStepId = this.router.url.split('/').pop();\n              // If redirect to the workflow beginning, just go to the firstStep\n              let currentStep: Step = firstStep;\n              let currentActiveStep = 0;\n              if (\n                !(firstStepIsForm\n                  ? firstStep.id === currentStepId\n                  : firstStep.content === currentStepId)\n              ) {\n                // If not, URL contains the step id so redirect to the selected step (used for when refresh page or shared dashboard step link)\n                workflow?.steps?.forEach((step: Step, index: number) => {\n                  const stepIsForm = step.type === ContentType.form;\n                  if (\n                    (stepIsForm && step.id === currentStepId) ||\n                    step.content === currentStepId\n                  ) {\n                    currentStep = step;\n                    currentActiveStep = index;\n                    return;\n                  }\n                });\n              }\n              if (currentStep.type === ContentType.form) {\n                this.router.navigate(\n                  ['./' + currentStep.type + '/' + currentStep.id],\n                  { relativeTo: this.route }\n                );\n              } else {\n                this.router.navigate(\n                  ['./' + currentStep.type + '/' + currentStep.content],\n                  { relativeTo: this.route }\n                );\n              }\n              this.activeStep = currentActiveStep;\n            }\n            if (!firstStep) {\n              this.router.navigate([`./`], { relativeTo: this.route });\n            }\n          } else {\n            if (\n              workflow.steps &&\n              workflow.steps.length > (this.workflow.steps || []).length\n            ) {\n              this.activeStep = workflow.steps.length - 1;\n            }\n          }\n          this.workflow = workflow;\n          this.canEditName = this.workflow?.page?.canUpdate || false;\n          this.applicationId = this.workflow.page?.application?.id;\n          this.canUpdate = this.workflow.canUpdate || false;\n        } else {\n          this.loading = true;\n          this.steps = [];\n        }\n      });\n  }\n\n  /**\n   * Toggle workflow name form.\n   */\n  toggleFormActive(): void {\n    if (this.workflow?.page?.canUpdate) {\n      this.formActive = !this.formActive;\n    }\n  }\n\n  /**\n   * Updates the name of the workflow and his linked page.\n   *\n   * @param workflowName new workflow name\n   */\n  saveName(workflowName: string): void {\n    if (workflowName && workflowName !== this.workflow?.name) {\n      const callback = () => {\n        this.workflow = { ...this.workflow, name: workflowName };\n      };\n      this.applicationService.updatePageName(\n        {\n          id: this.workflow?.page?.id,\n          name: workflowName,\n        },\n        callback\n      );\n    }\n  }\n\n  /**\n   * Deletes a step if authorized.\n   *\n   * @param index index of step to delete\n   */\n  onDeleteStep(index: number): void {\n    if (index >= 0 && index < this.steps.length) {\n      const step = this.steps[index];\n      const currentStep =\n        this.activeStep >= 0 ? this.steps[this.activeStep] : null;\n      const dialogRef = this.confirmService.openConfirmModal({\n        title: this.translate.instant('common.deleteObject', {\n          name: this.translate.instant('common.step.one'),\n        }),\n        content: this.translate.instant(\n          'pages.workflow.deleteStep.confirmationMessage',\n          { step: step.name }\n        ),\n        confirmText: this.translate.instant('components.confirmModal.delete'),\n        confirmVariant: 'danger',\n      });\n      dialogRef.closed\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((value: any) => {\n          if (value) {\n            this.apollo\n              .mutate<DeleteStepMutationResponse>({\n                mutation: DELETE_STEP,\n                variables: {\n                  id: step.id,\n                },\n              })\n              .subscribe({\n                next: ({ errors, data }) => {\n                  if (errors) {\n                    this.snackBar.openSnackBar(\n                      this.translate.instant(\n                        'common.notifications.objectNotDeleted',\n                        {\n                          value: this.translate.instant('common.step.one'),\n                          error: errors ? errors[0].message : '',\n                        }\n                      ),\n                      { error: true }\n                    );\n                  } else {\n                    if (data) {\n                      this.snackBar.openSnackBar(\n                        this.translate.instant(\n                          'common.notifications.objectDeleted',\n                          {\n                            value: this.translate.instant('common.step.one'),\n                          }\n                        )\n                      );\n                      this.steps = this.steps.filter(\n                        (x) => x.id !== data?.deleteStep.id\n                      );\n                      if (index === this.activeStep) {\n                        this.onOpenStep(-1);\n                      } else {\n                        if (currentStep) {\n                          this.activeStep = this.steps.findIndex(\n                            (x) => x.id === currentStep.id\n                          );\n                        }\n                      }\n                    }\n                  }\n                },\n                error: (err) => {\n                  this.snackBar.openSnackBar(err.message, { error: true });\n                },\n              });\n          }\n        });\n    }\n  }\n\n  /**\n   * Navigate to the add-step component.\n   */\n  onAddStep(): void {\n    this.router.navigate(['./add-step'], { relativeTo: this.route });\n  }\n\n  /**\n   * Go to next step\n   *\n   * @param elementRef Element ref of workflow component\n   */\n  onActivate(elementRef: any): void {\n    if (elementRef.changeStep) {\n      this.changeStepSubscription = elementRef.changeStep.subscribe(\n        (event: number) => {\n          if (event > 0) {\n            this.goToNextStep();\n          } else {\n            this.goToPreviousStep();\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Clear subscriptions set from the router-outlet\n   */\n  clearSubscriptions() {\n    this.changeStepSubscription?.unsubscribe();\n  }\n\n  /**\n   * Saves the new ordering\n   *\n   * @param steps steps order.\n   */\n  onReorderSteps(steps: Step[]): void {\n    const currentStep =\n      this.activeStep >= 0 ? this.steps[this.activeStep] : null;\n    this.apollo\n      .mutate<EditWorkflowMutationResponse>({\n        mutation: EDIT_WORKFLOW,\n        variables: {\n          id: this.id,\n          steps: steps.map((step) => step.id),\n        },\n      })\n      .subscribe({\n        next: ({ errors, data }) => {\n          if (data) {\n            this.snackBar.openSnackBar(\n              this.translate.instant('common.notifications.objectReordered', {\n                type: this.translate.instant('common.step.one'),\n              })\n            );\n            if (currentStep) {\n              const index = steps.findIndex((x) => x.id === currentStep.id);\n              this.activeStep = index;\n            }\n            this.steps = steps;\n          } else {\n            this.snackBar.openSnackBar(\n              this.translate.instant('common.notifications.objectNotUpdated', {\n                type: this.translate.instant('common.workflow.one'),\n                error: errors ? errors[0].message : '',\n              }),\n              { error: true }\n            );\n          }\n        },\n        error: (err) => {\n          this.snackBar.openSnackBar(err.message, { error: true });\n        },\n      });\n  }\n\n  /**\n   * Navigates to the next step if possible and change selected step / index consequently\n   */\n  private goToNextStep(): void {\n    if (this.activeStep + 1 < this.steps.length) {\n      this.onOpenStep(this.activeStep + 1);\n    } else if (this.activeStep + 1 === this.steps.length) {\n      this.onOpenStep(0);\n      this.snackBar.openSnackBar(\n        this.translate.instant('models.workflow.notifications.goToStep', {\n          step: this.steps[0].name,\n        })\n      );\n    } else {\n      this.snackBar.openSnackBar(\n        this.translate.instant(\n          'models.workflow.notifications.cannotGoToNextStep'\n        ),\n        { error: true }\n      );\n    }\n  }\n\n  /**\n   * Navigates to the previous step if possible and change selected step / index consequently\n   */\n  private goToPreviousStep(): void {\n    if (this.activeStep > 0) {\n      this.onOpenStep(this.activeStep - 1);\n    } else if (this.activeStep === 0) {\n      this.onOpenStep(this.steps.length - 1);\n      this.snackBar.openSnackBar(\n        this.translate.instant('models.workflow.notifications.goToStep', {\n          step: this.steps[this.steps.length - 1].name,\n        })\n      );\n    } else {\n      this.snackBar.openSnackBar(\n        this.translate.instant(\n          'models.workflow.notifications.cannotGoToPreviousStep'\n        ),\n        { error: true }\n      );\n    }\n  }\n\n  /**\n   * Open selected step\n   *\n   * @param index index of selected step\n   */\n  public onOpenStep(index: number): void {\n    if (index >= 0 && index < this.steps.length) {\n      const step = this.steps[index];\n      this.activeStep = index;\n      if (step.type === ContentType.form) {\n        this.router.navigate(['./' + step.type + '/' + step.id], {\n          relativeTo: this.route,\n        });\n      } else {\n        this.router.navigate(['./' + step.type + '/' + step.content], {\n          relativeTo: this.route,\n        });\n      }\n    } else {\n      this.router.navigate(['./'], { relativeTo: this.route });\n    }\n  }\n\n  /**\n   * Open settings modal.\n   */\n  public async onOpenSettings(): Promise<void> {\n    const { ViewSettingsModalComponent } = await import(\n      '../../../components/view-settings-modal/view-settings-modal.component'\n    );\n    const dialogRef = this.dialog.open(ViewSettingsModalComponent, {\n      data: {\n        type: 'page',\n        applicationId: this.applicationId,\n        page: this.workflow?.page,\n        icon: this.workflow?.page?.icon,\n        visible: this.workflow?.page?.visible,\n        accessData: {\n          access: this.workflow?.permissions,\n          application: this.applicationId,\n          objectTypeName: this.translate.instant('common.page.one'),\n        },\n        canUpdate: this.workflow?.page?.canUpdate || false,\n      },\n    });\n    // Subscribes to settings updates\n    const subscription = dialogRef.componentInstance?.onUpdate\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((updates: any) => {\n        if (updates) {\n          this.workflow = {\n            ...this.workflow,\n            ...(updates.permissions && updates),\n            page: {\n              ...this.workflow?.page,\n              ...(!updates.permissions && updates),\n            },\n          };\n        }\n      });\n    // Unsubscribe to dialog onUpdate event\n    dialogRef.closed.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      subscription?.unsubscribe();\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./workflow.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Application workflow page component</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "workflowService",
                        "type": "WorkflowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "applicationService",
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 65,
                "rawdescription": "\n\nApplication workflow page component\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1928,
                            "end": 1934,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "apollo"
                        },
                        "type": "Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1922,
                            "end": 1927,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Apollo service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 1962,
                            "end": 1977,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "workflowService"
                        },
                        "type": "WorkflowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1956,
                            "end": 1961,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared workflow service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2014,
                            "end": 2032,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "applicationService"
                        },
                        "type": "ApplicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2008,
                            "end": 2013,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared application service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2072,
                            "end": 2077,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "route"
                        },
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2066,
                            "end": 2071,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular activated route</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2114,
                            "end": 2120,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2108,
                            "end": 2113,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular router</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2148,
                            "end": 2154,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "dialog"
                        },
                        "type": "Dialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2142,
                            "end": 2147,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Dialog service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2182,
                            "end": 2190,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "snackBar"
                        },
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2176,
                            "end": 2181,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared snackbar service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2227,
                            "end": 2238,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "authService"
                        },
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2221,
                            "end": 2226,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared authentication service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2281,
                            "end": 2295,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "confirmService"
                        },
                        "type": "ConfirmService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2275,
                            "end": 2280,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Shared confirm service</p>\n"
                    },
                    {
                        "name": {
                            "pos": 2331,
                            "end": 2340,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "translate"
                        },
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2325,
                            "end": 2330,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>Angular translate module.</p>\n"
                    }
                ]
            },
            "extends": "UnsubscribeComponent",
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "WorkflowComponent-1",
            "templateData": "<!-- Skeleton when loading -->\n<ng-container\n  *sharedSkeleton=\"\n    loading;\n    repeat: 1;\n    height: '32px';\n    width: '120px';\n    shape: 'rectangle'\n  \"\n>\n  <ng-container *ngIf=\"workflow\">\n    <div class=\"flex flex-wrap items-center justify-between mb-6 gap-4\">\n      <!-- Editable Title -->\n      <div class=\"flex items-center gap-1\">\n        <shared-editable-text\n          [text]=\"workflow.name\"\n          [canEdit]=\"canEditName\"\n          (onChange)=\"saveName($event)\"\n          (formActiveEvent)=\"formActive = $event\"\n        >\n          <h1 class=\"!m-0 overflow-hidden text-ellipsis\">\n            {{ workflow.name }}\n          </h1>\n        </shared-editable-text>\n        <ui-button\n          *ngIf=\"!formActive\"\n          variant=\"grey\"\n          (click)=\"onOpenSettings()\"\n          [isIcon]=\"true\"\n          icon=\"settings\"\n          [uiTooltip]=\"'common.settings' | translate\"\n        ></ui-button>\n      </div>\n      <ui-button *ngIf=\"canUpdate\" icon=\"add\" (click)=\"onAddStep()\">{{\n        'models.step.new' | translate\n      }}</ui-button>\n    </div>\n  </ng-container>\n</ng-container>\n<!-- STEPS -->\n<shared-workflow-stepper\n  class=\"-mx-6 block\"\n  [loading]=\"loading\"\n  [steps]=\"steps\"\n  [canUpdate]=\"canUpdate\"\n  (openStep)=\"onOpenStep($event)\"\n  (delete)=\"onDeleteStep($event)\"\n  (reorderSteps)=\"onReorderSteps($event)\"\n  [activeStep]=\"activeStep\"\n>\n</shared-workflow-stepper>\n<router-outlet\n  (activate)=\"onActivate($event)\"\n  (deactivate)=\"clearSubscriptions()\"\n></router-outlet>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "createButtonActionForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/dashboard/components/edit-button-action/edit-button-action.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(data?: ButtonActionT) => {\n  return new FormGroup({\n    text: new FormControl(get(data, 'text', ''), Validators.required),\n    href: new FormControl(get(data, 'href', ''), Validators.required),\n    variant: new FormControl(get(data, 'variant', 'primary')),\n    category: new FormControl(get(data, 'category', 'secondary')),\n    openInNewTab: new FormControl(get(data, 'openInNewTab', true)),\n  });\n}",
                "rawdescription": "Create a form group for the button action",
                "description": "<p>Create a form group for the button action</p>\n"
            },
            {
                "name": "createContextDatasourceForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/dashboard/components/context-datasource/context-datasource.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(data?: PageContextT) => {\n  return new FormGroup({\n    resource: new FormControl(\n      data && 'resource' in data ? data.resource : null\n    ),\n    refData: new FormControl(data && 'refData' in data ? data.refData : null),\n    displayField: new FormControl(\n      data && data.displayField ? data.displayField : null,\n      [Validators.required]\n    ),\n  });\n}",
                "rawdescription": "Create a form group for the page context datasource selection",
                "description": "<p>Create a form group for the page context datasource selection</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/components/upload-menu/upload-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "() => {\n  return {\n    props: {},\n  };\n}",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "() => {\n  return {\n    props: {\n      iconControl: new FormControl(),\n    },\n  };\n}",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "DEFAULT_COLUMNS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/form-records/form-records.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['_incrementalId', '_actions']",
                "rawdescription": "Static columns ( appear whatever the form )",
                "description": "<p>Static columns ( appear whatever the form )</p>\n"
            },
            {
                "name": "DEFAULT_FIELDS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/pull-jobs/components/edit-pull-job-modal/edit-pull-job-modal.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['createdBy']",
                "rawdescription": "Default fields",
                "description": "<p>Default fields</p>\n"
            },
            {
                "name": "DEFAULT_PAGE_SIZE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/applications/applications.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10",
                "rawdescription": "Default number of items per request for pagination",
                "description": "<p>Default number of items per request for pagination</p>\n"
            },
            {
                "name": "DEFAULT_PAGE_SIZE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/forms/forms.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10",
                "rawdescription": "Default number of items for pagination",
                "description": "<p>Default number of items for pagination</p>\n"
            },
            {
                "name": "DEFAULT_PAGE_SIZE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/resources/resources.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10",
                "rawdescription": "Default number of resources that will be shown at once.",
                "description": "<p>Default number of resources that will be shown at once.</p>\n"
            },
            {
                "name": "DEFAULT_QUERY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/reference-data/reference-data.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`query {\\n  \\n}`",
                "rawdescription": "Default graphql query",
                "description": "<p>Default graphql query</p>\n"
            },
            {
                "name": "DEFAULT_STYLE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/components/custom-style/custom-style.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "''",
                "rawdescription": "Default css style example to initialize the form and editor",
                "description": "<p>Default css style example to initialize the form and editor</p>\n"
            },
            {
                "name": "ENCRYPTED_VALUE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/api-configuration/api-configuration.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'●●●●●●●●●●●●●'",
                "rawdescription": "Default value shown for private settings fields",
                "description": "<p>Default value shown for private settings fields</p>\n"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  theme: {\n    primary: '#6f51ae',\n  },\n}",
                "rawdescription": "Provided environment",
                "description": "<p>Provided environment</p>\n"
            },
            {
                "name": "getAbilityForAppPreview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/app-preview/app-preview.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(app: Application, role: string) => {\n  const { can, rules } = new AbilityBuilder(AppAbility);\n  const permissions =\n    app.roles?.find((x) => x.id === role)?.permissions?.map((p) => p.type) ||\n    [];\n  // === Role ===\n  if (permissions.includes('can_see_roles')) {\n    can(['create', 'read', 'update', 'delete'], ['Role', 'Channel']);\n  }\n\n  // === User ===\n  if (permissions.includes('can_see_users')) {\n    can(['create', 'read', 'update', 'delete'], 'User');\n  }\n\n  // === Template ===\n  if (permissions.includes('can_manage_templates')) {\n    can(['create', 'read', 'update', 'delete', 'manage'], 'Template');\n  }\n\n  // === Distribution list ===\n  if (permissions.includes('can_manage_distribution_lists')) {\n    can(['create', 'read', 'update', 'delete', 'manage'], 'DistributionList');\n  }\n\n  // === Custom notifications===\n  if (permissions.includes('can_manage_custom_notifications')) {\n    can(['create', 'read', 'update', 'delete', 'manage'], 'CustomNotification');\n  }\n\n  return new AppAbility(rules);\n}",
                "rawdescription": "Creates a ability object the app preview\ngiven the application and the role to preview with",
                "description": "<p>Creates a ability object the app preview\ngiven the application and the role to preview with</p>\n"
            },
            {
                "name": "initializeApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): any => () => {\n  // Add fa icon font to check in the application\n  library.add(fas, fab);\n}",
                "rawdescription": "App initializer",
                "description": "<p>App initializer</p>\n"
            },
            {
                "name": "ITEMS_PER_PAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/application/pages/add-page/add-page.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10",
                "rawdescription": "Number of items per page",
                "description": "<p>Number of items per page</p>\n"
            },
            {
                "name": "ITEMS_PER_PAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/api-configurations/api-configurations.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10",
                "rawdescription": "Default items per page for pagination.",
                "description": "<p>Default items per page for pagination.</p>\n"
            },
            {
                "name": "ITEMS_PER_PAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/dashboard/dashboard.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10",
                "rawdescription": "Default number of records fetched per page",
                "description": "<p>Default number of records fetched per page</p>\n"
            },
            {
                "name": "ITEMS_PER_PAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/form-records/form-records.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10",
                "rawdescription": "Default items per query, for pagination",
                "description": "<p>Default items per query, for pagination</p>\n"
            },
            {
                "name": "ITEMS_PER_PAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/pull-jobs/pull-jobs.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10",
                "rawdescription": "Limit of pull jobs shown at once.",
                "description": "<p>Limit of pull jobs shown at once.</p>\n"
            },
            {
                "name": "ITEMS_PER_PAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/reference-data/reference-data.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10",
                "rawdescription": "Default pagination parameter.",
                "description": "<p>Default pagination parameter.</p>\n"
            },
            {
                "name": "ITEMS_PER_PAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/reference-datas/reference-datas.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10",
                "rawdescription": "Default pagination settings.",
                "description": "<p>Default pagination settings.</p>\n"
            },
            {
                "name": "ITEMS_PER_PAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/resource/records-tab/records-tab.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10",
                "rawdescription": "Quantity of resource that will be loaded at once.",
                "description": "<p>Quantity of resource that will be loaded at once.</p>\n"
            },
            {
                "name": "ITEMS_PER_PAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/application/pages/subscriptions/components/subscription-modal/subscription-modal.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10",
                "rawdescription": "Items per query for pagination",
                "description": "<p>Items per query for pagination</p>\n"
            },
            {
                "name": "ITEMS_PER_PAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/application/pages/workflow/components/add-step/add-step.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10",
                "rawdescription": "Default items per query for pagination",
                "description": "<p>Default items per query for pagination</p>\n"
            },
            {
                "name": "ITEMS_PER_PAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/pull-jobs/components/edit-pull-job-modal/edit-pull-job-modal.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10",
                "rawdescription": "Items per page for pagination",
                "description": "<p>Items per page for pagination</p>\n"
            },
            {
                "name": "RECORDS_DEFAULT_COLUMNS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/resource/records-tab/records-tab.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['_incrementalId', '_actions']",
                "rawdescription": "Default fields for the records.",
                "description": "<p>Default fields for the records.</p>\n"
            },
            {
                "name": "REQUEST_SNACKBAR_CONF",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/form-builder/form-builder.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  error: false,\n  duration: 2000,\n  data: { loading: false },\n}",
                "rawdescription": "Default snackbar config for after request complete",
                "description": "<p>Default snackbar config for after request complete</p>\n"
            },
            {
                "name": "ROUTE_TABS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/resource/resource.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string[]",
                "defaultValue": "[\n  'forms',\n  'layouts',\n  'aggregations',\n  'calculated-fields',\n  'records',\n]",
                "rawdescription": "Array of tab names sorted by position index.",
                "description": "<p>Array of tab names sorted by position index.</p>\n"
            },
            {
                "name": "SEPARATOR_KEYS_CODE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/dashboard/pages/reference-data/reference-data.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[ENTER, COMMA, TAB, SPACE]",
                "rawdescription": "Available separator for csv",
                "description": "<p>Available separator for csv</p>\n"
            },
            {
                "name": "SINGLE_WIDGET_PAGE_TYPES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/application/pages/add-page/add-page.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['grid', 'map', 'summaryCard', 'tabs']",
                "rawdescription": "Widget types that can be used as single widget page",
                "description": "<p>Widget types that can be used as single widget page</p>\n"
            },
            {
                "name": "WithValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "() => {\n  return {\n    props: {\n      iconControl: new FormControl('people-group'),\n    },\n  };\n}",
                "rawdescription": "Story with default value",
                "description": "<p>Story with default value</p>\n"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "UploadMenuComponent",
                "file": "apps/back-office/src/app/components/upload-menu/upload-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ViewIconSelectorComponent",
                "file": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "apps/back-office/src/app/dashboard/pages/dashboard/components/edit-button-action/edit-button-action.component.ts": [
                {
                    "name": "createButtonActionForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/dashboard/components/edit-button-action/edit-button-action.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(data?: ButtonActionT) => {\n  return new FormGroup({\n    text: new FormControl(get(data, 'text', ''), Validators.required),\n    href: new FormControl(get(data, 'href', ''), Validators.required),\n    variant: new FormControl(get(data, 'variant', 'primary')),\n    category: new FormControl(get(data, 'category', 'secondary')),\n    openInNewTab: new FormControl(get(data, 'openInNewTab', true)),\n  });\n}",
                    "rawdescription": "Create a form group for the button action",
                    "description": "<p>Create a form group for the button action</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/dashboard/components/context-datasource/context-datasource.component.ts": [
                {
                    "name": "createContextDatasourceForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/dashboard/components/context-datasource/context-datasource.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(data?: PageContextT) => {\n  return new FormGroup({\n    resource: new FormControl(\n      data && 'resource' in data ? data.resource : null\n    ),\n    refData: new FormControl(data && 'refData' in data ? data.refData : null),\n    displayField: new FormControl(\n      data && data.displayField ? data.displayField : null,\n      [Validators.required]\n    ),\n  });\n}",
                    "rawdescription": "Create a form group for the page context datasource selection",
                    "description": "<p>Create a form group for the page context datasource selection</p>\n"
                }
            ],
            "apps/back-office/src/app/components/upload-menu/upload-menu.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/components/upload-menu/upload-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "() => {\n  return {\n    props: {},\n  };\n}",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                }
            ],
            "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "() => {\n  return {\n    props: {\n      iconControl: new FormControl(),\n    },\n  };\n}",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  theme: {\n    primary: '#6f51ae',\n  },\n}",
                    "rawdescription": "Provided environment",
                    "description": "<p>Provided environment</p>\n"
                },
                {
                    "name": "initializeApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): any => () => {\n  // Add fa icon font to check in the application\n  library.add(fas, fab);\n}",
                    "rawdescription": "App initializer",
                    "description": "<p>App initializer</p>\n"
                },
                {
                    "name": "WithValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "() => {\n  return {\n    props: {\n      iconControl: new FormControl('people-group'),\n    },\n  };\n}",
                    "rawdescription": "Story with default value",
                    "description": "<p>Story with default value</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/form-records/form-records.component.ts": [
                {
                    "name": "DEFAULT_COLUMNS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/form-records/form-records.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['_incrementalId', '_actions']",
                    "rawdescription": "Static columns ( appear whatever the form )",
                    "description": "<p>Static columns ( appear whatever the form )</p>\n"
                },
                {
                    "name": "ITEMS_PER_PAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/form-records/form-records.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10",
                    "rawdescription": "Default items per query, for pagination",
                    "description": "<p>Default items per query, for pagination</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/pull-jobs/components/edit-pull-job-modal/edit-pull-job-modal.component.ts": [
                {
                    "name": "DEFAULT_FIELDS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/pull-jobs/components/edit-pull-job-modal/edit-pull-job-modal.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['createdBy']",
                    "rawdescription": "Default fields",
                    "description": "<p>Default fields</p>\n"
                },
                {
                    "name": "ITEMS_PER_PAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/pull-jobs/components/edit-pull-job-modal/edit-pull-job-modal.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10",
                    "rawdescription": "Items per page for pagination",
                    "description": "<p>Items per page for pagination</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/applications/applications.component.ts": [
                {
                    "name": "DEFAULT_PAGE_SIZE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/applications/applications.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10",
                    "rawdescription": "Default number of items per request for pagination",
                    "description": "<p>Default number of items per request for pagination</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/forms/forms.component.ts": [
                {
                    "name": "DEFAULT_PAGE_SIZE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/forms/forms.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10",
                    "rawdescription": "Default number of items for pagination",
                    "description": "<p>Default number of items for pagination</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/resources/resources.component.ts": [
                {
                    "name": "DEFAULT_PAGE_SIZE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/resources/resources.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10",
                    "rawdescription": "Default number of resources that will be shown at once.",
                    "description": "<p>Default number of resources that will be shown at once.</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/reference-data/reference-data.component.ts": [
                {
                    "name": "DEFAULT_QUERY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/reference-data/reference-data.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`query {\\n  \\n}`",
                    "rawdescription": "Default graphql query",
                    "description": "<p>Default graphql query</p>\n"
                },
                {
                    "name": "ITEMS_PER_PAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/reference-data/reference-data.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10",
                    "rawdescription": "Default pagination parameter.",
                    "description": "<p>Default pagination parameter.</p>\n"
                },
                {
                    "name": "SEPARATOR_KEYS_CODE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/reference-data/reference-data.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[ENTER, COMMA, TAB, SPACE]",
                    "rawdescription": "Available separator for csv",
                    "description": "<p>Available separator for csv</p>\n"
                }
            ],
            "apps/back-office/src/app/components/custom-style/custom-style.component.ts": [
                {
                    "name": "DEFAULT_STYLE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/components/custom-style/custom-style.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "''",
                    "rawdescription": "Default css style example to initialize the form and editor",
                    "description": "<p>Default css style example to initialize the form and editor</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/api-configuration/api-configuration.component.ts": [
                {
                    "name": "ENCRYPTED_VALUE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/api-configuration/api-configuration.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'●●●●●●●●●●●●●'",
                    "rawdescription": "Default value shown for private settings fields",
                    "description": "<p>Default value shown for private settings fields</p>\n"
                }
            ],
            "apps/back-office/src/app/app-preview/app-preview.component.ts": [
                {
                    "name": "getAbilityForAppPreview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/app-preview/app-preview.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(app: Application, role: string) => {\n  const { can, rules } = new AbilityBuilder(AppAbility);\n  const permissions =\n    app.roles?.find((x) => x.id === role)?.permissions?.map((p) => p.type) ||\n    [];\n  // === Role ===\n  if (permissions.includes('can_see_roles')) {\n    can(['create', 'read', 'update', 'delete'], ['Role', 'Channel']);\n  }\n\n  // === User ===\n  if (permissions.includes('can_see_users')) {\n    can(['create', 'read', 'update', 'delete'], 'User');\n  }\n\n  // === Template ===\n  if (permissions.includes('can_manage_templates')) {\n    can(['create', 'read', 'update', 'delete', 'manage'], 'Template');\n  }\n\n  // === Distribution list ===\n  if (permissions.includes('can_manage_distribution_lists')) {\n    can(['create', 'read', 'update', 'delete', 'manage'], 'DistributionList');\n  }\n\n  // === Custom notifications===\n  if (permissions.includes('can_manage_custom_notifications')) {\n    can(['create', 'read', 'update', 'delete', 'manage'], 'CustomNotification');\n  }\n\n  return new AppAbility(rules);\n}",
                    "rawdescription": "Creates a ability object the app preview\ngiven the application and the role to preview with",
                    "description": "<p>Creates a ability object the app preview\ngiven the application and the role to preview with</p>\n"
                }
            ],
            "apps/back-office/src/app/application/pages/add-page/add-page.component.ts": [
                {
                    "name": "ITEMS_PER_PAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/application/pages/add-page/add-page.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10",
                    "rawdescription": "Number of items per page",
                    "description": "<p>Number of items per page</p>\n"
                },
                {
                    "name": "SINGLE_WIDGET_PAGE_TYPES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/application/pages/add-page/add-page.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['grid', 'map', 'summaryCard', 'tabs']",
                    "rawdescription": "Widget types that can be used as single widget page",
                    "description": "<p>Widget types that can be used as single widget page</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/api-configurations/api-configurations.component.ts": [
                {
                    "name": "ITEMS_PER_PAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/api-configurations/api-configurations.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10",
                    "rawdescription": "Default items per page for pagination.",
                    "description": "<p>Default items per page for pagination.</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/dashboard/dashboard.component.ts": [
                {
                    "name": "ITEMS_PER_PAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/dashboard/dashboard.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10",
                    "rawdescription": "Default number of records fetched per page",
                    "description": "<p>Default number of records fetched per page</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/pull-jobs/pull-jobs.component.ts": [
                {
                    "name": "ITEMS_PER_PAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/pull-jobs/pull-jobs.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10",
                    "rawdescription": "Limit of pull jobs shown at once.",
                    "description": "<p>Limit of pull jobs shown at once.</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/reference-datas/reference-datas.component.ts": [
                {
                    "name": "ITEMS_PER_PAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/reference-datas/reference-datas.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10",
                    "rawdescription": "Default pagination settings.",
                    "description": "<p>Default pagination settings.</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/resource/records-tab/records-tab.component.ts": [
                {
                    "name": "ITEMS_PER_PAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/resource/records-tab/records-tab.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10",
                    "rawdescription": "Quantity of resource that will be loaded at once.",
                    "description": "<p>Quantity of resource that will be loaded at once.</p>\n"
                },
                {
                    "name": "RECORDS_DEFAULT_COLUMNS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/resource/records-tab/records-tab.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['_incrementalId', '_actions']",
                    "rawdescription": "Default fields for the records.",
                    "description": "<p>Default fields for the records.</p>\n"
                }
            ],
            "apps/back-office/src/app/application/pages/subscriptions/components/subscription-modal/subscription-modal.component.ts": [
                {
                    "name": "ITEMS_PER_PAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/application/pages/subscriptions/components/subscription-modal/subscription-modal.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10",
                    "rawdescription": "Items per query for pagination",
                    "description": "<p>Items per query for pagination</p>\n"
                }
            ],
            "apps/back-office/src/app/application/pages/workflow/components/add-step/add-step.component.ts": [
                {
                    "name": "ITEMS_PER_PAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/application/pages/workflow/components/add-step/add-step.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10",
                    "rawdescription": "Default items per query for pagination",
                    "description": "<p>Default items per query for pagination</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/form-builder/form-builder.component.ts": [
                {
                    "name": "REQUEST_SNACKBAR_CONF",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/form-builder/form-builder.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  error: false,\n  duration: 2000,\n  data: { loading: false },\n}",
                    "rawdescription": "Default snackbar config for after request complete",
                    "description": "<p>Default snackbar config for after request complete</p>\n"
                }
            ],
            "apps/back-office/src/app/dashboard/pages/resource/resource.component.ts": [
                {
                    "name": "ROUTE_TABS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/back-office/src/app/dashboard/pages/resource/resource.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "defaultValue": "[\n  'forms',\n  'layouts',\n  'aggregations',\n  'calculated-fields',\n  'records',\n]",
                    "rawdescription": "Array of tab names sorted by position index.",
                    "description": "<p>Array of tab names sorted by position index.</p>\n"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "apps/back-office/src/app/components/upload-menu/upload-menu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "UploadMenuComponent",
                    "file": "apps/back-office/src/app/components/upload-menu/upload-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ViewIconSelectorComponent",
                    "file": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 95,
        "status": "very-good",
        "files": [
            {
                "filePath": "apps/back-office/src/app/app-preview/app-preview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppPreviewComponent",
                "coveragePercent": 100,
                "coverageCount": "14/14",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/app-preview/app-preview.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getAbilityForAppPreview",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/app-preview/components/preview-toolbar/preview-toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PreviewToolbarComponent",
                "coveragePercent": 100,
                "coverageCount": "3/3",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/app-preview/pages/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 100,
                "coverageCount": "9/9",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/app-preview/pages/form/form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormComponent",
                "coveragePercent": 100,
                "coverageCount": "14/14",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/app-preview/pages/workflow/workflow.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WorkflowComponent",
                "coveragePercent": 100,
                "coverageCount": "15/15",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 100,
                "coverageCount": "5/5",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/application.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApplicationComponent",
                "coveragePercent": 94,
                "coverageCount": "18/19",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/add-page/add-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddPageComponent",
                "coveragePercent": 93,
                "coverageCount": "15/16",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/add-page/add-page.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ITEMS_PER_PAGE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/add-page/add-page.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SINGLE_WIDGET_PAGE_TYPES",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/archive/archive.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArchiveComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/channels/channels.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChannelsComponent",
                "coveragePercent": 90,
                "coverageCount": "10/11",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/channels/components/channel-modal/channel-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChannelModalComponent",
                "coveragePercent": 100,
                "coverageCount": "5/5",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/form/form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormComponent",
                "coveragePercent": 95,
                "coverageCount": "23/24",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/position-attributes/position-attributes.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PositionAttributesComponent",
                "coveragePercent": 88,
                "coverageCount": "8/9",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/position/components/position-modal/position-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PositionModalComponent",
                "coveragePercent": 100,
                "coverageCount": "5/5",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/position/position.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PositionComponent",
                "coveragePercent": 90,
                "coverageCount": "9/10",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/settings/settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SettingsComponent",
                "coveragePercent": 94,
                "coverageCount": "16/17",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/subscriptions/components/subscription-modal/subscription-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SubscriptionModalComponent",
                "coveragePercent": 94,
                "coverageCount": "18/19",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/subscriptions/components/subscription-modal/subscription-modal.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ITEMS_PER_PAGE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/subscriptions/subscriptions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SubscriptionsComponent",
                "coveragePercent": 90,
                "coverageCount": "10/11",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/workflow/components/add-step/add-step.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddStepComponent",
                "coveragePercent": 92,
                "coverageCount": "13/14",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/workflow/components/add-step/add-step.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ITEMS_PER_PAGE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/workflow/components/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/application/pages/workflow/workflow.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WorkflowComponent",
                "coveragePercent": 96,
                "coverageCount": "26/27",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/auth/pages/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 100,
                "coverageCount": "3/3",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/add-form-modal/add-form-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddFormModalComponent",
                "coveragePercent": 100,
                "coverageCount": "7/7",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/add-resource-modal/add-resource-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddResourceModalComponent",
                "coveragePercent": 100,
                "coverageCount": "4/4",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/application-header/application-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApplicationHeaderComponent",
                "coveragePercent": 92,
                "coverageCount": "12/13",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/custom-style/custom-style.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomStyleComponent",
                "coveragePercent": 87,
                "coverageCount": "14/16",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/custom-style/custom-style.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_STYLE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/dashboard-filter-settings/dashboard-filter-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardFilterSettingsComponent",
                "coveragePercent": 90,
                "coverageCount": "10/11",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/duplicate-application-modal/duplicate-application-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DuplicateApplicationModalComponent",
                "coveragePercent": 100,
                "coverageCount": "8/8",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/upload-menu/upload-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UploadMenuComponent",
                "coveragePercent": 100,
                "coverageCount": "13/13",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/upload-menu/upload-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewIconSelectorComponent",
                "coveragePercent": 100,
                "coverageCount": "2/2",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initializeApp",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/view-icon-selector/view-icon-selector.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithValue",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/view-settings-modal/view-settings-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewSettingsModalComponent",
                "coveragePercent": 95,
                "coverageCount": "20/21",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/components/view-settings-modal/view-settings-modal.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 10,
                "coverageCount": "1/10",
                "status": "low"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 100,
                "coverageCount": "5/5",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/api-configuration/api-configuration.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApiConfigurationComponent",
                "coveragePercent": 94,
                "coverageCount": "17/18",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/api-configuration/api-configuration.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ENCRYPTED_VALUE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/api-configurations/api-configurations.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApiConfigurationsComponent",
                "coveragePercent": 100,
                "coverageCount": "22/22",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/api-configurations/api-configurations.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ITEMS_PER_PAGE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/api-configurations/components/add-api-configuration/add-api-configuration.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddApiConfigurationComponent",
                "coveragePercent": 100,
                "coverageCount": "4/4",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/api-configurations/filter/filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterComponent",
                "coveragePercent": 90,
                "coverageCount": "9/10",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/applications/applications.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApplicationsComponent",
                "coveragePercent": 100,
                "coverageCount": "25/25",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/applications/applications.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_PAGE_SIZE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/applications/components/chose-role/chose-role.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChoseRoleComponent",
                "coveragePercent": 88,
                "coverageCount": "8/9",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/applications/components/filter/filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterComponent",
                "coveragePercent": 90,
                "coverageCount": "10/11",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/dashboard/components/context-datasource/context-datasource.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContextDatasourceComponent",
                "coveragePercent": 93,
                "coverageCount": "14/15",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/dashboard/components/context-datasource/context-datasource.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createContextDatasourceForm",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/dashboard/components/edit-button-action/edit-button-action.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditButtonActionComponent",
                "coveragePercent": 90,
                "coverageCount": "10/11",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/dashboard/components/edit-button-action/edit-button-action.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createButtonActionForm",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 97,
                "coverageCount": "46/47",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/dashboard/dashboard.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ITEMS_PER_PAGE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/form-answer/form-answer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormAnswerComponent",
                "coveragePercent": 90,
                "coverageCount": "9/10",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/form-builder/components/history/history.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HistoryComponent",
                "coveragePercent": 100,
                "coverageCount": "5/5",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/form-builder/form-builder.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormBuilderComponent",
                "coveragePercent": 96,
                "coverageCount": "29/30",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/form-builder/form-builder.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "REQUEST_SNACKBAR_CONF",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/form-records/form-records.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormRecordsComponent",
                "coveragePercent": 100,
                "coverageCount": "35/35",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/form-records/form-records.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_COLUMNS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/form-records/form-records.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ITEMS_PER_PAGE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/forms/components/filter/filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterComponent",
                "coveragePercent": 90,
                "coverageCount": "10/11",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/forms/forms.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormsComponent",
                "coveragePercent": 100,
                "coverageCount": "20/20",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/forms/forms.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_PAGE_SIZE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/pull-jobs/components/edit-pull-job-modal/edit-pull-job-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditPullJobModalComponent",
                "coveragePercent": 96,
                "coverageCount": "31/32",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/pull-jobs/components/edit-pull-job-modal/edit-pull-job-modal.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_FIELDS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/pull-jobs/components/edit-pull-job-modal/edit-pull-job-modal.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ITEMS_PER_PAGE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/pull-jobs/pull-jobs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PullJobsComponent",
                "coveragePercent": 93,
                "coverageCount": "15/16",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/pull-jobs/pull-jobs.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ITEMS_PER_PAGE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/reference-data/reference-data.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReferenceDataComponent",
                "coveragePercent": 97,
                "coverageCount": "47/48",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/reference-data/reference-data.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_QUERY",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/reference-data/reference-data.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ITEMS_PER_PAGE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/reference-data/reference-data.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SEPARATOR_KEYS_CODE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/reference-datas/add-reference-data/add-reference-data.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddReferenceDataComponent",
                "coveragePercent": 100,
                "coverageCount": "4/4",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/reference-datas/filter/filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterComponent",
                "coveragePercent": 87,
                "coverageCount": "7/8",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/reference-datas/reference-datas.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReferenceDatasComponent",
                "coveragePercent": 100,
                "coverageCount": "20/20",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/reference-datas/reference-datas.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ITEMS_PER_PAGE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/resource/aggregations-tab/aggregations-tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AggregationsTabComponent",
                "coveragePercent": 94,
                "coverageCount": "16/17",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/resource/calculated-fields-tab/calculated-fields-tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CalculatedFieldsTabComponent",
                "coveragePercent": 90,
                "coverageCount": "9/10",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/resource/components/data-presentation-list/data-presentation-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DataPresentationListComponent",
                "coveragePercent": 100,
                "coverageCount": "9/9",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/resource/forms-tab/forms-tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormsTabComponent",
                "coveragePercent": 87,
                "coverageCount": "7/8",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/resource/layouts-tab/layouts-tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutsTabComponent",
                "coveragePercent": 94,
                "coverageCount": "16/17",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/resource/records-tab/records-tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecordsTabComponent",
                "coveragePercent": 96,
                "coverageCount": "26/27",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/resource/records-tab/records-tab.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ITEMS_PER_PAGE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/resource/records-tab/records-tab.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RECORDS_DEFAULT_COLUMNS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/resource/resource.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResourceComponent",
                "coveragePercent": 100,
                "coverageCount": "9/9",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/resource/resource.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ROUTE_TABS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/resources/filter/filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterComponent",
                "coveragePercent": 90,
                "coverageCount": "10/11",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/resources/resources.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResourcesComponent",
                "coveragePercent": 100,
                "coverageCount": "20/20",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/resources/resources.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_PAGE_SIZE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/update-record/update-record.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateRecordComponent",
                "coveragePercent": 85,
                "coverageCount": "6/7",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/dashboard/pages/users/users.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UsersComponent",
                "coveragePercent": 100,
                "coverageCount": "7/7",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/shared/pages/role-summary/role-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoleSummaryComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/shared/pages/roles/roles.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RolesComponent",
                "coveragePercent": 100,
                "coverageCount": "3/3",
                "status": "very-good"
            },
            {
                "filePath": "apps/back-office/src/app/shared/pages/user-summary/user-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserSummaryComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            }
        ]
    }
}